{"version":3,"sources":["nlp_compromise.es6.js"],"names":[],"mappings":"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","file":"nlp_compromise.es5.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n//these are common word shortenings used in the lexicon and sentence segmentation methods\n//there are all nouns, or at the least, belong beside one.\n'use strict';\nconst honourifics = require('./honourifics'); //stored seperately, for 'noun.is_person()'\n\n//common abbreviations\nlet main = [\n  'arc', 'al', 'exp', 'rd', 'st', 'dist', 'mt', 'fy', 'pd', 'pl', 'plz', 'tce', 'llb', 'md', 'bl', 'ma', 'ba', 'lit',\n  'ex', 'eg', 'ie', 'circa', 'ca', 'cca', 'vs', 'etc', 'esp', 'ft', 'bc', 'ad'\n];\n\n//person titles like 'jr', (stored seperately)\nmain = main.concat(honourifics);\n\n//org main\nlet orgs = [\n  'dept', 'univ', 'assn', 'bros', 'inc', 'ltd', 'co', 'corp',\n  //proper nouns with exclamation marks\n  'yahoo', 'joomla', 'jeopardy'\n];\nmain = main.concat(orgs);\n\n//place main\nlet places = [\n  'ala', 'ariz', 'ark', 'cal', 'calif', 'col', 'colo', 'conn', 'del', 'fed', 'fla', 'fl', 'ga', 'ida', 'ind', 'ia', 'la', 'kan', 'kans', 'ken', 'ky', 'la', 'md', 'mich', 'minn', 'mont', 'neb', 'nebr', 'nev', 'okla', 'penna', 'penn', 'pa', 'dak', 'tenn', 'tex', 'ut', 'vt', 'va', 'wash', 'wis', 'wisc', 'wy', 'wyo', 'usafa', 'alta', 'ont', 'que', 'sask', 'yuk',\n  'ave', 'blvd', 'cl', 'ct', 'cres', 'hwy'\n];\nmain = main.concat(places);\n\n//date abbrevs.\n//these are added seperately because they are not nouns\nlet dates = ['jan', 'feb', 'mar', 'apr', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec', 'sept', 'sep'];\nmain = main.concat(dates);\n\nmodule.exports = {\n  abbreviations: main,\n  dates: dates,\n  orgs: orgs,\n  places: places\n};\n\n},{\"./honourifics\":7}],2:[function(require,module,exports){\n//adjectives that either aren't covered by rules, or have superlative/comparative forms\n//this list is the seed, from which various forms are conjugated\nmodule.exports = [\n  'aberrant',\n  'ablaze',\n  'able',\n  'aboard',\n  'above',\n  'abrupt',\n  'absent',\n  'absolute',\n  'absorbing',\n  'abstract',\n  'abundant',\n  'accurate',\n  'actual',\n  'acute',\n  'cute',\n  'adept',\n  'adequate',\n  'adult',\n  'advanced',\n  'adverse',\n  'afraid',\n  'against',\n  'agonizing',\n  'ahead',\n  'alarming',\n  'alcoholic',\n  'all',\n  'aloof',\n  'amazing',\n  'antiquated',\n  'apparent',\n  'appetizing',\n  'appropriate',\n  'apt',\n  'arab',\n  'arbitrary',\n  'arrogant',\n  'artificial',\n  'asleep',\n  'astonishing',\n  'authentic',\n  'average',\n  'awake',\n  'aware',\n  'awkward',\n  'back',\n  'backwards',\n  'bad',\n  'bald',\n  'bankrupt',\n  'barren',\n  'bawdy',\n  'behind',\n  'beloved',\n  'beneficial',\n  'bent',\n  'best',\n  'better',\n  'beyond',\n  'bizarre',\n  'bland',\n  'blank',\n  'blind',\n  'blond',\n  'bloody',\n  'bogus',\n  'bold',\n  'bottom',\n  'bouncy',\n  'brilliant',\n  'brisk',\n  'broken',\n  'burly',\n  'busy',\n  'cagey',\n  'calming',\n  'careful',\n  'caring',\n  'certain',\n  'cheesy',\n  'chief',\n  'chilly',\n  'civil',\n  'clever',\n  'closed',\n  'cloudy',\n  'colonial',\n  'colossal',\n  'commercial',\n  'common',\n  'complete',\n  'complex',\n  'concerned',\n  'concrete',\n  'congruent',\n  'constant',\n  'contemporary',\n  'contrary',\n  'cooing',\n  'correct',\n  'corrupt',\n  'costly',\n  'covert',\n  'cowardly',\n  'cozy',\n  'cramped',\n  'craven',\n  'crazed',\n  'crisp',\n  'crowded',\n  'crucial',\n  'cuddly',\n  'daily',\n  'damaged',\n  'damaging',\n  'danish',\n  'dapper',\n  'dashing',\n  'deadpan',\n  'deaf',\n  'deeply',\n  'defiant',\n  'degenerate',\n  'deliberate',\n  'delicate',\n  'delightful',\n  'dense',\n  'deranged',\n  'desperate',\n  'detailed',\n  'determined',\n  'devout',\n  'didactic',\n  'difficult',\n  'dire',\n  'discreet',\n  'diseased',\n  'disgruntled',\n  'dishonest',\n  'disorderly',\n  'distant',\n  'distressed',\n  'diverse',\n  'divine',\n  'dominant',\n  'done',\n  'double',\n  'doubtful',\n  'downtown',\n  'dreary',\n  'due',\n  'dumb',\n  'earthly',\n  'east',\n  'eastern',\n  'easygoing',\n  'eerie',\n  'elaborate',\n  'elderly',\n  'elegant',\n  'elite',\n  'eminent',\n  'encouraging',\n  'entire',\n  'erect',\n  'essential',\n  'ethereal',\n  'everyday',\n  'evil',\n  'exact',\n  'excess',\n  'expected',\n  'expert',\n  'extra',\n  'extravagant',\n  'exuberant',\n  'exultant',\n  'fabled',\n  'fake',\n  'false',\n  'fancy',\n  'far',\n  'far-reaching',\n  'faulty',\n  'faux',\n  'favorite',\n  'female',\n  'feminine',\n  'fertile',\n  'fierce ',\n  'financial',\n  'finite',\n  'first',\n  'fit',\n  'fixed',\n  'flagrant',\n  'fluent',\n  'foamy',\n  'foolish',\n  'foregoing',\n  'foreign',\n  'former',\n  'fortunate',\n  'foul',\n  'frantic',\n  'freezing',\n  'frequent',\n  'fretful',\n  'friendly',\n  'friendly',\n  'fun',\n  'furry',\n  'future',\n  'gainful',\n  'gaudy',\n  'gay',\n  'generic',\n  'genuine',\n  'ghastly',\n  'ghostly',\n  'giant',\n  'giddy',\n  'gigantic',\n  'gleaming',\n  'global',\n  'gloomy',\n  'gold',\n  'gone',\n  'good',\n  'goofy',\n  'graceful',\n  'grateful',\n  'gratis',\n  'gray',\n  'grey',\n  'grisly',\n  'groovy',\n  'gross',\n  'guarded',\n  'half',\n  'hallowed',\n  'handy',\n  'hanging',\n  'harrowing',\n  'hateful',\n  'heady',\n  'heavenly',\n  'hefty',\n  'hellish',\n  'helpful',\n  'hesitant',\n  'highfalutin',\n  'hilly',\n  'hispanic',\n  'homely',\n  'honest',\n  'hooked',\n  'horrific',\n  'hostile',\n  'hourly',\n  'huge',\n  'humble',\n  'humdrum',\n  'humid',\n  'hurried',\n  'hurt',\n  'icy',\n  'ideal',\n  'ignorant',\n  'ill',\n  'illegal',\n  'immediate',\n  'immense',\n  'imminent',\n  'impartial',\n  'imperfect',\n  'imported',\n  'improper',\n  'inadequate',\n  'inappropriate',\n  'inbred',\n  'incorrect',\n  'indirect',\n  'indoor',\n  'influential',\n  'initial',\n  'innate',\n  'inner',\n  'insane',\n  'insecure',\n  'inside',\n  'instant',\n  'intact',\n  'intense',\n  'intermediate',\n  'intimate',\n  'intoxicated',\n  'irate',\n  'irrelevant',\n  'jagged',\n  'jolly',\n  'juicy',\n  'junior',\n  'justified',\n  'juvenile',\n  'kaput',\n  'kindly',\n  'knowing',\n  'labored',\n  'languid',\n  'last',\n  'latter',\n  'lax',\n  'learned',\n  'left',\n  'left-wing',\n  'legal',\n  'legendary',\n  'legitimate',\n  'less',\n  'lethal',\n  'level',\n  'lewd',\n  'likely',\n  'limited',\n  'literal',\n  'literate',\n  'lively',\n  'living',\n  'lofty',\n  'lonely',\n  'longing',\n  'lousy',\n  'loutish',\n  'lovely',\n  'loving',\n  'lowly',\n  'loyal',\n  'luxuriant',\n  'lying',\n  'macabre',\n  'madly',\n  'magenta',\n  'main',\n  'major',\n  'makeshift',\n  'male',\n  'malignant',\n  'mammoth',\n  'many',\n  'masculine',\n  'measly',\n  'meaty',\n  'medium',\n  'melancholy',\n  'menacing',\n  'mere',\n  'middle',\n  'mild',\n  'miniature',\n  'minor',\n  'miscreant',\n  'mixed',\n  'mobile',\n  'moderate',\n  'moldy',\n  'monthly',\n  'moody',\n  'moot',\n  'most',\n  'multiple',\n  'mute',\n  'naive',\n  'naked',\n  'nearby',\n  'necessary',\n  'neighborly',\n  'next',\n  'nightly',\n  'nimble',\n  'noble',\n  'nonchalant',\n  'nondescript',\n  'nonstop',\n  'north',\n  'northern',\n  'nosy',\n  'nuanced',\n  'obeisant',\n  'obese',\n  'obscene',\n  'obscure',\n  'observant',\n  'obsolete',\n  'offbeat',\n  'official',\n  'oily',\n  'ok',\n  'okay',\n  'ongoing',\n  'only',\n  'open',\n  'opposite',\n  'organic',\n  'other',\n  'outdoor',\n  'outer',\n  'outgoing',\n  'outside',\n  'oval',\n  'over',\n  'overall',\n  'overnight',\n  'overt',\n  'overweight',\n  'overwrought',\n  'painful',\n  'paralleled',\n  'part-time',\n  'partial',\n  'past',\n  'peaceful',\n  'perfect',\n  'permanent',\n  'perplexing',\n  'perverse',\n  'petite',\n  'phony',\n  'picayune',\n  'placid',\n  'plant',\n  'pleasant',\n  'polite',\n  'populist',\n  'potential',\n  'precise',\n  'pregnant',\n  'premature',\n  'premium',\n  'present',\n  'pricey',\n  'prickly',\n  'primary',\n  'prime',\n  'prior',\n  'pristine',\n  'private',\n  'pro',\n  'probable',\n  'profound',\n  'profuse',\n  'prominent',\n  'proper',\n  'public',\n  'pumped',\n  'puny',\n  'quack',\n  'quaint',\n  'quickest',\n  'rabid',\n  'racial',\n  'racist',\n  'ragged',\n  'random',\n  'ready',\n  'real',\n  'rear',\n  'rebel',\n  'recondite',\n  'redundant',\n  'refreshing',\n  'relevant',\n  'reluctant',\n  'remote',\n  'republican',\n  'resistant',\n  'resolute',\n  'resonant',\n  'retarded',\n  'right',\n  'right-wing',\n  'rightful',\n  'ritzy',\n  'rival',\n  'robust',\n  'romantic',\n  'roomy',\n  'rosy',\n  'rough',\n  'routine',\n  'royal',\n  'sacred',\n  'saintly',\n  'salty',\n  'same',\n  'savvy',\n  'scary',\n  'scathing',\n  'scientific',\n  'screeching',\n  'second',\n  'secondary',\n  'secret',\n  'secure',\n  'sedate',\n  'seemly',\n  'self-loathing',\n  'selfish',\n  'senior',\n  'separate',\n  'serene',\n  'severe',\n  'sexy',\n  'shady',\n  'shameful',\n  'sheer',\n  'shiny',\n  'shocking',\n  'shut',\n  'shy',\n  'sick',\n  'significant',\n  'silly',\n  'sincere',\n  'single',\n  'skinny',\n  'sleek',\n  'slender',\n  'slick',\n  'slight',\n  'slimy',\n  'sly',\n  'smelly',\n  'smug',\n  'snobbish',\n  'social',\n  'sole',\n  'solemn',\n  'somber',\n  'soothing',\n  'sophisticated',\n  'sordid',\n  'sorry',\n  'south',\n  'southern',\n  'soviet',\n  'spare',\n  'special',\n  'specific',\n  'spicy',\n  'spirited',\n  'splendid',\n  'sprightly',\n  'squeamish',\n  'standard',\n  'standing',\n  'stark',\n  'steadfast',\n  'steady',\n  'stereotyped',\n  'stern',\n  'still',\n  'straightforward',\n  'striped',\n  'stupid',\n  'sturdy',\n  'stylish',\n  'subdued',\n  'subsequent',\n  'substantial',\n  'subtle',\n  'sudden',\n  'super',\n  'superb',\n  'superficial',\n  'superior',\n  'supreme',\n  'sure',\n  'surprising',\n  'surreal',\n  'symbolic',\n  'taboo',\n  'talented',\n  'tan',\n  'tasteful',\n  'tawdry',\n  'teenage',\n  'telling',\n  'temporary',\n  'terrific',\n  'tested',\n  'thoughtful',\n  'tidy',\n  'timely',\n  'tiny',\n  'together',\n  'top',\n  'torpid',\n  'tranquil',\n  'trendy',\n  'trite',\n  'troubled',\n  'twin',\n  'ugly',\n  'ultimate',\n  'ultra',\n  'unappealing',\n  'unassuming',\n  'unauthorized',\n  'unbecoming',\n  'unconvincing',\n  'undecided',\n  'under',\n  'underground',\n  'understood',\n  'unending',\n  'uneven',\n  'unexpected',\n  'unfair',\n  'universal',\n  'unknown',\n  'unlikely',\n  'unprecedented',\n  'unpublished',\n  'unrecognized',\n  'unregulated',\n  'unrelated',\n  'unruly',\n  'unsightly',\n  'unsupervised',\n  'unsuspecting',\n  'untidy',\n  'unwieldy',\n  'unwritten',\n  'upbeat',\n  'upcoming',\n  'upper',\n  'uppity',\n  'upscale',\n  'upset',\n  'upstairs',\n  'uptight',\n  'urban',\n  'used',\n  'useful',\n  'usual',\n  'utter',\n  'uttermost',\n  'vacant',\n  'vagabond',\n  'vain',\n  'vanilla',\n  'various',\n  'vengeful',\n  'verdant',\n  'vexing',\n  'vibrant',\n  'violet',\n  'volatile',\n  'wanting',\n  'warped',\n  'wary',\n  'wasteful',\n  'weary',\n  'weekly',\n  'welcome',\n  'western',\n  'whole',\n  'wholesale',\n  'wicked',\n  'widespread',\n  'wily',\n  'wiry',\n  'wistful',\n  'womanly',\n  'wooden',\n  'woozy',\n  'wound',\n  'wrong',\n  'wry',\n  'yearly',\n  'zany'\n];\n\n},{}],3:[function(require,module,exports){\n//these are adjectives that can become comparative + superlative with out \"most/more\"\n//its a whitelist for conjugation\n//this data is shared between comparative/superlative methods\nmodule.exports = [\n  'absurd',\n  'aggressive',\n  'alert',\n  'alive',\n  'awesome',\n  'beautiful',\n  'big',\n  'bitter',\n  'black',\n  'blue',\n  'bored',\n  'boring',\n  'brash',\n  'brave',\n  'brief',\n  'bright',\n  'broad',\n  'brown',\n  'calm',\n  'charming',\n  'cheap',\n  'clean',\n  'cold',\n  'cool',\n  'cruel',\n  'cute',\n  'damp',\n  'deep',\n  'dear',\n  'dead',\n  'dark',\n  'dirty',\n  'drunk',\n  'dull',\n  'eager',\n  'efficient',\n  'even',\n  'faint',\n  'fair',\n  'fanc',\n  'fast',\n  'fat',\n  'feeble',\n  'few',\n  'fierce',\n  'fine',\n  'flat',\n  'forgetful',\n  'frail',\n  'full',\n  'gentle',\n  'glib',\n  'great',\n  'green',\n  'gruesome',\n  'handsome',\n  'hard',\n  'harsh',\n  'high',\n  'hollow',\n  'hot',\n  'impolite',\n  'innocent',\n  'keen',\n  'kind',\n  'lame',\n  'lean',\n  'light',\n  'little',\n  'loose',\n  'long',\n  'loud',\n  'low',\n  'lush',\n  'macho',\n  'mean',\n  'meek',\n  'mellow',\n  'mundane',\n  'near',\n  'neat',\n  'new',\n  'nice',\n  'normal',\n  'odd',\n  'old',\n  'pale',\n  'pink',\n  'plain',\n  'poor',\n  'proud',\n  'purple',\n  'quick',\n  'rare',\n  'rapid',\n  'red',\n  'rich',\n  'ripe',\n  'rotten',\n  'round',\n  'rude',\n  'sad',\n  'safe',\n  'scarce',\n  'scared',\n  'shallow',\n  'sharp',\n  'short',\n  'shrill',\n  'simple',\n  'slim',\n  'slow',\n  'small',\n  'smart',\n  'smooth',\n  'soft',\n  'sore',\n  'sour',\n  'square',\n  'stale',\n  'steep',\n  'stiff',\n  'straight',\n  'strange',\n  'strong',\n  'sweet',\n  'swift',\n  'tall',\n  'tame',\n  'tart',\n  'tender',\n  'tense',\n  'thick',\n  'thin',\n  'tight',\n  'tough',\n  'vague',\n  'vast',\n  'vulgar',\n  'warm',\n  'weak',\n  'wet',\n  'white',\n  'wide',\n  'wild',\n  'wise',\n  'young',\n  'yellow',\n  'easy',\n  'narrow',\n  'late',\n  'early',\n  'soon',\n  'close',\n  'empty',\n  'dry',\n  'windy',\n  'noisy',\n  'thirsty',\n  'hungry',\n  'fresh',\n  'quiet',\n  'clear',\n  'heavy',\n  'happy',\n  'funny',\n  'lucky',\n  'pretty',\n  'important',\n  'interesting',\n  'attractive',\n  'dangerous',\n  'intellegent',\n  'pure',\n  'orange',\n  'large',\n  'firm',\n  'grand',\n  'formal',\n  'raw',\n  'weird',\n  'glad',\n  'mad',\n  'strict',\n  'tired',\n  'solid',\n  'extreme',\n  'mature',\n  'true',\n  'free',\n  'curly',\n  'angry'\n].reduce(function(h, s) {\n  h[s] = 'Adjective';\n  return h;\n}, {});\n\n},{}],4:[function(require,module,exports){\n'use strict';\n//terms that are 'Date' term\nlet months = [\n  'january',\n  'february',\n  // \"march\",  //ambig\n  'april',\n  // \"may\",   //ambig\n  'june',\n  'july',\n  'august',\n  'september',\n  'october',\n  'november',\n  'december',\n  'jan',\n  'feb',\n  'mar',\n  'apr',\n  'jun',\n  'jul',\n  'aug',\n  'sep',\n  'oct',\n  'nov',\n  'dec',\n  'sept',\n  'sep',\n];\nlet days = [\n  'monday',\n  'tuesday',\n  'wednesday',\n  'thursday',\n  'friday',\n  'saturday',\n  'sunday',\n  'mon',\n  'tues',\n  'wed',\n  'thurs',\n  'fri',\n  'sat',\n  'sun'\n];\nmodule.exports = {\n  days: days,\n  months: months\n};\n\n},{}],5:[function(require,module,exports){\n//adjectival forms of place names, as adjectives.\nmodule.exports = [\n  'afghan',\n  'albanian',\n  'algerian',\n  'argentine',\n  'armenian',\n  'australian',\n  'aussie',\n  'austrian',\n  'bangladeshi',\n  'belgian',\n  'bolivian',\n  'bosnian',\n  'brazilian',\n  'bulgarian',\n  'cambodian',\n  'canadian',\n  'chilean',\n  'chinese',\n  'colombian',\n  'croat',\n  'cuban',\n  'czech',\n  'dominican',\n  'egyptian',\n  'british',\n  'estonian',\n  'ethiopian',\n  'finnish',\n  'french',\n  'gambian',\n  'georgian',\n  'german',\n  'greek',\n  'haitian',\n  'hungarian',\n  'indian',\n  'indonesian',\n  'iranian',\n  'iraqi',\n  'irish',\n  'israeli',\n  'italian',\n  'jamaican',\n  'japanese',\n  'jordanian',\n  'kenyan',\n  'korean',\n  'kuwaiti',\n  'latvian',\n  'lebanese',\n  'liberian',\n  'libyan',\n  'lithuanian',\n  'macedonian',\n  'malaysian',\n  'mexican',\n  'mongolian',\n  'moroccan',\n  'dutch',\n  'nicaraguan',\n  'nigerian',\n  'norwegian',\n  'omani',\n  'pakistani',\n  'palestinian',\n  'filipino',\n  'polish',\n  'portuguese',\n  'qatari',\n  'romanian',\n  'russian',\n  'rwandan',\n  'samoan',\n  'saudi',\n  'scottish',\n  'senegalese',\n  'serbian',\n  'singaporean',\n  'slovak',\n  'somali',\n  'sudanese',\n  'swedish',\n  'swiss',\n  'syrian',\n  'taiwanese',\n  'thai',\n  'tunisian',\n  'ugandan',\n  'ukrainian',\n  'american',\n  'hindi',\n  'spanish',\n  'venezuelan',\n  'vietnamese',\n  'welsh',\n  'african',\n  'european',\n  'asian',\n  'californian',\n];\n\n},{}],6:[function(require,module,exports){\n// common first-names in compressed form.\n//from http://www.ssa.gov/oact/babynames/limits.html  and http://www.servicealberta.gov.ab.ca/pdf/vs/2001_Boys.pdf\n//not sure what regional/cultural/demographic bias this has. Probably a lot.\n// 73% of people are represented in the top 1000 names\n//used to reduce redundant named-entities in longer text. (don't spot the same person twice.)\n//used to identify gender for coreference resolution\n'use strict';\nconst main = [];\n\n//an ad-hoc prefix encoding for names. 2ms decompression of names\nconst male_names = {\n  'will': 'iam,ie,ard,is,iams',\n  'fred': ',erick,die,rick,dy',\n  'marc': 'us,,o,os,el',\n  'darr': 'ell,yl,en,el,in',\n  'fran': 'k,cis,cisco,klin,kie',\n  'terr': 'y,ance,ence,ell',\n  'rand': 'y,all,olph,al',\n  'brad': 'ley,,ford,y',\n  'jeff': 'rey,,ery,ry',\n  'john': ',ny,nie,athan',\n  'greg': 'ory,,g,orio',\n  'mar': 'k,tin,vin,io,shall,ty,lon,lin',\n  'car': 'l,los,lton,roll,y,ey',\n  'ken': 'neth,,t,ny,dall,drick',\n  'har': 'old,ry,vey,ley,lan,rison',\n  'ste': 'ven,phen,ve,wart,phan,rling',\n  'jer': 'ry,emy,ome,emiah,maine,ald',\n  'mic': 'hael,heal,ah,key,hel',\n  'dar': 'yl,in,nell,win,ius',\n  'dan': 'iel,ny,,e',\n  'wil': 'bur,son,bert,fred,fredo',\n  'ric': 'hard,ky,ardo,k,key',\n  'cli': 'fford,nton,fton,nt,ff',\n  'cla': 'rence,ude,yton,rk,y',\n  'ben': 'jamin,,nie,ny,ito',\n  'rod': 'ney,erick,olfo,ger,',\n  'rob': 'ert,erto,bie,',\n  'gar': 'y,ry,rett,land',\n  'sam': 'uel,,my,mie',\n  'and': 'rew,re,y,res',\n  'jos': 'eph,e,hua,h',\n  'joe': ',l,y,sph',\n  'leo': 'nard,n,,nardo',\n  'tom': ',my,as,mie',\n  'bry': 'an,ant,ce,on',\n  'ant': 'hony,onio,oine,on',\n  'jac': 'k,ob,kson',\n  'cha': 'rles,d,rlie,se',\n  'sha': 'wn,ne,un',\n  'bre': 'nt,tt,ndan,t',\n  'jes': 'se,us,s',\n  'al': 'bert,an,len,fred,exander,ex,vin,lan,fredo,berto,ejandro,fonso,ton,,onzo,i,varo',\n  'ro': 'nald,ger,y,nnie,land,n,ss,osevelt,gelio,lando,man,cky,yce,scoe,ry',\n  'de': 'nnis,rek,an,rrick,lbert,vin,wey,xter,wayne,metrius,nis,smond',\n  'ja': 'mes,son,y,red,vier,ke,sper,mal,rrod',\n  'el': 'mer,lis,bert,ias,ijah,don,i,ton,liot,liott,vin,wood',\n  'ma': 'tthew,nuel,urice,thew,x,tt,lcolm,ck,son',\n  'do': 'nald,uglas,n,nnie,ug,minic,yle,mingo,minick',\n  'er': 'ic,nest,ik,nesto,ick,vin,nie,win',\n  'ra': 'ymond,lph,y,mon,fael,ul,miro,phael',\n  'ed': 'ward,win,die,gar,uardo,,mund,mond',\n  'co': 'rey,ry,dy,lin,nrad,rnelius',\n  'le': 'roy,wis,ster,land,vi',\n  'lo': 'uis,nnie,renzo,ren,well,uie,u,gan',\n  'da': 'vid,le,ve,mon,llas,mian,mien',\n  'jo': 'nathan,n,rge,rdan,nathon,aquin',\n  'ru': 'ssell,ben,dolph,dy,fus,ssel,sty',\n  'ke': 'vin,ith,lvin,rmit',\n  'ar': 'thur,nold,mando,turo,chie,mand',\n  're': 'ginald,x,ynaldo,uben,ggie',\n  'ge': 'orge,rald,ne,rard,offrey,rardo',\n  'la': 'rry,wrence,nce,urence,mar,mont',\n  'mo': 'rris,ses,nte,ises,nty',\n  'ju': 'an,stin,lio,lian,lius,nior',\n  'pe': 'ter,dro,rry,te,rcy',\n  'tr': 'avis,oy,evor,ent',\n  'he': 'nry,rbert,rman,ctor,ath',\n  'no': 'rman,el,ah,lan,rbert',\n  'em': 'anuel,il,ilio,mett,manuel',\n  'wa': 'lter,yne,rren,llace,de',\n  'mi': 'ke,guel,lton,tchell,les',\n  'sa': 'lvador,lvatore,ntiago,ul,ntos',\n  'ch': 'ristopher,ris,ester,ristian,uck',\n  'pa': 'ul,trick,blo,t',\n  'st': 'anley,uart,an',\n  'hu': 'gh,bert,go,mberto',\n  'br': 'ian,uce,andon,ain',\n  'vi': 'ctor,ncent,rgil,cente',\n  'ca': 'lvin,meron,leb',\n  'gu': 'y,illermo,stavo',\n  'lu': 'is,ther,ke,cas',\n  'gr': 'ant,ady,over,aham',\n  'ne': 'il,lson,al,d',\n  't': 'homas,imothy,odd,ony,heodore,im,yler,ed,yrone,aylor,erence,immy,oby,eddy,yson',\n  's': 'cott,ean,idney,ergio,eth,pencer,herman,ylvester,imon,heldon,cotty,olomon',\n  'r': 'yan',\n  'n': 'icholas,athan,athaniel,ick,icolas',\n  'a': 'dam,aron,drian,ustin,ngelo,braham,mos,bel,gustin,ugust,dolfo',\n  'b': 'illy,obby,arry,ernard,ill,ob,yron,lake,ert,oyd,illie,laine,art,uddy,urton',\n  'e': 'ugene,arl,verett,nrique,van,arnest,frain,than,steban',\n  'h': 'oward,omer,orace,ans,al',\n  'p': 'hillip,hilip,reston,hil,ierre',\n  'c': 'raig,urtis,lyde,ecil,esar,edric,leveland,urt',\n  'j': 'immy,im,immie',\n  'g': 'lenn,ordon,len,ilbert,abriel,ilberto',\n  'm': 'elvin,yron,erle,urray',\n  'k': 'yle,arl,urt,irk,ristopher',\n  'o': 'scar,tis,liver,rlando,mar,wen,rville,tto',\n  'l': 'loyd,yle,ionel',\n  'f': 'loyd,ernando,elix,elipe,orrest,abian,idel',\n  'w': 'esley,endell,m,oodrow,inston',\n  'd': 'ustin,uane,wayne,wight,rew,ylan',\n  'z': 'achary',\n  'v': 'ernon,an,ance',\n  'i': 'an,van,saac,ra,rving,smael,gnacio,rvin',\n  'q': 'uentin,uinton',\n  'x': 'avier'\n};\nconst female_names = {\n  'mari': 'a,e,lyn,an,anne,na,ssa,bel,sa,sol,tza',\n  'kris': 'ten,tin,tina,ti,tine,ty,ta,tie',\n  'jean': 'ette,ne,nette,nie,ine,nine',\n  'chri': 'stine,stina,sty,stie,sta,sti',\n  'marg': 'aret,ie,arita,uerite,ret,o',\n  'ange': 'la,lica,lina,lia,line',\n  'fran': 'ces,cine,cisca',\n  'kath': 'leen,erine,y,ryn,arine',\n  'sher': 'ry,ri,yl,i,rie',\n  'caro': 'l,lyn,line,le,lina',\n  'dian': 'e,a,ne,na',\n  'jenn': 'ifer,ie,y,a',\n  'luci': 'lle,a,nda,le',\n  'kell': 'y,i,ey,ie',\n  'rosa': ',lie,lind',\n  'jani': 'ce,e,s,ne',\n  'stac': 'y,ey,ie,i',\n  'shel': 'ly,ley,ia',\n  'laur': 'a,en,ie,el',\n  'trac': 'y,ey,i,ie',\n  'jane': 't,,lle,tte',\n  'bett': 'y,ie,e,ye',\n  'rose': 'mary,marie,tta',\n  'joan': ',ne,n,na',\n  'mar': 'y,tha,jorie,cia,lene,sha,yann,cella,ta,la,cy,tina',\n  'lor': 'i,raine,etta,a,ena,ene,na,ie',\n  'sha': 'ron,nnon,ri,wna,nna,na,una',\n  'dor': 'othy,is,a,een,thy,othea',\n  'cla': 'ra,udia,ire,rice,udette',\n  'eli': 'zabeth,sa,sabeth,se,za',\n  'kar': 'en,la,a,i,in',\n  'tam': 'my,ara,i,mie,ika',\n  'ann': 'a,,e,ie,ette',\n  'car': 'men,rie,la,a,mela',\n  'mel': 'issa,anie,inda',\n  'ali': 'ce,cia,son,sha,sa',\n  'bri': 'ttany,dget,ttney,dgette',\n  'lyn': 'n,da,ne,ette',\n  'del': 'ores,la,ia,oris',\n  'ter': 'esa,ri,i',\n  'son': 'ia,ya,ja,dra',\n  'deb': 'orah,ra,bie,ora',\n  'jac': 'queline,kie,quelyn,lyn',\n  'lat': 'oya,asha,onya,isha',\n  'che': 'ryl,lsea,ri,rie',\n  'vic': 'toria,ki,kie,ky',\n  'sus': 'an,ie,anne,ana',\n  'rob': 'erta,yn',\n  'est': 'her,elle,ella,er',\n  'lea': 'h,,nne,nn',\n  'lil': 'lian,lie,a,y',\n  'ma': 'ureen,ttie,xine,bel,e,deline,ggie,mie,ble,ndy,ude,yra,nuela,vis,gdalena,tilda',\n  'jo': 'yce,sephine,,di,dy,hanna,sefina,sie,celyn,lene,ni,die',\n  'be': 'verly,rtha,atrice,rnice,th,ssie,cky,linda,ulah,rnadette,thany,tsy,atriz',\n  'ca': 'therine,thy,ssandra,ndace,ndice,mille,itlin,ssie,thleen,llie',\n  'le': 'slie,na,ona,ticia,igh,la,nora,ola,sley,ila',\n  'el': 'aine,len,eanor,sie,la,ena,oise,vira,sa,va,ma',\n  'sa': 'ndra,rah,ra,lly,mantha,brina,ndy,die,llie',\n  'mi': 'chelle,ldred,chele,nnie,riam,sty,ndy,randa,llie',\n  'co': 'nnie,lleen,nstance,urtney,ra,rinne,nsuelo,rnelia',\n  'ju': 'lie,dith,dy,lia,anita,ana,stine',\n  'da': 'wn,nielle,rlene,na,isy,rla,phne',\n  're': 'becca,nee,na,bekah,ba',\n  'al': 'ma,lison,berta,exandra,yssa,ta',\n  'ra': 'chel,mona,chael,quel,chelle',\n  'an': 'drea,ita,a,gie,toinette,tonia',\n  'ge': 'raldine,rtrude,orgia,nevieve,orgina',\n  'de': 'nise,anna,siree,na,ana,e',\n  'ja': 'smine,na,yne',\n  'lu': 'cy,z,la,pe,ella,isa',\n  'je': 'ssica,nifer,well,ri',\n  'ad': 'a,rienne,die,ele,riana,eline',\n  'pa': 'tricia,mela,ula,uline,tsy,m,tty,ulette,tti,trice,trica,ige',\n  'ke': 'ndra,rri,isha,ri',\n  'mo': 'nica,lly,nique,na,llie',\n  'lo': 'uise,is,la',\n  'he': 'len,ather,idi,nrietta,lene,lena',\n  'me': 'gan,rcedes,redith,ghan,agan',\n  'wi': 'lma,lla,nnie',\n  'ga': 'il,yle,briela,brielle,le',\n  'er': 'in,ica,ika,ma,nestine',\n  'ce': 'cilia,lia,celia,leste,cile',\n  'ka': 'tie,y,trina,yla,te',\n  'ol': 'ga,ivia,lie,a',\n  'li': 'nda,sa,ndsay,ndsey,zzie',\n  'na': 'ncy,talie,omi,tasha,dine',\n  'la': 'verne,na,donna,ra',\n  'vi': 'rginia,vian,ola',\n  'ha': 'rriet,nnah',\n  'pe': 'ggy,arl,nny,tra',\n  'br': 'enda,andi,ooke',\n  'ki': 'mberly,m,mberley,rsten',\n  'au': 'drey,tumn,dra',\n  'bo': 'nnie,bbie,nita,bbi',\n  'do': 'nna,lores,lly,minique',\n  'gl': 'oria,adys,enda,enna',\n  'tr': 'icia,ina,isha,udy',\n  'ta': 'ra,nya,sha,bitha',\n  'ro': 'sie,xanne,chelle,nda',\n  'am': 'y,anda,ber,elia',\n  'fa': 'ye,nnie,y',\n  'ni': 'cole,na,chole,kki',\n  've': 'ronica,ra,lma,rna',\n  'gr': 'ace,etchen,aciela,acie',\n  'b': 'arbara,lanca,arbra,ianca',\n  'r': 'uth,ita,honda',\n  's': 'hirley,tephanie,ylvia,heila,uzanne,ue,tella,ophia,ilvia,ophie,tefanie,heena,ummer,elma,ocorro,ybil,imone',\n  'c': 'ynthia,rystal,indy,harlene,ristina,leo',\n  'e': 'velyn,mily,dna,dith,thel,mma,va,ileen,unice,ula,ssie,ffie,tta,ugenia',\n  'a': 'shley,pril,gnes,rlene,imee,bigail,ida,bby,ileen',\n  't': 'heresa,ina,iffany,helma,onya,oni,herese,onia',\n  'i': 'rene,da,rma,sabel,nez,ngrid,va,mogene,sabelle',\n  'w': 'anda,endy,hitney',\n  'p': 'hyllis,riscilla,olly',\n  'n': 'orma,ellie,ora,ettie,ell',\n  'f': 'lorence,elicia,lora,reda,ern,rieda',\n  'v': 'alerie,anessa',\n  'j': 'ill,illian',\n  'y': 'vonne,olanda,vette',\n  'g': 'ina,wendolyn,wen,oldie',\n  'l': 'ydia',\n  'm': 'yrtle,yra,uriel,yrna',\n  'h': 'ilda',\n  'o': 'pal,ra,felia',\n  'k': 'rystal',\n  'd': 'ixie,ina',\n  'u': 'rsula'\n};\nconst ambiguous = [\n  'casey',\n  'jamie',\n  'lee',\n  'jaime',\n  'jessie',\n  'morgan',\n  'rene',\n  'robin',\n  'devon',\n  'kerry',\n  'alexis',\n  'guadalupe',\n  'blair',\n  'kasey',\n  'jean',\n  'marion',\n  'aubrey',\n  'shelby',\n  'jan',\n  'shea',\n  'jade',\n  'kenyatta',\n  'kelsey',\n  'shay',\n  'lashawn',\n  'trinity',\n  'regan',\n  'jammie',\n  'cassidy',\n  'cheyenne',\n  'reagan',\n  'shiloh',\n  'marlo',\n  'andra',\n  'devan',\n  'rosario',\n  'lee'\n];\n\n//add data into the main obj\n//males\nlet keys = Object.keys(male_names);\nlet l = keys.length;\nfor (let i = 0; i < l; i++) {\n  const arr = male_names[keys[i]].split(',');\n  for (let i2 = 0; i2 < arr.length; i2++) {\n    main[keys[i] + arr[i2]] = 'm';\n  }\n}\n\n//females\nkeys = Object.keys(female_names);\nl = keys.length;\nfor (let i = 0; i < l; i++) {\n  const arr = female_names[keys[i]].split(',');\n  for (let i2 = 0; i2 < arr.length; i2++) {\n    main[keys[i] + arr[i2]] = 'f';\n  }\n}\n//unisex names\nl = ambiguous.length;\nfor (let i = 0; i < l; i += 1) {\n  main[ambiguous[i]] = 'a';\n}\n// console.log(firstnames['spencer'])\n// console.log(firstnames['jill'])\n// console.log(firstnames['sue'])\n// console.log(firstnames['jan'])\n// console.log(JSON.stringify(Object.keys(firstnames).length, null, 2));\n\nmodule.exports = main;\n\n},{}],7:[function(require,module,exports){\n//these are common person titles used in the lexicon and sentence segmentation methods\n//they are also used to identify that a noun is a person\nmodule.exports = [\n  //honourifics\n  'jr',\n  'mr',\n  'mrs',\n  'ms',\n  'dr',\n  'prof',\n  'sr',\n  'sen',\n  'corp',\n  'rep',\n  'gov',\n  'atty',\n  'supt',\n  'det',\n  'rev',\n  'col',\n  'gen',\n  'lt',\n  'cmdr',\n  'adm',\n  'capt',\n  'sgt',\n  'cpl',\n  'maj',\n  'miss',\n  'misses',\n  'mister',\n  'sir',\n  'esq',\n  'mstr',\n  'phd',\n  'adj',\n  'adv',\n  'asst',\n  'bldg',\n  'brig',\n  'comdr',\n  'hon',\n  'messrs',\n  'mlle',\n  'mme',\n  'op',\n  'ord',\n  'pvt',\n  'reps',\n  'res',\n  'sens',\n  'sfc',\n  'surg',\n];\n\n},{}],8:[function(require,module,exports){\n//nouns with irregular plural/singular forms\n//used in noun.inflect, and also in the lexicon.\n//compressed with '_' to reduce some redundancy.\n'use strict';\nlet main = [\n  ['child', '_ren'],\n  ['person', 'people'],\n  ['leaf', 'leaves'],\n  ['database', '_s'],\n  ['quiz', '_zes'],\n  ['child', '_ren'],\n  ['stomach', '_s'],\n  ['sex', '_es'],\n  ['move', '_s'],\n  ['shoe', '_s'],\n  ['goose', 'geese'],\n  ['phenomenon', 'phenomena'],\n  ['barracks', '_'],\n  ['deer', '_'],\n  ['syllabus', 'syllabi'],\n  ['index', 'indices'],\n  ['appendix', 'appendices'],\n  ['criterion', 'criteria'],\n  ['man', 'men'],\n  ['sex', '_es'],\n  ['rodeo', '_s'],\n  ['epoch', '_s'],\n  ['zero', '_s'],\n  ['avocado', '_s'],\n  ['halo', '_s'],\n  ['tornado', '_s'],\n  ['tuxedo', '_s'],\n  ['sombrero', '_s'],\n  ['addendum', 'addenda'],\n  ['alga', '_e'],\n  ['alumna', '_e'],\n  ['alumnus', 'alumni'],\n  ['bacillus', 'bacilli'],\n  ['cactus', 'cacti'],\n  ['beau', '_x'],\n  ['château', '_x'],\n  ['chateau', '_x'],\n  ['tableau', '_x'],\n  ['corpus', 'corpora'],\n  ['curriculum', 'curricula'],\n  ['echo', '_es'],\n  ['embargo', '_es'],\n  ['foot', 'feet'],\n  ['genus', 'genera'],\n  ['hippopotamus', 'hippopotami'],\n  ['larva', '_e'],\n  ['libretto', 'libretti'],\n  ['loaf', 'loaves'],\n  ['matrix', 'matrices'],\n  ['memorandum', 'memoranda'],\n  ['mosquito', '_es'],\n  ['opus', 'opera'],\n  ['ovum', 'ova'],\n  ['ox', '_en'],\n  ['radius', 'radii'],\n  ['referendum', 'referenda'],\n  ['thief', 'thieves'],\n  ['tooth', 'teeth']\n];\n\nmain = main.map(function(a) {\n  a[1] = a[1].replace('_', a[0]);\n  return a;\n});\n\nmodule.exports = main;\n\n},{}],9:[function(require,module,exports){\n//a list of exceptions to the verb rules\nmodule.exports = {\n  arise: {\n    past: 'arose',\n    participle: 'arisen'\n  },\n  babysit: {\n    past: 'babysat',\n    actor: 'babysitter'\n  },\n  be: {\n    past: 'was',\n    present: 'am',\n    future: 'will be',\n    perfect: 'have been',\n    pluperfect: 'had been',\n    future_perfect: 'will have been',\n    actor: '',\n    gerund: 'am'\n  },\n  is: {\n    past: 'was',\n    present: 'is',\n    future: 'will be',\n    perfect: 'have been',\n    pluperfect: 'had been',\n    future_perfect: 'will have been',\n    actor: '',\n    gerund: 'being'\n  },\n  beat: {\n    gerund: 'beating',\n    actor: 'beater'\n  },\n  begin: {\n    gerund: 'beginning',\n    past: 'began'\n  },\n  bet: {\n    actor: 'better'\n  },\n  bind: {\n    past: 'bound'\n  },\n  bite: {\n    gerund: 'biting',\n    past: 'bit'\n  },\n  bleed: {\n    past: 'bled'\n  },\n  break: {\n    past: 'broke'\n  },\n  breed: {\n    past: 'bred'\n  },\n  bring: {\n    past: 'brought'\n  },\n  broadcast: {\n    past: 'broadcast'\n  },\n  build: {\n    past: 'built'\n  },\n  buy: {\n    past: 'bought'\n  },\n  catch: {\n    past: 'caught'\n  },\n  choose: {\n    gerund: 'choosing',\n    past: 'chose'\n  },\n  cost: {\n    past: 'cost'\n  },\n  deal: {\n    past: 'dealt'\n  },\n  dig: {\n    gerund: 'digging',\n    past: 'dug'\n  },\n  do: {\n    past: 'did',\n    present: 'does'\n  },\n  draw: {\n    past: 'drew'\n  },\n  drink: {\n    past: 'drank'\n  },\n  drive: {\n    gerund: 'driving',\n    past: 'drove'\n  },\n  eat: {\n    gerund: 'eating',\n    past: 'ate',\n    actor: 'eater'\n  },\n  fall: {\n    past: 'fell'\n  },\n  feed: {\n    past: 'fed'\n  },\n  feel: {\n    past: 'felt',\n    actor: 'feeler'\n  },\n  fight: {\n    past: 'fought'\n  },\n  find: {\n    past: 'found'\n  },\n  fly: {\n    past: 'flew'\n  },\n  forbid: {\n    past: 'forbade'\n  },\n  forget: {\n    gerund: 'forgeting',\n    past: 'forgot'\n  },\n  forgive: {\n    gerund: 'forgiving',\n    past: 'forgave'\n  },\n  freeze: {\n    gerund: 'freezing',\n    past: 'froze'\n  },\n  get: {\n    past: 'got'\n  },\n  give: {\n    gerund: 'giving',\n    past: 'gave'\n  },\n  go: {\n    past: 'went',\n    present: 'goes'\n  },\n  hang: {\n    past: 'hung'\n  },\n  have: {\n    gerund: 'having',\n    past: 'had',\n    present: 'has'\n  },\n  hear: {\n    past: 'heard'\n  },\n  hide: {\n    past: 'hid'\n  },\n  hold: {\n    past: 'held'\n  },\n  hurt: {\n    past: 'hurt'\n  },\n  lay: {\n    past: 'laid'\n  },\n  lead: {\n    past: 'led'\n  },\n  leave: {\n    past: 'left'\n  },\n  lie: {\n    gerund: 'lying',\n    past: 'lay'\n  },\n  light: {\n    past: 'lit'\n  },\n  lose: {\n    gerund: 'losing',\n    past: 'lost'\n  },\n  make: {\n    past: 'made'\n  },\n  mean: {\n    past: 'meant'\n  },\n  meet: {\n    gerund: 'meeting',\n    past: 'met',\n    actor: 'meeter'\n  },\n  pay: {\n    past: 'paid'\n  },\n  read: {\n    past: 'read'\n  },\n  ring: {\n    past: 'rang'\n  },\n  rise: {\n    past: 'rose'\n  },\n  run: {\n    gerund: 'running',\n    past: 'ran'\n  },\n  say: {\n    past: 'said'\n  },\n  see: {\n    past: 'saw'\n  },\n  sell: {\n    past: 'sold'\n  },\n  shine: {\n    past: 'shone'\n  },\n  shoot: {\n    past: 'shot'\n  },\n  show: {\n    past: 'showed'\n  },\n  sing: {\n    past: 'sang'\n  },\n  sink: {\n    past: 'sank'\n  },\n  sit: {\n    past: 'sat'\n  },\n  slide: {\n    past: 'slid'\n  },\n  speak: {\n    past: 'spoke'\n  },\n  spin: {\n    gerund: 'spinning',\n    past: 'spun'\n  },\n  spread: {\n    past: 'spread'\n  },\n  stand: {\n    past: 'stood'\n  },\n  steal: {\n    past: 'stole',\n    actor: 'stealer'\n  },\n  stick: {\n    past: 'stuck'\n  },\n  sting: {\n    past: 'stung'\n  },\n  strike: {\n    gerund: 'striking',\n    past: 'struck'\n  },\n  swear: {\n    past: 'swore'\n  },\n  swim: {\n    past: 'swam'\n  },\n  swing: {\n    past: 'swung'\n  },\n  teach: {\n    past: 'taught',\n    present: 'teaches'\n  },\n  tear: {\n    past: 'tore'\n  },\n  tell: {\n    past: 'told'\n  },\n  think: {\n    past: 'thought'\n  },\n  understand: {\n    past: 'understood'\n  },\n  wake: {\n    past: 'woke'\n  },\n  wear: {\n    past: 'wore'\n  },\n  win: {\n    gerund: 'winning',\n    past: 'won'\n  },\n  withdraw: {\n    past: 'withdrew'\n  },\n  write: {\n    gerund: 'writing',\n    past: 'wrote'\n  },\n  tie: {\n    gerund: 'tying',\n    past: 'tied'\n  },\n  ski: {\n    past: 'skiied'\n  },\n  boil: {\n    actor: 'boiler'\n  },\n  miss: {\n    present: 'miss'\n  },\n  act: {\n    actor: 'actor'\n  },\n  compete: {\n    gerund: 'competing',\n    past: 'competed',\n    actor: 'competitor'\n  },\n  being: {\n    gerund: 'are',\n    past: 'were',\n    present: 'are'\n  },\n  imply: {\n    past: 'implied',\n    present: 'implies'\n  },\n  ice: {\n    gerund: 'icing',\n    past: 'iced'\n  },\n  develop: {\n    past: 'develop',\n    actor: 'developer'\n  },\n  wait: {\n    gerund: 'waiting',\n    past: 'waited',\n    actor: 'waiter'\n  },\n  aim: {\n    actor: 'aimer'\n  },\n  spill: {\n    past: 'spilt'\n  },\n  drop: {\n    gerund: 'dropping',\n    past: 'dropped'\n  },\n  log: {\n    gerund: 'logging',\n    past: 'logged'\n  },\n  rub: {\n    gerund: 'rubbing',\n    past: 'rubbed'\n  },\n  smash: {\n    present: 'smashes'\n  },\n  suit: {\n    gerund: 'suiting',\n    past: 'suited',\n    actor: 'suiter'\n  }\n};\n\n},{}],10:[function(require,module,exports){\n'use strict';\n\nconst misc = {\n\n  'etc': 'FW', //foreign words\n  'ie': 'FW',\n\n  'there': 'NN',\n\n  'better': 'JJR',\n  'earlier': 'JJR',\n\n  'has': 'VB',\n  'more': 'RB',\n\n  'sounds': 'VBZ'\n};\n\nconst compact = {\n  //conjunctions\n  'CC': [\n    'yet',\n    'therefore',\n    'or',\n    'while',\n    'nor',\n    'whether',\n    'though',\n    'because',\n    'but',\n    'for',\n    'and',\n    'if',\n    'however',\n    'before',\n    'although',\n    'how',\n    'plus',\n    'versus',\n    'not'\n  ],\n\n  'VBD': [\n    'where\\'d',\n    'when\\'d',\n    'how\\'d',\n    'what\\'d',\n    'said',\n    'had',\n    'been',\n    'began',\n    'came',\n    'did',\n    'meant',\n    'went'\n  ],\n\n  'VBN': [\n    'given',\n    'known',\n    'shown',\n    'seen',\n    'born',\n  ],\n\n  'VBG': [\n    'going',\n    'being',\n    'according',\n    'resulting',\n    'developing',\n    'staining'\n  ],\n\n  //copula\n  'CP': [\n    'is',\n    'will be',\n    'are',\n    'was',\n    'were',\n    'am',\n    'isn\\'t',\n    'ain\\'t',\n    'aren\\'t'\n  ],\n\n  //determiners\n  'DT': [\n    'this',\n    'any',\n    'enough',\n    'each',\n    'whatever',\n    'every',\n    'which',\n    'these',\n    'another',\n    'plenty',\n    'whichever',\n    'neither',\n    'an',\n    'a',\n    'least',\n    'own',\n    'few',\n    'both',\n    'those',\n    'the',\n    'that',\n    'various',\n    'what',\n    'either',\n    'much',\n    'some',\n    'else',\n    'no',\n    //some other languages (what could go wrong?)\n    'la',\n    'le',\n    'les',\n    'des',\n    'de',\n    'du',\n    'el'\n  ],\n\n  //prepositions\n  'IN': [\n    'until',\n    'onto',\n    'of',\n    'into',\n    'out',\n    'except',\n    'across',\n    'by',\n    'between',\n    'at',\n    'down',\n    'as',\n    'from',\n    'around',\n    'with',\n    'among',\n    'upon',\n    'amid',\n    'to',\n    'along',\n    'since',\n    'about',\n    'off',\n    'on',\n    'within',\n    'in',\n    'during',\n    'per',\n    'without',\n    'throughout',\n    'through',\n    'than',\n    'via',\n    'up',\n    'unlike',\n    'despite',\n    'below',\n    'unless',\n    'towards',\n    'besides',\n    'after',\n    'whereas',\n    '\\'o',\n    'amidst',\n    'amongst',\n    'apropos',\n    'atop',\n    'barring',\n    'chez',\n    'circa',\n    'mid',\n    'midst',\n    'notwithstanding',\n    'qua',\n    'sans',\n    'vis-a-vis',\n    'thru',\n    'till',\n    'versus',\n    'without',\n    'w/o',\n    'o\\'',\n    'a\\'',\n  ],\n\n  //modal verbs\n  'MD': [\n    'can',\n    'may',\n    'could',\n    'might',\n    'will',\n    'ought to',\n    'would',\n    'must',\n    'shall',\n    'should',\n    'ought',\n    'shouldn\\'t',\n    'wouldn\\'t',\n    'couldn\\'t',\n    'mustn\\'t',\n    'shan\\'t',\n    'shant',\n    'lets', //arguable\n    'who\\'d',\n    'let\\'s'\n  ],\n\n  //posessive pronouns\n  'PP': [\n    'mine',\n    'something',\n    'none',\n    'anything',\n    'anyone',\n    'theirs',\n    'himself',\n    'ours',\n    'his',\n    'my',\n    'their',\n    'yours',\n    'your',\n    'our',\n    'its',\n    'nothing',\n    'herself',\n    'hers',\n    'themselves',\n    'everything',\n    'myself',\n    'itself',\n    'her', //this one is pretty ambiguous\n    'who',\n    'whom',\n    'whose'\n  ],\n\n  //personal pronouns (nouns)\n  'PRP': [\n    'it',\n    'they',\n    'i',\n    'them',\n    'you',\n    'she',\n    'me',\n    'he',\n    'him',\n    'ourselves',\n    'us',\n    'we',\n    'thou',\n    'il',\n    'elle',\n    'yourself',\n    '\\'em'\n  ],\n\n  //some manual adverbs (the rest are generated)\n  'RB': [\n    'now',\n    'again',\n    'already',\n    'soon',\n    'directly',\n    'toward',\n    'forever',\n    'apart',\n    'instead',\n    'yes',\n    'alone',\n    'ago',\n    'indeed',\n    'ever',\n    'quite',\n    'perhaps',\n    'where',\n    'then',\n    'here',\n    'thus',\n    'very',\n    'often',\n    'once',\n    'never',\n    'why',\n    'when',\n    'away',\n    'always',\n    'sometimes',\n    'also',\n    'maybe',\n    'so',\n    'just',\n    'well',\n    'several',\n    'such',\n    'randomly',\n    'too',\n    'rather',\n    'abroad',\n    'almost',\n    'anyway',\n    'twice',\n    'aside',\n    'moreover',\n    'anymore',\n    'newly',\n    'damn',\n    'somewhat',\n    'somehow',\n    'meanwhile',\n    'hence',\n    'further',\n    'furthermore'\n  ],\n\n  //interjections\n  'UH': [\n    'uhh',\n    'uh-oh',\n    'ugh',\n    'sheesh',\n    'eww',\n    'pff',\n    'voila',\n    'oy',\n    'eep',\n    'hurrah',\n    'yuck',\n    'ow',\n    'duh',\n    'oh',\n    'hmm',\n    'yeah',\n    'whoa',\n    'ooh',\n    'whee',\n    'ah',\n    'bah',\n    'gah',\n    'yaa',\n    'phew',\n    'gee',\n    'ahem',\n    'eek',\n    'meh',\n    'yahoo',\n    'oops',\n    'd\\'oh',\n    'psst',\n    'argh',\n    'grr',\n    'nah',\n    'shhh',\n    'whew',\n    'mmm',\n    'yay',\n    'uh-huh',\n    'boo',\n    'wow',\n    'nope'\n  ],\n\n  //nouns that shouldnt be seen as a verb\n  'NN': [\n    'president',\n    'dollar',\n    'student',\n    'patent',\n    'funding',\n    'morning',\n    'banking',\n    'ceiling',\n    'energy',\n    'secretary',\n    'purpose',\n    'friends',\n    'event'\n  ]\n};\n//unpack the compact terms into the misc lexicon..\nconst keys = Object.keys(compact);\nfor (let i = 0; i < keys.length; i++) {\n  const arr = compact[keys[i]];\n  for (let i2 = 0; i2 < arr.length; i2++) {\n    misc[arr[i2]] = keys[i];\n  }\n}\n// console.log(misc.a);\nmodule.exports = misc;\n\n},{}],11:[function(require,module,exports){\n//common terms that are multi-word, but one part-of-speech\n//these should not include phrasal verbs, like 'looked out'. These are handled elsewhere.\nmodule.exports = {\n  'of course': 'RB',\n  'at least': 'RB',\n  'no longer': 'RB',\n  'sort of': 'RB',\n  'at first': 'RB',\n  'once again': 'RB',\n  'once more': 'RB',\n  'up to': 'RB',\n  'by now': 'RB',\n  'all but': 'RB',\n  'just about': 'RB',\n  'on board': 'JJ',\n  'a lot': 'RB',\n  'by far': 'RB',\n  'at best': 'RB',\n  'at large': 'RB',\n  'for good': 'RB',\n  'vice versa': 'JJ',\n  'en route': 'JJ',\n  'for sure': 'RB',\n  'upside down': 'JJ',\n  'at most': 'RB',\n  'per se': 'RB',\n  'at worst': 'RB',\n  'upwards of': 'RB',\n  'en masse': 'RB',\n  'point blank': 'RB',\n  'up front': 'JJ',\n  'in situ': 'JJ',\n  'in vitro': 'JJ',\n  'ad hoc': 'JJ',\n  'de facto': 'JJ',\n  'ad infinitum': 'JJ',\n  'ad nauseam': 'RB',\n  'for keeps': 'JJ',\n  'a priori': 'FW',\n  'et cetera': 'FW',\n  'off guard': 'JJ',\n  'spot on': 'JJ',\n  'ipso facto': 'JJ',\n  'not withstanding': 'RB',\n  'de jure': 'RB',\n  'a la': 'IN',\n  'ad hominem': 'NN',\n  'par excellence': 'RB',\n  'de trop': 'RB',\n  'a posteriori': 'RB',\n  'fed up': 'JJ',\n  'brand new': 'JJ',\n  'old fashioned': 'JJ',\n  'bona fide': 'JJ',\n  'well off': 'JJ',\n  'far off': 'JJ',\n  'straight forward': 'JJ',\n  'hard up': 'JJ',\n  'sui generis': 'JJ',\n  'en suite': 'JJ',\n  'avant garde': 'JJ',\n  'sans serif': 'JJ',\n  'gung ho': 'JJ',\n  'super duper': 'JJ',\n  'new york': 'NN',\n  'new england': 'NN',\n  'new hampshire': 'NN',\n  'new delhi': 'NN',\n  'new jersey': 'NN',\n  'new mexico': 'NN',\n  'united states': 'NN',\n  'united kingdom': 'NN',\n  'great britain': 'NN',\n  'head start': 'NN'\n};\n\n},{}],12:[function(require,module,exports){\nmodule.exports = [\n  //numbers\n  'minus',\n  'zero',\n  'one',\n  'two',\n  'three',\n  'four',\n  'five',\n  'six',\n  'seven',\n  'eight',\n  'nine',\n  'ten',\n  'eleven',\n  'twelve',\n  'thirteen',\n  'fourteen',\n  'fifteen',\n  'sixteen',\n  'seventeen',\n  'eighteen',\n  'nineteen',\n  'twenty',\n  'thirty',\n  'forty',\n  'fifty',\n  'sixty',\n  'seventy',\n  'eighty',\n  'ninety',\n  'hundred',\n  'thousand',\n  'million',\n  'billion',\n  'trillion',\n  'quadrillion',\n  'quintillion',\n  'sextillion',\n  'septillion',\n  'octillion',\n  'nonillion',\n  'decillion'\n];\n\n},{}],13:[function(require,module,exports){\n'use strict';\n//just a few named-organisations\n//no acronyms needed. no product/brand pollution.\nlet organisations = [\n  'google',\n  'microsoft',\n  'walmart',\n  'exxonmobil',\n  'glencore',\n  'samsung',\n  'chevron',\n  'at&t',\n  'verizon',\n  'costco',\n  'nestlé',\n  '7-eleven',\n  'adidas',\n  'nike',\n  'acer',\n  'mcdonalds',\n  'mcdonald\\'s',\n  'comcast',\n  'compaq',\n  'craigslist',\n  'cisco',\n  'disney',\n  'coca cola',\n  'dupont',\n  'ebay',\n  'facebook',\n  'fedex',\n  'kmart',\n  'kodak',\n  'monsanto',\n  'myspace',\n  'netflix',\n  'sony',\n  'telus',\n  'twitter',\n  'usps',\n  'ubs',\n  'ups',\n  'walgreens',\n  'youtube',\n  'yahoo!',\n  'yamaha'\n];\n\nlet suffixes = [\n  'center',\n  'centre',\n  'memorial',\n  'school',\n  'university',\n  'bank',\n  'college',\n  'house',\n  'foundation',\n  'department',\n  'institute',\n  'club',\n  'co',\n  'sons'\n];\n\nmodule.exports = {\n  suffixes: suffixes,\n  organisations: organisations\n};\n\n},{}],14:[function(require,module,exports){\n//phrasal verbs are two words that really mean one verb.\n//'beef up' is one verb, and not some direction of beefing.\n//by @spencermountain, 2015 mit\n//many credits to http://www.allmyphrasalverbs.com/\n'use strict';\nconst verb_conjugate = require('../term/verb/conjugate/conjugate.js');\n\n//start the list with some randoms\nlet main = [\n  'be onto',\n  'fall behind',\n  'fall through',\n  'fool with',\n  'get across',\n  'get along',\n  'get at',\n  'give way',\n  'hear from',\n  'hear of',\n  'lash into',\n  'make do',\n  'run across',\n  'set upon',\n  'take aback',\n  'keep from'\n];\n\n//if there's a phrasal verb \"keep on\", there's often a \"keep off\"\nconst opposites = {\n  'away': 'back',\n  'in': 'out',\n  'on': 'off',\n  'over': 'under',\n  'together': 'apart',\n  'up': 'down'\n};\n\n//forms that have in/out symmetry\nconst symmetric = {\n  'away': 'blow,bounce,bring,call,come,cut,drop,fire,get,give,go,keep,pass,put,run,send,shoot,switch,take,tie,throw',\n  'in': 'bang,barge,bash,beat,block,book,box,break,bring,burn,butt,carve,cash,check,come,cross,drop,fall,fence,fill,give,grow,hand,hang,head,jack,keep,leave,let,lock,log,move,opt,pack,peel,pull,put,rain,reach,ring,rub,send,set,settle,shut,sign,smash,snow,strike,take,try,turn,type,warm,wave,wean,wear,wheel',\n  'on': 'add,call,carry,catch,count,feed,get,give,go,grind,head,hold,keep,lay,log,pass,pop,power,put,send,show,snap,switch,take,tell,try,turn,wait',\n  'over': 'come,go,look,read,run,talk',\n  'together': 'come,pull,put',\n  'up': 'add,back,beat,bend,blow,boil,bottle,break,bring,buckle,bundle,call,carve,clean,cut,dress,fill,flag,fold,get,give,grind,grow,hang,hold,keep,let,load,lock,look,man,mark,melt,move,pack,pin,pipe,plump,pop,power,pull,put,rub,scale,scrape,send,set,settle,shake,show,sit,slow,smash,square,stand,strike,take,tear,tie,turn,use,wash,wind',\n};\nObject.keys(symmetric).forEach(function(k) {\n  symmetric[k].split(',').forEach(function(s) {\n    //add the given form\n    main.push(s + ' ' + k);\n    //add its opposite form\n    main.push(s + ' ' + opposites[k]);\n  });\n});\n\n//forms that don't have in/out symmetry\nconst asymmetric = {\n  'about': 'bring,fool,gad,go,root',\n  'after': 'go,look,take',\n  'ahead': 'get,go,press',\n  'along': 'bring,move',\n  'apart': 'fall,take',\n  'around': 'ask,boss,bring,call,come,fool,get,horse,joke,lie,mess,play',\n  'away': 'back,carry,file,frighten,hide,wash',\n  'back': 'fall,fight,hit,hold,look,pay,stand,think',\n  'by': 'drop,get,go,stop,swear,swing,tick,zip',\n  'down': 'bog,calm,fall,hand,hunker,jot,knock,lie,narrow,note,pat,pour,run,tone,trickle,wear',\n  'for': 'fend,file,gun,hanker,root,shoot',\n  'forth': 'bring,come',\n  'forward': 'come,look',\n  'in': 'cave,chip,hone,jump,key,pencil,plug,rein,shade,sleep,stop,suck,tie,trade,tuck,usher,weigh,zero',\n  'into': 'look,run',\n  'it': 'go,have',\n  'off': 'auction,be,beat,blast,block,brush,burn,buzz,cast,cool,drop,end,face,fall,fend,frighten,goof,jack,kick,knock,laugh,level,live,make,mouth,nod,pair,pay,peel,read,reel,ring,rip,round,sail,shave,shoot,sleep,slice,split,square,stave,stop,storm,strike,tear,tee,tick,tip,top,walk,work,write',\n  'on': 'bank,bargain,egg,frown,hit,latch,pile,prattle,press,spring,spur,tack,urge,yammer',\n  'out': 'act,ask,back,bail,bear,black,blank,bleed,blow,blurt,branch,buy,cancel,cut,eat,edge,farm,figure,find,fill,find,fish,fizzle,flake,flame,flare,flesh,flip,geek,get,help,hide,hold,iron,knock,lash,level,listen,lose,luck,make,max,miss,nerd,pan,pass,pick,pig,point,print,psych,rat,read,rent,root,rule,run,scout,see,sell,shout,single,sit,smoke,sort,spell,splash,stamp,start,storm,straighten,suss,time,tire,top,trip,trot,wash,watch,weird,whip,wimp,wipe,work,zone,zonk',\n  'over': 'bend,bubble,do,fall,get,gloss,hold,keel,mull,pore,sleep,spill,think,tide,tip',\n  'round': 'get,go',\n  'through': 'go,run',\n  'to': 'keep,see',\n  'up': 'act,beef,board,bone,boot,brighten,build,buy,catch,cheer,cook,end,eye,face,fatten,feel,fess,finish,fire,firm,flame,flare,free,freeze,freshen,fry,fuel,gang,gear,goof,hack,ham,heat,hit,hole,hush,jazz,juice,lap,light,lighten,line,link,listen,live,loosen,make,mash,measure,mess,mix,mock,mop,muddle,open,own,pair,patch,pick,prop,psych,read,rough,rustle,save,shack,sign,size,slice,slip,snap,sober,spark,split,spruce,stack,start,stay,stir,stitch,straighten,string,suck,suit,sum,team,tee,think,tidy,tighten,toss,trade,trip,type,vacuum,wait,wake,warm,weigh,whip,wire,wise,word,write,zip',\n};\nObject.keys(asymmetric).forEach(function(k) {\n  asymmetric[k].split(',').forEach(function(s) {\n    main.push(s + ' ' + k);\n  });\n});\n\n//at his point all verbs are infinitive. lets make this explicit.\nmain = main.reduce(function(h, s) {\n  h[s] = 'VBP';\n  return h;\n}, {});\n\n//conjugate every phrasal verb. takes ~30ms\nconst tags = {\n  present: 'VB',\n  past: 'VBD',\n  future: 'VBF',\n  gerund: 'VBG',\n  infinitive: 'VBP',\n};\nconst cache = {}; //cache individual verbs to speed it up\nlet split, verb, particle, phrasal;\nObject.keys(main).forEach(function(s) {\n  split = s.split(' ');\n  verb = split[0];\n  particle = split[1];\n  if (cache[verb] === undefined) {\n    cache[verb] = verb_conjugate(verb);\n  }\n  Object.keys(cache[verb]).forEach(function(k) {\n    phrasal = cache[verb][k] + ' ' + particle;\n    if (tags[k]) {\n      main[phrasal] = tags[k];\n    }\n  });\n});\n\n// console.log(main[\"wiring up\"] === \"VBG\")\nmodule.exports = main;\n\n},{\"../term/verb/conjugate/conjugate.js\":67}],15:[function(require,module,exports){\n'use strict';\n\nlet countries = [\n  'china',\n  'india',\n  'america',\n  'united states',\n  'usa',\n  'u.s.a.',\n  'ussr',\n  'united states of america',\n  'indonesia',\n  'brazil',\n  'pakistan',\n  'nigeria',\n  'bangladesh',\n  'russia',\n  'japan',\n  'mexico',\n  'philippines',\n  'vietnam',\n  'ethiopia',\n  'egypt',\n  'germany',\n  'iran',\n  'turkey',\n  'dr congo',\n  'thailand',\n  'france',\n  'united kingdom',\n  'italy',\n  'myanmar',\n  'south africa',\n  'south korea',\n  'colombia',\n  'spain',\n  'ukraine',\n  'tanzania',\n  'kenya',\n  'argentina',\n  'algeria',\n  'poland',\n  'sudan',\n  'uganda',\n  'canada',\n  'iraq',\n  'morocco',\n  'peru',\n  'uzbekistan',\n  'saudi arabia',\n  'malaysia',\n  'venezuela',\n  'nepal',\n  'afghanistan',\n  'yemen',\n  'north korea',\n  'ghana',\n  'mozambique',\n  'taiwan',\n  'australia',\n  'syria',\n  'madagascar',\n  'angola',\n  'cameroon',\n  'sri lanka',\n  'romania',\n  'burkina faso',\n  'niger',\n  'kazakhstan',\n  'netherlands',\n  'chile',\n  'malawi',\n  'ecuador',\n  'guatemala',\n  'côte d\\'ivoire',\n  'mali',\n  'cambodia',\n  'senegal',\n  'zambia',\n  'zimbabwe',\n  'chad',\n  'south sudan',\n  'belgium',\n  'cuba',\n  'tunisia',\n  'guinea',\n  'greece',\n  'rwanda',\n  'czech republic',\n  'somalia',\n  'portugal',\n  'haiti',\n  'benin',\n  'burundi',\n  'bolivia',\n  'hungary',\n  'sweden',\n  'belarus',\n  'dominican republic',\n  'azerbaijan',\n  'honduras',\n  'austria',\n  'united arab emirates',\n  'israel',\n  'switzerland',\n  'tajikistan',\n  'bulgaria',\n  'serbia',\n  'papua new guinea',\n  'paraguay',\n  'laos',\n  'jordan',\n  'el salvador',\n  'eritrea',\n  'libya',\n  'togo',\n  'sierra leone',\n  'nicaragua',\n  'kyrgyzstan',\n  'denmark',\n  'finland',\n  'slovakia',\n  'turkmenistan',\n  'norway',\n  'lebanon',\n  'costa rica',\n  'central african republic',\n  'republic of ireland',\n  'new zealand',\n  'georgia',\n  'congo-brazzaville',\n  'palestine',\n  'liberia',\n  'croatia',\n  'oman',\n  'bosnia and herzegovina',\n  'kuwait',\n  'moldova',\n  'mauritania',\n  'panama',\n  'uruguay',\n  'armenia',\n  'lithuania',\n  'albania',\n  'mongolia',\n  'jamaica',\n  'namibia',\n  'lesotho',\n  'qatar',\n  'macedonia',\n  'slovenia',\n  'botswana',\n  'latvia',\n  'gambia',\n  'guinea-bissau',\n  'gabon',\n  'equatorial guinea',\n  'trinidad-tobago',\n  'estonia',\n  'mauritius',\n  'swaziland',\n  'bahrain',\n  'timor-leste',\n  'djibouti',\n  'cyprus',\n  'fiji',\n  'guyana',\n  'comoros',\n  'bhutan',\n  'solomon islands',\n  'luxembourg',\n  'suriname',\n  'cape verde',\n  'malta',\n  'bahamas',\n  'iceland'\n];\n\nlet cities = [\n  'shanghai',\n  'beijing',\n  'guangzhou',\n  'tianjin',\n  'shenzhen',\n  'mumbai',\n  'new delhi',\n  'chennai',\n  'bangalore',\n  'ahmedabad',\n  'new york',\n  'los angeles',\n  'chicago',\n  'houston',\n  'philadelphia',\n  'phoenix',\n  'jakarta',\n  'rio de janeiro',\n  'salvador',\n  'brasília',\n  'curitiba',\n  'karachi',\n  'dhaka',\n  'chittagong',\n  'moscow',\n  'saint petersburg',\n  'yekaterinburg',\n  'tokyo',\n  'yokohama',\n  'osaka',\n  'nagoya',\n  'sapporo',\n  'kobe',\n  'mexico',\n  'guadalajara',\n  'puebla',\n  'manila',\n  'cebu',\n  'ho chi minh',\n  'hanoi',\n  'cairo',\n  'alexandria',\n  'giza',\n  'berlin',\n  'hamburg',\n  'munich',\n  'cologne',\n  'frankfurt',\n  'stuttgart',\n  'tehran',\n  'karaj',\n  'istanbul',\n  'ankara',\n  'i̇zmir',\n  'bursa',\n  'bangkok',\n  'chiang mai',\n  'paris',\n  'marseille',\n  'lyon',\n  'toulouse',\n  'nice',\n  'nantes',\n  'london',\n  'birmingham',\n  'manchester',\n  'liverpool',\n  'rome',\n  'milan',\n  'naples',\n  'turin',\n  'palermo',\n  'genoa',\n  'yangon',\n  'mandalay',\n  'cape town',\n  'port elizabeth',\n  'pretoria',\n  'durban',\n  'seoul',\n  'busan',\n  'incheon',\n  'daegu',\n  'daejeon',\n  'bogotá',\n  'medellín',\n  'barranquilla',\n  'madrid',\n  'barcelona',\n  'valencia',\n  'seville',\n  'zaragoza',\n  'kiev',\n  'kharkiv',\n  'odessa',\n  'dnipropetrovsk',\n  'lviv',\n  'buenos aires',\n  'rosario',\n  'la plata',\n  'warsaw',\n  'kraków',\n  'łódź',\n  'wrocław',\n  'poznań',\n  'gdańsk',\n  'kampala',\n  'toronto',\n  'vancouver',\n  'calgary',\n  'ottawa',\n  'edmonton',\n  'fes',\n  'tangier',\n  'lima',\n  'kuala lumpur',\n  'caracas',\n  'kabul',\n  'sana\\'a',\n  'pyongyang',\n  'new taipei',\n  'kaohsiung',\n  'taichung',\n  'taipei',\n  'tainan',\n  'sydney',\n  'melbourne',\n  'brisbane',\n  'perth',\n  'damascus',\n  'homs',\n  'colombo',\n  'kandy',\n  'bucharest',\n  'timișoara',\n  'iași',\n  'cluj-napoca',\n  'constanța',\n  'craiova',\n  'hauts-bassins region',\n  'nord region',\n  'almaty',\n  'amsterdam',\n  'the hague',\n  'rotterdam',\n  'utrecht',\n  'eindhoven',\n  'tilburg',\n  'santiago',\n  'quito',\n  'guatemala',\n  'abidjan',\n  'phnom penh',\n  'dakar',\n  'antwerp',\n  'ghent',\n  'charleroi',\n  'liège',\n  'brussels',\n  'havana',\n  'tunis',\n  'athens',\n  'thessaloniki',\n  'piraeus',\n  'patras',\n  'heraklion',\n  'prague',\n  'brno',\n  'pilsen',\n  'lisbon',\n  'porto',\n  'budapest',\n  'miskolc',\n  'stockholm',\n  'gothenburg',\n  'malmö',\n  'västerås',\n  'minsk',\n  'baku',\n  'tegucigalpa',\n  'vienna',\n  'graz',\n  'linz',\n  'salzburg',\n  'innsbruck',\n  'abu dhabi',\n  'tel aviv',\n  'haifa',\n  'ashdod',\n  'petah tikva',\n  'zürich',\n  'geneva',\n  'basel',\n  'lausanne',\n  'bern',\n  'winterthur',\n  'dushanbe',\n  'sofia',\n  'varna',\n  'burgas',\n  'belgrade',\n  'niš',\n  'amman',\n  'aqaba',\n  'san salvador',\n  'copenhagen',\n  'aarhus',\n  'aalborg',\n  'helsinki',\n  'espoo',\n  'tampere',\n  'vantaa',\n  'turku',\n  'bratislava',\n  'košice',\n  'ashgabat',\n  'oslo',\n  'bergen',\n  'trondheim',\n  'beirut',\n  'san josé',\n  'dublin',\n  'cork',\n  'auckland',\n  'christchurch',\n  'wellington',\n  'hamilton',\n  'dunedin',\n  'tbilisi',\n  'zagreb',\n  'split',\n  'banja luka',\n  'kuwait',\n  'chișinău',\n  'panama',\n  'montevideo',\n  'yerevan',\n  'vilnius',\n  'kaunas',\n  'klaipėda',\n  'tirana',\n  'ulan bator',\n  'doha',\n  'skopje',\n  'ljubljana',\n  'maribor',\n  'riga',\n  'daugavpils',\n  'tallinn',\n  'tartu',\n  'nicosia',\n  'limassol',\n  'luxembourg',\n  'reykjavik',\n  'kópavogur'\n];\n\nmodule.exports = {\n  countries: countries,\n  cities: cities,\n};\n\n},{}],16:[function(require,module,exports){\n//common nouns that have no plural form. These are suprisingly rare\n//used in noun.inflect(), and added as nouns in lexicon\nmodule.exports = [\n  'aircraft',\n  'bass',\n  'bison',\n  'fowl',\n  'halibut',\n  'moose',\n  'salmon',\n  'spacecraft',\n  'tuna',\n  'trout',\n  'advice',\n  'information',\n  'knowledge',\n  'trouble',\n  'enjoyment',\n  'fun',\n  'recreation',\n  'relaxation',\n  'meat',\n  'rice',\n  'bread',\n  'cake',\n  'coffee',\n  'ice',\n  'water',\n  'oil',\n  'grass',\n  'hair',\n  'fruit',\n  'wildlife',\n  'equipment',\n  'machinery',\n  'furniture',\n  'mail',\n  'luggage',\n  'jewelry',\n  'clothing',\n  'money',\n  'mathematics',\n  'economics',\n  'physics',\n  'civics',\n  'ethics',\n  'gymnastics',\n  'mumps',\n  'measles',\n  'news',\n  'tennis',\n  'baggage',\n  'currency',\n  'soap',\n  'toothpaste',\n  'food',\n  'sugar',\n  'butter',\n  'flour',\n  'research',\n  'leather',\n  'wool',\n  'wood',\n  'coal',\n  'weather',\n  'homework',\n  'cotton',\n  'silk',\n  'patience',\n  'impatience',\n  'vinegar',\n  'art',\n  'beef',\n  'blood',\n  'cash',\n  'chaos',\n  'cheese',\n  'chewing',\n  'conduct',\n  'confusion',\n  'education',\n  'electricity',\n  'entertainment',\n  'fiction',\n  'forgiveness',\n  'gold',\n  'gossip',\n  'ground',\n  'happiness',\n  'history',\n  'honey',\n  'hospitality',\n  'importance',\n  'justice',\n  'laughter',\n  'leisure',\n  'lightning',\n  'literature',\n  'luck',\n  'melancholy',\n  'milk',\n  'mist',\n  'music',\n  'noise',\n  'oxygen',\n  'paper',\n  'pay',\n  'peace',\n  'peanut',\n  'pepper',\n  'petrol',\n  'plastic',\n  'pork',\n  'power',\n  'pressure',\n  'rain',\n  'recognition',\n  'sadness',\n  'safety',\n  'salt',\n  'sand',\n  'scenery',\n  'shopping',\n  'silver',\n  'snow',\n  'softness',\n  'space',\n  'speed',\n  'steam',\n  'sunshine',\n  'tea',\n  'thunder',\n  'time',\n  'traffic',\n  'trousers',\n  'violence',\n  'warmth',\n  'wine',\n  'steel',\n  'soccer',\n  'hockey',\n  'golf',\n  'fish',\n  'gum',\n  'liquid',\n  'series',\n  'sheep',\n  'species',\n  'fahrenheit',\n  'celcius',\n  'kelvin',\n  'hertz'\n];\n\n},{}],17:[function(require,module,exports){\n//most-frequent non-irregular verbs, in infinitive form, to be conjugated for the lexicon\n//this list is the seed, from which various forms are conjugated\nmodule.exports = [\n  'collapse',\n  'stake',\n  'forsee',\n  'suck',\n  'answer',\n  'argue',\n  'tend',\n  'examine',\n  'depend',\n  'form',\n  'figure',\n  'mind',\n  'surround',\n  'suspect',\n  'reflect',\n  'wonder',\n  'hope',\n  'end',\n  'thank',\n  'file',\n  'regard',\n  'report',\n  'imagine',\n  'consider',\n  'ensure',\n  'cause',\n  'work',\n  'enter',\n  'stop',\n  'defeat',\n  'surge',\n  'launch',\n  'turn',\n  'like',\n  'control',\n  'relate',\n  'remember',\n  'join',\n  'listen',\n  'train',\n  'spring',\n  'enjoy',\n  'fail',\n  'recognize',\n  'obtain',\n  'learn',\n  'fill',\n  'announce',\n  'prevent',\n  'achieve',\n  'realize',\n  'involve',\n  'remove',\n  'aid',\n  'visit',\n  'test',\n  'prepare',\n  'ask',\n  'carry',\n  'suppose',\n  'determine',\n  'raise',\n  'love',\n  'use',\n  'pull',\n  'improve',\n  'contain',\n  'offer',\n  'talk',\n  'pick',\n  'care',\n  'express',\n  'remain',\n  'operate',\n  'close',\n  'add',\n  'mention',\n  'support',\n  'decide',\n  'walk',\n  'vary',\n  'demand',\n  'describe',\n  'agree',\n  'happen',\n  'allow',\n  'suffer',\n  'study',\n  'press',\n  'watch',\n  'seem',\n  'occur',\n  'contribute',\n  'claim',\n  'compare',\n  'apply',\n  'direct',\n  'discuss',\n  'indicate',\n  'require',\n  'change',\n  'fix',\n  'reach',\n  'prove',\n  'expect',\n  'exist',\n  'play',\n  'permit',\n  'kill',\n  'charge',\n  'increase',\n  'believe',\n  'create',\n  'continue',\n  'live',\n  'help',\n  'represent',\n  'edit',\n  'serve',\n  'appear',\n  'cover',\n  'maintain',\n  'start',\n  'stay',\n  'move',\n  'extend',\n  'design',\n  'supply',\n  'suggest',\n  'want',\n  'approach',\n  'call',\n  'include',\n  'try',\n  'receive',\n  'save',\n  'discover',\n  'marry',\n  'need',\n  'establish',\n  'keep',\n  'assume',\n  'attend',\n  'unite',\n  'explain',\n  'publish',\n  'accept',\n  'settle',\n  'reduce',\n  'do',\n  'look',\n  'interact',\n  'concern',\n  'labor',\n  'return',\n  'select',\n  'die',\n  'provide',\n  'seek',\n  'wish',\n  'finish',\n  'follow',\n  'disagree',\n  'produce',\n  'attack',\n  'attempt',\n  'brake',\n  'brush',\n  'burn',\n  'bang',\n  'bomb',\n  'budget',\n  'comfort',\n  'cook',\n  'copy',\n  'cough',\n  'crush',\n  'cry',\n  'check',\n  'claw',\n  'clip',\n  'combine',\n  'damage',\n  'desire',\n  'doubt',\n  'drain',\n  'dance',\n  'decrease',\n  'defect',\n  'deposit',\n  'drift',\n  'dip',\n  'dive',\n  'divorce',\n  'dream',\n  'exchange',\n  'envy',\n  'exert',\n  'exercise',\n  'export',\n  'fold',\n  'flood',\n  'focus',\n  'forecast',\n  'fracture',\n  'grip',\n  'guide',\n  'guard',\n  'guarantee',\n  'guess',\n  'hate',\n  'heat',\n  'handle',\n  'hire',\n  'host',\n  'hunt',\n  'hurry',\n  'import',\n  'judge',\n  'jump',\n  'jam',\n  'kick',\n  'kiss',\n  'knock',\n  'laugh',\n  'lift',\n  'lock',\n  'lecture',\n  'link',\n  'load',\n  'loan',\n  'lump',\n  'melt',\n  'message',\n  'murder',\n  'neglect',\n  'overlap',\n  'overtake',\n  'overuse',\n  'print',\n  'protest',\n  'pump',\n  'push',\n  'post',\n  'progress',\n  'promise',\n  'purchase',\n  'regret',\n  'request',\n  'reward',\n  'roll',\n  'rub',\n  'rent',\n  'repair',\n  'sail',\n  'scale',\n  'screw',\n  'shock',\n  'sleep',\n  'slip',\n  'smash',\n  'smell',\n  'smoke',\n  'sneeze',\n  'snow',\n  'surprise',\n  'scratch',\n  'search',\n  'share',\n  'shave',\n  'spit',\n  'splash',\n  'stain',\n  'stress',\n  'switch',\n  'taste',\n  'touch',\n  'trade',\n  'trick',\n  'twist',\n  'trap',\n  'travel',\n  'tune',\n  'undergo',\n  'undo',\n  'uplift',\n  'vote',\n  'wash',\n  'wave',\n  'whistle',\n  'wreck',\n  'yawn',\n  'betray',\n  'restrict',\n  'perform',\n  'worry',\n  'point',\n  'activate',\n  'fear',\n  'plan',\n  'note',\n  'face',\n  'predict',\n  'differ',\n  'deserve',\n  'torture',\n  'recall',\n  'count',\n  'admit',\n  'insist',\n  'lack',\n  'pass',\n  'belong',\n  'complain',\n  'constitute',\n  'rely',\n  'refuse',\n  'range',\n  'cite',\n  'flash',\n  'arrive',\n  'reveal',\n  'consist',\n  'observe',\n  'notice',\n  'trust',\n  'display',\n  'view',\n  'stare',\n  'acknowledge',\n  'owe',\n  'gaze',\n  'treat',\n  'account',\n  'gather',\n  'address',\n  'confirm',\n  'estimate',\n  'manage',\n  'participate',\n  'sneak',\n  'drop',\n  'mirror',\n  'experience',\n  'strive',\n  'arch',\n  'dislike',\n  'favor',\n  'earn',\n  'emphasize',\n  'match',\n  'question',\n  'emerge',\n  'encourage',\n  'matter',\n  'name',\n  'head',\n  'line',\n  'slam',\n  'list',\n  'warn',\n  'ignore',\n  'resemble',\n  'feature',\n  'place',\n  'reverse',\n  'accuse',\n  'spoil',\n  'retain',\n  'survive',\n  'praise',\n  'function',\n  'please',\n  'date',\n  'remind',\n  'deliver',\n  'echo',\n  'engage',\n  'deny',\n  'yield',\n  'center',\n  'gain',\n  'anticipate',\n  'reason',\n  'side',\n  'thrive',\n  'defy',\n  'dodge',\n  'enable',\n  'applaud',\n  'bear',\n  'persist',\n  'pose',\n  'reject',\n  'attract',\n  'await',\n  'inhibit',\n  'declare',\n  'process',\n  'risk',\n  'urge',\n  'value',\n  'block',\n  'confront',\n  'credit',\n  'cross',\n  'amuse',\n  'dare',\n  'resent',\n  'smile',\n  'gloss',\n  'threaten',\n  'collect',\n  'depict',\n  'dismiss',\n  'submit',\n  'benefit',\n  'step',\n  'deem',\n  'limit',\n  'sense',\n  'issue',\n  'embody',\n  'force',\n  'govern',\n  'replace',\n  'bother',\n  'cater',\n  'adopt',\n  'empower',\n  'outweigh',\n  'alter',\n  'enrich',\n  'influence',\n  'prohibit',\n  'pursue',\n  'warrant',\n  'convey',\n  'approve',\n  'reserve',\n  'rest',\n  'strain',\n  'wander',\n  'adjust',\n  'dress',\n  'market',\n  'mingle',\n  'disapprove',\n  'evaluate',\n  'flow',\n  'inhabit',\n  'pop',\n  'rule',\n  'depart',\n  'roam',\n  'assert',\n  'disappear',\n  'envision',\n  'pause',\n  'afford',\n  'challenge',\n  'grab',\n  'grumble',\n  'house',\n  'portray',\n  'revel',\n  'base',\n  'conduct',\n  'review',\n  'stem',\n  'crave',\n  'mark',\n  'store',\n  'target',\n  'unlock',\n  'weigh',\n  'resist',\n  'drag',\n  'pour',\n  'reckon',\n  'assign',\n  'cling',\n  'rank',\n  'attach',\n  'decline',\n  'destroy',\n  'interfere',\n  'paint',\n  'skip',\n  'sprinkle',\n  'wither',\n  'allege',\n  'retire',\n  'score',\n  'monitor',\n  'expand',\n  'honor',\n  'pack',\n  'assist',\n  'float',\n  'appeal',\n  'stretch',\n  'undermine',\n  'assemble',\n  'boast',\n  'bounce',\n  'grasp',\n  'install',\n  'borrow',\n  'crack',\n  'elect',\n  'shout',\n  'contrast',\n  'overcome',\n  'relax',\n  'relent',\n  'strengthen',\n  'conform',\n  'dump',\n  'pile',\n  'scare',\n  'relive',\n  'resort',\n  'rush',\n  'boost',\n  'cease',\n  'command',\n  'excel',\n  'plug',\n  'plunge',\n  'proclaim',\n  'discourage',\n  'endure',\n  'ruin',\n  'stumble',\n  'abandon',\n  'cheat',\n  'convince',\n  'merge',\n  'convert',\n  'harm',\n  'multiply',\n  'overwhelm',\n  'chew',\n  'invent',\n  'bury',\n  'wipe',\n  'added',\n  'took',\n  'define',\n  'goes',\n  'measure',\n  'enhance',\n  'distinguish',\n  'avoid',\n//contractions\n// 'don\\'t',\n// 'won\\'t',\n// 'what\\'s' //somewhat ambiguous (what does|what are)\n];\n\n},{}],18:[function(require,module,exports){\n'use strict';\nexports.pluck = function(arr, str) {\n  arr = arr || [];\n  return arr.map(function(o) {\n    return o[str];\n  });\n};\n\nexports.flatten = function(arr) {\n  let all = [];\n  arr.forEach(function(a) {\n    all = all.concat(a);\n  });\n  return all;\n};\n\nexports.sameArr = function(arr, arrB) {\n  if (typeof arr !== typeof arrB || arr.length !== arrB.length) {\n    return null;\n  }\n  for(let i = 0; i < arr.length; i++) {\n    if (arr[i] !== arrB[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexports.compact = function(arr) {\n  return arr.filter(function(a) {\n    if (a === undefined || a === null) {\n      return false;\n    }\n    return true;\n  });\n};\n\n//string utilities\nexports.endsWith = function(str, suffix) {\n  return str.indexOf(suffix, str.length - suffix.length) !== -1;\n};\n\nexports.titlecase = function(str) {\n  if (!str) {\n    return '';\n  }\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\n},{}],19:[function(require,module,exports){\n'use strict';\n\nlet models = {\n  Term : require('./term/term.js'),\n  Text : require('./text/text.js'),\n  Sentence : require('./sentence/sentence.js'),\n  Verb : require('./term/verb/verb.js'),\n  Adjective : require('./term/adjective/adjective.js'),\n  Adverb : require('./term/adverb/adverb.js'),\n  Noun : require('./term/noun/noun.js'),\n  Value : require('./term/noun/value/value.js'),\n  Person : require('./term/noun/person/person.js'),\n  Place : require('./term/noun/place/place.js'),\n  Date : require('./term/noun/date/date.js'),\n  Organisation : require('./term/noun/organisation/organisation.js'),\n  Lexicon : require('./lexicon.js'),\n};\n\nconst extend = function(m, context) {\n  context = context || {};\n  return m;\n};\n\nfunction NLP() {\n\n  this.mixin = function(obj) {\n    obj = obj || {};\n    Object.keys(obj).forEach(function(k) {\n      Object.keys(obj[k]).forEach(function(method) {\n        models[k].fn[method] = obj[k][method];\n      });\n    });\n  };\n\n  this.term = function(s, context) {\n    return extend(new models.Term(s), context);\n  };\n  this.noun = function(s) {\n    return new models.Noun(s);\n  };\n  this.verb = function(s) {\n    return new models.Verb(s);\n  };\n  this.adjective = function(s) {\n    return new models.Adjective(s);\n  };\n  this.adverb = function(s) {\n    return new models.Adverb(s);\n  };\n\n  this.value = function(s) {\n    return new models.Value(s);\n  };\n  this.person = function(s) {\n    return new models.Person(s);\n  };\n  this.place = function(s) {\n    return new models.Place(s);\n  };\n  this.date = function(s) {\n    return new models.Date(s);\n  };\n  this.organisation = function(s) {\n    return new models.Organisation(s);\n  };\n\n  this.text = function(s) {\n    return new models.Text(s);\n  };\n  this.sentence = function(s) {\n    return new models.Sentence(s);\n  };\n}\n\nlet nlp = new NLP();\n\n//export to window or webworker\nif (typeof window === 'object' || typeof DedicatedWorkerGlobalScope === 'function') {\n  self.nlp_compromise = nlp;\n}\n//export to commonjs\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = nlp;\n}\n//export to amd\nif (typeof define === 'function' && define.amd) {\n  define(nlp);\n}\n\n// let t = nlp.sentence(`he was some`);\n// t.contractions.contract();\n// console.log(t.text());\n\n},{\"./lexicon.js\":20,\"./sentence/sentence.js\":29,\"./term/adjective/adjective.js\":30,\"./term/adverb/adverb.js\":35,\"./term/noun/date/date.js\":42,\"./term/noun/noun.js\":48,\"./term/noun/organisation/organisation.js\":50,\"./term/noun/person/person.js\":54,\"./term/noun/place/place.js\":56,\"./term/noun/value/value.js\":64,\"./term/term.js\":66,\"./term/verb/verb.js\":74,\"./text/text.js\":77}],20:[function(require,module,exports){\n//the lexicon is a big hash of words to pos tags\n//it's built by conjugating and inflecting a small seed of terms\n'use strict';\nconst fns = require('./fns.js');\nconst verb_conjugate = require('./term/verb/conjugate/conjugate.js');\nconst to_comparative = require('./term/adjective/to_comparative.js');\nconst to_superlative = require('./term/adjective/to_superlative.js');\nconst grand_mapping = require('./sentence/pos/parts_of_speech.js').tag_mapping;\n\nconst lexicon = {};\n\nconst addObj = function(obj) {\n  const keys = Object.keys(obj);\n  const l = keys.length;\n  for (let i = 0; i < l; i++) {\n    lexicon[keys[i]] = obj[keys[i]];\n  }\n};\n\nconst addArr = function(arr, tag) {\n  const l = arr.length;\n  for (let i = 0; i < l; i++) {\n    lexicon[arr[i]] = tag;\n  }\n};\n\n//conjugate all verbs.\nconst verbMap = {\n  infinitive: 'Infinitive',\n  present: 'PresentTense',\n  past: 'PastTense',\n  gerund: 'Gerund',\n  actor: 'Actor',\n  future: 'FutureTense',\n  pluperfect: 'PluperfectTense',\n  perfect: 'PerfectTense',\n\n  PerfectTense: 'PerfectTense',\n  PluperfectTense: 'PluperfectTense',\n  FutureTense: 'FutureTense',\n  PastTense: 'PastTense',\n  PresentTense: 'PresentTense',\n};\n\nconst irregulars = require('./data/irregular_verbs.js');\nlet verbs = require('./data/verbs.js').concat(Object.keys(irregulars));\nfor (let i = 0; i < verbs.length; i++) {\n  const o = verb_conjugate(verbs[i]);\n  Object.keys(o).forEach(function(k) {\n    if (k && o[k] && verbMap[k]) {\n      lexicon[o[k]] = verbMap[k];\n    }\n  });\n}\n\nlet orgs = require('./data/organisations.js');\naddArr(orgs.organisations, 'Noun');\naddArr(orgs.suffixes, 'Noun');\n\nlet places = require('./data/places.js');\naddArr(places.countries, 'Place');\naddArr(places.cities, 'Place');\n\nrequire('./data/adjectives.js').forEach(function(s) {\n  lexicon[s] = 'Adjective';\n  lexicon[to_comparative(s)] = 'Comparative';\n  lexicon[to_superlative(s)] = 'Superlative';\n});\naddObj(require('./data/convertables.js'));\n\naddArr(require('./data/abbreviations.js').abbreviations, 'Abbreviation');\naddArr(require('./data/demonyms.js'), 'Adjective');\naddArr(require('./data/honourifics.js'), 'Honourific');\naddArr(require('./data/uncountables.js'), 'Noun');\naddArr(require('./data/dates.js'), 'Date');\naddArr(require('./data/numbers.js'), 'Value');\n//a little fancy\naddArr(Object.keys(require('./data/firstnames.js')), 'Person');\n//add irregular nouns\nconst irregNouns = require('./data/irregular_nouns.js');\naddArr(fns.pluck(irregNouns, 0), 'Noun');\naddArr(fns.pluck(irregNouns, 1), 'Plural');\n\naddObj(require('./data/misc.js'));\naddObj(require('./data/multiples.js'));\naddObj(require('./data/phrasal_verbs.js'));\n\n//just in case\ndelete lexicon[false];\ndelete lexicon[true];\ndelete lexicon[undefined];\ndelete lexicon[null];\ndelete lexicon[''];\n\n//use 'Noun', not 'NN'\nObject.keys(lexicon).forEach(function(k) {\n  if (!grand_mapping[lexicon[k]]) {\n    // console.log(lexicon[k]);\n  }\n  lexicon[k] = grand_mapping[lexicon[k]] || lexicon[k];\n});\n\n\n// console.log(Object.keys(lexicon).length)\n// console.log(lexicon)\n\n// console.log(lexicon['once again'] === 'RB');\n// console.log(lexicon['seven'] === 'Value');\n// console.log(lexicon['sleep'] === 'VBP');\n// console.log(lexicon['slept'] === 'VBD');\n// console.log(lexicon['sleeping'] === 'VBG');\n// console.log(lexicon['canadian'] === 'JJ');\n// console.log(lexicon['july'] === 'Value');\n// console.log(lexicon[null] === undefined);\n// console.log(lexicon['dr'] === 'NNAB');\n// console.log(lexicon['sounds'] === 'VBZ');\n// console.log(lexicon['look after'] === 'VBP');\n// console.log(lexicon['tony'] === 'Noun');\n// console.log(lexicon['loaf'] === 'Noun');\n// console.log(lexicon['loaves'] === 'NNS');\n// console.log(lexicon['he'] === 'PRP');\n// console.log(lexicon['canada'] === 'Noun');\n// console.log(lexicon['is']);\n\nmodule.exports = lexicon;\n\n},{\"./data/abbreviations.js\":1,\"./data/adjectives.js\":2,\"./data/convertables.js\":3,\"./data/dates.js\":4,\"./data/demonyms.js\":5,\"./data/firstnames.js\":6,\"./data/honourifics.js\":7,\"./data/irregular_nouns.js\":8,\"./data/irregular_verbs.js\":9,\"./data/misc.js\":10,\"./data/multiples.js\":11,\"./data/numbers.js\":12,\"./data/organisations.js\":13,\"./data/phrasal_verbs.js\":14,\"./data/places.js\":15,\"./data/uncountables.js\":16,\"./data/verbs.js\":17,\"./fns.js\":18,\"./sentence/pos/parts_of_speech.js\":25,\"./term/adjective/to_comparative.js\":32,\"./term/adjective/to_superlative.js\":34,\"./term/verb/conjugate/conjugate.js\":67}],21:[function(require,module,exports){\n'use strict';\n\n//boolean if sentence has\n\n// \"[copula] [pastTense] by\"\n// \"[pastParticiple] by\"\nconst passive_voice = function(s) {\n  let terms = s.terms;\n  for(let i = 0; i < terms.length - 2; i++) {\n    if (terms[i].pos['Copula'] && terms[i + 1].pos['Verb'] && terms[i + 2].normal === 'by') {\n      //don't do 'june was approaching by then'\n      if (terms[i + 1].pos['Gerund']) {\n        continue;\n      }\n      return true;\n    }\n  }\n  return false;\n};\n\nmodule.exports = passive_voice;\n\n},{}],22:[function(require,module,exports){\n//add a 'quiet' token for contractions so we can represent their grammar\n//some contractions need detailed POS tense info, to resolve the is/was/has part\n'use strict';\nconst pos = require('../../sentence/pos/parts_of_speech.js');\n\nconst easy_contractions = {\n  'i\\'d': ['i', 'would'],\n  'she\\'d': ['she', 'would'],\n  'he\\'d': ['he', 'would'],\n  'they\\'d': ['they', 'would'],\n  'we\\'d': ['we', 'would'],\n  'i\\'ll': ['i', 'will'],\n  'she\\'ll': ['she', 'will'],\n  'he\\'ll': ['he', 'will'],\n  'they\\'ll': ['they', 'will'],\n  'we\\'ll': ['we', 'will'],\n  'i\\'ve': ['i', 'have'],\n  'they\\'ve': ['they', 'have'],\n  'we\\'ve': ['we', 'have'],\n  'should\\'ve': ['should', 'have'],\n  'would\\'ve': ['would', 'have'],\n  'could\\'ve': ['could', 'have'],\n  'must\\'ve': ['must', 'have'],\n  'i\\'m': ['i', 'am'],\n  'we\\'re': ['we', 'are'],\n  'they\\'re': ['they', 'are'],\n  'cannot': ['can', 'not']\n};\nlet ambiguous = {\n  'he\\'s': 'he',\n  'she\\'s': 'she',\n  'it\\'s': 'it',\n  'who\\'s': 'who',\n  'what\\'s': 'what',\n  'where\\'s': 'where',\n  'when\\'s': 'when',\n  'why\\'s': 'why',\n  'how\\'s': 'how'\n};\nlet opposite_map = Object.keys(ambiguous).reduce(function(h, k) {\n  h[ambiguous[k]] = k;\n  return h;\n}, {});\n\n//take remaining sentence after contraction and decide which verb fits best [is/was/has]\nlet chooseVerb = function(terms) {\n  for(let i = 0; i < terms.length; i++) {\n    //he's nice\n    if (terms[i].pos['Adjective']) {\n      return 'is';\n    }\n    //he's followed\n    if (terms[i].tag === 'PastTense') {\n      return 'has';\n    }\n    //he's following\n    if (terms[i].tag === 'Gerund') {\n      return 'is';\n    }\n  }\n  return 'is';\n};\n\nconst easy_ones = function(terms) {\n  for (let i = 0; i < terms.length; i++) {\n    const t = terms[i];\n    if (easy_contractions[t.normal]) {\n      //first one assumes the whole word, but has implicit first-half of contraction\n      terms[i].implicit = easy_contractions[t.normal][0];\n      //second one gets an empty term '', but has an implicit verb, like 'is'\n      let word_two = new pos.Term('');\n      word_two.implicit = easy_contractions[t.normal][1];\n      terms.splice(i + 1, 0, word_two);\n      i++;\n    }\n  }\n  return terms;\n};\n\nconst hard_ones = function(terms) {\n  for (let i = 0; i < terms.length; i++) {\n    const t = terms[i];\n    if (ambiguous[t.normal]) {\n      let pronoun = ambiguous[t.normal];\n      let verb = chooseVerb(terms.slice(i, terms.length)); //send the rest of the sentence over\n      //first one assumes the whole word, but has implicit first-half of contraction\n      terms[i].implicit = pronoun;\n      //second one gets an empty term '', but has an implicit verb, like 'is'\n      let word_two = new pos.Term('');\n      word_two.implicit = verb;\n      terms.splice(i + 1, 0, word_two);\n      i++;\n    }\n  }\n  return terms;\n};\n\nconst combine_contraction = function(terms, i, k) {\n  //combine two terms\n  terms[i].implicit = terms[i].text;\n  terms[i + 1].implicit = terms[i + 1].text;\n  terms[i].text = k;\n  terms[i].rebuild();\n  //undo second term\n  terms[i + 1].text = '';\n  terms[i + 1].rebuild();\n  return terms;\n};\n\n//turn 'i will' into \"i'll\"\nconst contract = function(terms) {\n  for (let i = 0; i < terms.length - 1; i++) {\n    const t = terms[i];\n    Object.keys(easy_contractions).forEach(function(k) {\n      let arr = easy_contractions[k];\n      let next = terms[i + 1];\n      if (terms[i].normal === arr[0] && next.normal === arr[1]) {\n        terms = combine_contraction(terms, i, k);\n        return;\n      }\n      //'hard ones'\n      if (opposite_map[terms[i].normal] && (next.normal === 'is' || next.normal === 'was' || next.normal === 'has')) {\n        terms = combine_contraction(terms, i, opposite_map[terms[i].normal]);\n        return;\n      }\n    });\n  }\n  return terms;\n};\n\nmodule.exports = {\n  easy_ones,\n  hard_ones,\n  contract\n};\n\n},{\"../../sentence/pos/parts_of_speech.js\":25}],23:[function(require,module,exports){\n//fancy combining/chunking of terms\n'use strict';\nconst pos = require('./parts_of_speech');\n\nconst shouldLumpThree = function(a, b, c) {\n  if (!a || !b || !c) {\n    return false;\n  }\n  const lump_rules = [\n    {\n      condition: (a.pos.Noun && b.text === '&' && c.pos.Noun), //John & Joe's\n      result: 'Person',\n    },\n    {\n      condition: (a.pos.Noun && b.text === 'N' && c.pos.Noun), //John N Joe's\n      result: 'Person',\n    },\n    {\n      condition: (a.pos.Date && b.normal === 'the' && c.pos.Value), //June the 5th\n      result: 'Person',\n    },\n    {\n      condition: (a.is_capital() && b.normal === 'of' && c.is_capital()), //President of Mexico\n      result: 'Noun',\n    },\n    {\n      condition: (a.text.match(/^[\"']/) && !b.text.match(/[\"']/) && c.text.match(/[\"']$/)), //three-word quote\n      result: 'Noun',\n    },\n    {\n      condition: (a.normal === 'will' && b.normal === 'have' && b.pos.Verb), //will have walk\n      result: 'FutureTense',\n    },\n  ];\n  for(let i = 0; i < lump_rules.length; i++) {\n    if (lump_rules[i].condition) {\n      return lump_rules[i].result;\n    }\n  }\n  return false;\n};\n\nconst shouldLumpTwo = function(a, b) {\n  if (!a || !b) {\n    return false;\n  }\n  const lump_rules = [\n    {\n      condition: (a.pos.Person && b.pos.Honourific || a.pos.Honourific && b.pos.Person), //\"John sr.\"\n      result: 'Person',\n    },\n    {\n      condition: (a.pos.Honourific && b.is_capital()), //'Dr. John\n      result: 'Person',\n    },\n    {\n      condition: (a.pos.Person && b.is_capital()), //'Person, Capital -> Person'\n      result: 'Person',\n    },\n    {\n      condition: (a.pos.Date && b.pos.Value), //June 4\n      result: 'Date',\n    },\n    {\n      condition: (a.pos.Value && b.pos.Noun), //5 books\n      result: 'Value',\n    },\n    {\n      condition: (a.is_capital() && b.pos['Organisation'] || b.is_capital() && a.pos['Organisation']), //Canada Inc\n      result: 'Organisation',\n    },\n    {\n      condition: (a.text.match(/^[\"']/) && b.text.match(/[\"']$/)), //two-word quote\n      result: 'Noun',\n    },\n    {\n      condition: (a.normal === 'will' && b.pos.Verb), //will walk (perfect)\n      result: 'PerfectTense',\n    },\n    {\n      condition: (a.normal.match(/^will ha(ve|d)$/) && b.pos.Verb), //will have walked (pluperfect)\n      result: 'PluperfectTense',\n    },\n  ];\n  for(let i = 0; i < lump_rules.length; i++) {\n    if (lump_rules[i].condition) {\n      return lump_rules[i].result;\n    }\n  }\n  return false;\n};\n\n\nconst fancy_lumping = function(terms) {\n  for(let i = 1; i < terms.length; i++) {\n    let a = terms[i - 1];\n    let b = terms[i];\n    let c = terms[i + 1];\n\n    // rules for lumping two terms\n    let tag = shouldLumpTwo(a, b);\n    if (tag !== false) {\n      let Cl = pos.classMapping[tag] || pos.Term;\n      terms[i] = new Cl(a.text + ' ' + b.text, tag);\n      terms[i].reason = 'lumped(' + terms[i].reason + ')';\n      terms[i - 1] = null;\n      continue;\n    }\n\n    // rules for lumpting three terms\n    if (c) {\n      tag = shouldLumpThree(a, b, c);\n      if (tag !== false) {\n        let Cl = pos.classMapping[tag] || pos.Term;\n        terms[i - 1] = new Cl([a.text, b.text, c.text].join(' '), tag);\n        terms[i - 1].reason = 'lumped(' + terms[i].reason + ')';\n        terms[i] = null;\n        terms[i + 1] = null;\n        continue;\n      }\n    }\n\n  }\n  //remove killed terms\n  terms = terms.filter(function(t) {\n    return t !== null;\n  });\n  return terms;\n};\n\n\nmodule.exports = fancy_lumping;\n\n},{\"./parts_of_speech\":25}],24:[function(require,module,exports){\nmodule.exports = [\n  {\n    'before': ['Determiner', '?'],\n    'after': ['Determiner', 'Noun']\n  },\n  {\n    'before': ['Determiner', 'Adjective', 'Verb'],\n    'after': ['Noun', 'Noun', 'Noun']\n  },\n  {\n    'before': ['Determiner', 'Adverb', 'Adjective', '?'],\n    'after': ['Determiner', 'Adverb', 'Adjective', 'Noun'],\n  },\n  {\n    'before': ['Unknown', 'Determiner', 'Noun'],\n    'after': ['Verb', 'Determiner', 'Noun'],\n  },\n  //posessive hints\n  {\n    'before': ['Posessive', 'Unknown'],\n    'after': ['Posessive', 'Noun'],\n  },\n  {\n    'before': ['Posessive', 'Verb'],\n    'after': ['Posessive', 'Noun'],\n  },\n  {\n    'before': ['Unknown', 'Posessive', 'Noun'],\n    'after': ['Verb', 'Posessive', 'Noun'],\n  },\n  //copula hints\n  {\n    'before': ['Copula', 'Unknown'],\n    'after': ['Copula', 'Adjective'], // not sure\n  },\n  {\n    'before': ['Copula', 'Adverb', '?'],\n    'after': ['Copula', 'Adverb', 'Adjective'], // not sure\n  },\n  //preposition hints\n  {\n    'before': ['Unknown', 'Preposition'],\n    'after': ['Verb', 'Preposition'],\n  },\n  //conjunction hints, like lists (a little sloppy)\n  {\n    'before': ['Adverb', 'Conjunction', 'Adverb'],\n    'after': ['Adverb', 'Adverb', 'Adverb'],\n  },\n  {\n    'before': ['Verb', 'Conjunction', 'Verb'],\n    'after': ['Verb', 'Verb', 'Verb'],\n  },\n  {\n    'before': ['Noun', 'Conjunction', 'Noun'],\n    'after': ['Noun', 'Noun', 'Noun'],\n  },\n  {\n    'before': ['Adjective', 'Conjunction', 'Adjective'],\n    'after': ['Adjective', 'Adjective', 'Adjective'],\n  },\n  {\n    'before': ['Unknown', 'Conjunction', 'Verb'],\n    'after': ['Verb', 'Conjunction', 'Verb'],\n  },\n  {\n    'before': ['Verb', 'Conjunction', 'Unknown'],\n    'after': ['Verb', 'Conjunction', 'Verb'],\n  },\n  //adverb hints\n  {\n    'before': ['Noun', 'Adverb', 'Noun'],\n    'after': ['Noun', 'Adverb', 'Verb'],\n  },\n  //pronoun hints\n  {\n    'before': ['Unknown', 'Pronoun'],\n    'after': ['Verb', 'Pronoun'],\n  },\n  //modal hints\n  {\n    'before': ['Modal', 'Unknown'],\n    'after': ['Modal', 'Verb'],\n  },\n  {\n    'before': ['Modal', 'Adverb', '?'],\n    'after': ['Modal', 'Adverb', 'Verb'],\n  },\n  //ambiguous dates (march/may)\n  {\n    'before': ['Modal', 'Value'],\n    'after': ['Modal', 'Verb'],\n  },\n  {\n    'before': ['Adverb', 'Value'],\n    'after': ['Adverb', 'Verb'],\n  }\n];\n\n},{}],25:[function(require,module,exports){\n\nconst Term = require('../../term/term.js');\n\nconst Verb = require('../../term/verb/verb.js');\nconst Adverb = require('../../term/adverb/adverb.js');\nconst Adjective = require('../../term/adjective/adjective.js');\n\nconst Noun = require('../../term/noun/noun.js');\nconst Person = require('../../term/noun/person/person.js');\nconst Place = require('../../term/noun/place/place.js');\nconst Organisation = require('../../term/noun/organisation/organisation.js');\nconst Value = require('../../term/noun/value/value.js');\nconst _Date = require('../../term/noun/date/date.js');\n\n\nconst tag_mapping = {\n  //nouns\n  'NNA': 'Acronym',\n  'NNS': 'Plural',\n  'NN': 'Noun',\n  'NNO': 'Posessive',\n  'CD': 'Value',\n  // 'NNP': 'Noun',\n  // 'NNPA': 'Noun',\n  // 'NNAB': 'Noun',\n  // 'NNPS': 'Noun',\n  // 'NNG': 'Noun',\n  // 'CD': 'Noun',\n  // 'NU': 'Noun',\n  // 'DA': 'Noun',\n\n  //glue\n  'PP': 'Posessive',\n  'PRP': 'Pronoun',\n  'UH': 'Expression', //interjection\n  'FW': 'Expression', //foreign-word\n  'DT': 'Determiner',\n  'CC': 'Conjunction',\n  'IN': 'Preposition',\n\n  //verbs\n  'VB': 'Verb',\n  'VBD': 'PastTense',\n  'VBF': 'FutureTense',\n  'VBP': 'Infinitive',\n  'VBZ': 'PresentTense',\n  'VBG': 'Gerund',\n  'VBN': 'Verb',\n  'CP': 'Copula',\n  'MD': 'Modal',\n  'JJ': 'Adjective',\n  'JJR': 'Comparative',\n  'JJS': 'Superlative',\n  'RB': 'Adverb',\n};\n\nconst classMapping = {\n  'Noun': Noun,\n  'Honourific': Noun,\n  'Acronym': Noun,\n  'Plural': Noun,\n  'Pronoun': Noun,\n  'Actor': Noun,\n  'Abbreviation': Noun,\n\n  'Verb': Verb,\n  'PresentTense': Verb,\n  'FutureTense': Verb,\n  'PastTense': Verb,\n  'PresentTense': Verb,\n  'Infinitive': Verb,\n  'PerfectTense': Verb,\n  'PluperfectTense': Verb,\n  'Gerund': Verb,\n  'Copula': Verb,\n  'Modal': Verb,\n\n  'Comparative': Adjective,\n  'Superlative': Adjective,\n  'Adjective': Adjective,\n\n  'Determiner': Term,\n  'Preposition': Term,\n  'Expression': Term,\n  'Conjunction': Term,\n  'Posessive': Term,\n\n  'Adverb': Adverb,\n  'Value': Value,\n  'Place': Place,\n  'Person': Person,\n  'Organisation': Organisation,\n  'Date': _Date,\n};\n\nmodule.exports = {\n  tag_mapping,\n  classMapping,\n  Term,\n  'Date': _Date,\n  Value,\n  Verb,\n  Person,\n  Place,\n  Organisation,\n  Adjective,\n  Adverb,\n  Noun,\n};\n\n},{\"../../term/adjective/adjective.js\":30,\"../../term/adverb/adverb.js\":35,\"../../term/noun/date/date.js\":42,\"../../term/noun/noun.js\":48,\"../../term/noun/organisation/organisation.js\":50,\"../../term/noun/person/person.js\":54,\"../../term/noun/place/place.js\":56,\"../../term/noun/value/value.js\":64,\"../../term/term.js\":66,\"../../term/verb/verb.js\":74}],26:[function(require,module,exports){\n'use strict';\n\n//some prepositions are clumped onto the back of a verb \"looked for\", \"looks at\"\n//they should be combined with the verb, sometimes.\n//does not handle seperated phrasal verbs ('take the coat off' -> 'take off')\n\n\nlet particles = ['in', 'out', 'on', 'off', 'behind', 'way', 'with', 'of', 'do', 'away', 'across', 'ahead', 'back', 'over', 'under', 'together', 'apart', 'up', 'upon', 'aback', 'down', 'about', 'before', 'after', 'around', 'to', 'forth', 'round', 'through', 'along', 'onto'];\nparticles = particles.reduce(function (h, s) {\n  h[s] = true;\n  return h;\n}, {});\n\n//combine ['blew','up'] -> 'blew up'\nlet phrasal_verbs = function(terms) {\n  for(let i = 0; i < terms.length - 1; i++) {\n    if (terms[i] && terms[i].pos['Verb'] && particles[terms[i + 1].normal]) {\n      //don't do 'is in'\n      if (terms[i].pos['Copula']) {\n        continue;\n      }\n      terms[i].text = terms[i].text + ' ' + terms[i + 1].text;\n      terms[i].reason = 'phrasal(' + terms[i].reason + ')';\n      terms[i + 1] = null;\n      terms[i].normalize();\n      terms[i].conjugate();\n    }\n  }\n  //remove killed-off ones\n  terms = terms.filter(function(t) {\n    return t !== null;\n  });\n  return terms;\n};\n\nmodule.exports = phrasal_verbs;\n\n},{}],27:[function(require,module,exports){\n//part-of-speech tagging\n'use strict';\nconst contractions = require('./contractions');\nconst lexicon = require('../../lexicon.js');\nconst word_rules = require('./word_rules');\nconst grammar_rules = require('./grammar_rules');\nconst fancy_lumping = require('./fancy_lumping');\nconst phrasal_verbs = require('./phrasal_verbs');\nconst fns = require('../../fns');\nconst pos = require('./parts_of_speech');\n\n//swap the Term object with a proper Pos class\nconst assign = function(t, tag, reason) {\n  let P = pos.classMapping[tag] || pos.Term;\n  let implicit = t.implicit;\n  t = new P(t.text, tag);\n  t.reason = reason;\n  t.implicit = implicit;\n  return t;\n};\n\n//consult lexicon for this known-word\nconst lexicon_pass = function(terms) {\n  return terms.map(function(t) {\n    //check lexicon straight-up\n    if (lexicon[t.normal] !== undefined) {\n      return assign(t, lexicon[t.normal], 'lexicon_pass');\n    }\n    //try to match it without a prefix - eg. outworked -> worked\n    if (t.normal.match(/^(over|under|out|-|un|re|en).{4}/)) {\n      const attempt = t.normal.replace(/^(over|under|out|.*?-|un|re|en)/, '');\n      return assign(t, lexicon[attempt], 'lexicon_prefix');\n    }\n    //match 'twenty-eight'\n    if (t.normal.match(/-/)) {\n      let sides = t.normal.split('-');\n      if (lexicon[sides[0]]) {\n        return assign(t, lexicon[sides[0]], 'lexicon_dash');\n      }\n      if (lexicon[sides[1]]) {\n        return assign(t, lexicon[sides[1]], 'lexicon_dash');\n      }\n    }\n    return t;\n  });\n};\n\n//set POS for capitalised words\nconst capital_signals = function(terms) {\n  //first words need careful rules\n  if (terms[0].is_acronym()) {\n    terms[0] = assign(terms[0], 'Noun', 'acronym');\n  }\n  //non-first-word capitals are nouns\n  for (let i = 1; i < terms.length; i++) {\n    if (terms[i].is_capital() || terms[i].is_acronym()) {\n      terms[i] = assign(terms[i], 'Noun', 'capital_signal');\n    }\n  }\n  return terms;\n};\n\n//regex hints for words/suffixes\nconst word_rules_pass = function(terms) {\n  for (let i = 0; i < terms.length; i++) {\n    if (terms[i].tag !== '?') {\n      continue;\n    }\n    for (let o = 0; o < word_rules.length; o++) {\n      if (terms[i].normal.length > 4 && terms[i].normal.match(word_rules[o].reg)) {\n        terms[i] = assign(terms[i], word_rules[o].pos, 'rules_pass_' + o);\n        break;\n      }\n    }\n  }\n  return terms;\n};\n\n//turn [noun, noun..] into [noun..]\nconst chunk_neighbours = function(terms) {\n  let new_terms = [];\n  let last = null;\n  for(let i = 0; i < terms.length; i++) {\n    let t = terms[i];\n    //if the tags match (but it's not a hidden contraction)\n    if (last !== null && t.tag === last && !t.implicit) {\n      new_terms[new_terms.length - 1].text += ' ' + t.text;\n      new_terms[new_terms.length - 1].normalize();\n    } else {\n      new_terms.push(t);\n    }\n    last = t.tag;\n  }\n  return new_terms;\n};\n\n\n//hints from the sentence grammar\nconst grammar_rules_pass = function(s) {\n  let tags = s.tags();\n  for(let i = 0; i < s.terms.length; i++) {\n    for(let o = 0; o < grammar_rules.length; o++) {\n      let rule = grammar_rules[o];\n      //does this rule match\n      if (fns.sameArr(rule.before, tags.slice(i, i + rule.before.length))) {\n        //change before/after for each term\n        for(let c = 0; c < rule.before.length; c++) {\n          s.terms[i + c] = assign(s.terms[i + c], rule.after[c], 'grammar_rule ' + c);\n        }\n      }\n    }\n  }\n  return s.terms;\n};\n\nconst noun_fallback = function(terms) {\n  for(let i = 0; i < terms.length; i++) {\n    if (terms[i].tag === '?' && terms[i].normal.match(/[a-z]/)) {\n      terms[i] = assign(terms[i], 'Noun', 'fallback');\n    }\n  }\n  return terms;\n};\n\n//turn nouns into person/place\nconst specific_pos = function(terms) {\n  for(let i = 0; i < terms.length; i++) {\n    let t = terms[i];\n    if (t instanceof pos.Noun) {\n      if (t.is_person()) {\n        terms[i] = assign(t, 'Person');\n      } else if (t.is_place()) {\n        terms[i] = assign(t, 'Place');\n      } else if (t.is_value()) {\n        terms[i] = assign(t, 'Value');\n      } else if (t.is_date()) {\n        terms[i] = assign(t, 'Date');\n      } else if (t.is_organisation()) {\n        terms[i] = assign(t, 'Organisation');\n      }\n    }\n  }\n  return terms;\n};\n\nconst tagger = function(s) {\n  //word-level rules\n  s.terms = capital_signals(s.terms);\n  s.terms = contractions.easy_ones(s.terms);\n  s.terms = lexicon_pass(s.terms);\n  s.terms = word_rules_pass(s.terms);\n  //repeat these steps a couple times, to wiggle-out the grammar\n  for(let i = 0; i < 2; i++) {\n    s.terms = grammar_rules_pass(s);\n    s.terms = chunk_neighbours(s.terms);\n    s.terms = noun_fallback(s.terms);\n    s.terms = phrasal_verbs(s.terms);\n    s.terms = specific_pos(s.terms);\n    s.terms = contractions.hard_ones(s.terms);\n    s.terms = fancy_lumping(s.terms);\n  }\n  return s.terms;\n};\n\nmodule.exports = tagger;\n\n},{\"../../fns\":18,\"../../lexicon.js\":20,\"./contractions\":22,\"./fancy_lumping\":23,\"./grammar_rules\":24,\"./parts_of_speech\":25,\"./phrasal_verbs\":26,\"./word_rules\":28}],28:[function(require,module,exports){\nconst tag_mapping = require('./parts_of_speech.js').tag_mapping;\n//regex patterns and parts of speech],\nmodule.exports = [\n  ['.[cts]hy$', 'JJ'],\n  ['.[st]ty$', 'JJ'],\n  ['.[lnr]ize$', 'VB'],\n  ['.[gk]y$', 'JJ'],\n  ['.fies$', 'VB'],\n  ['.some$', 'JJ'],\n  ['.[nrtumcd]al$', 'JJ'],\n  ['.que$', 'JJ'],\n  ['.[tnl]ary$', 'JJ'],\n  ['.[di]est$', 'JJS'],\n  ['^(un|de|re)\\\\-[a-z]..', 'VB'],\n  ['.lar$', 'JJ'],\n  ['[bszmp]{2}y', 'JJ'],\n  ['.zes$', 'VB'],\n  ['.[icldtgrv]ent$', 'JJ'],\n  ['.[rln]ates$', 'VBZ'],\n  ['.[oe]ry$', 'JJ'],\n  ['[rdntkdhs]ly$', 'RB'],\n  ['.[lsrnpb]ian$', 'JJ'],\n  ['.[^aeiou]ial$', 'JJ'],\n  ['.[^aeiou]eal$', 'JJ'],\n  ['.[vrl]id$', 'JJ'],\n  ['.[ilk]er$', 'JJR'],\n  ['.ike$', 'JJ'],\n  ['.ends$', 'VB'],\n  ['.wards$', 'RB'],\n  ['.rmy$', 'JJ'],\n  ['.rol$', 'NN'],\n  ['.tors$', 'NN'],\n  ['.azy$', 'JJ'],\n  ['.where$', 'RB'],\n  ['.ify$', 'VB'],\n  ['.bound$', 'JJ'],\n  ['.ens$', 'VB'],\n  ['.oid$', 'JJ'],\n  ['.vice$', 'NN'],\n  ['.rough$', 'JJ'],\n  ['.mum$', 'JJ'],\n  ['.teen(th)?$', 'CD'],\n  ['.oses$', 'VB'],\n  ['.ishes$', 'VB'],\n  ['.ects$', 'VB'],\n  ['.tieth$', 'CD'],\n  ['.ices$', 'NN'],\n  ['.bles$', 'VB'],\n  ['.pose$', 'VB'],\n  ['.ions$', 'NN'],\n  ['.ean$', 'JJ'],\n  ['.[ia]sed$', 'JJ'],\n  ['.tized$', 'VB'],\n  ['.llen$', 'JJ'],\n  ['.fore$', 'RB'],\n  ['.ances$', 'NN'],\n  ['.gate$', 'VB'],\n  ['.nes$', 'VB'],\n  ['.less$', 'RB'],\n  ['.ried$', 'JJ'],\n  ['.gone$', 'JJ'],\n  ['.made$', 'JJ'],\n  ['.[pdltrkvyns]ing$', 'JJ'],\n  ['.tions$', 'NN'],\n  ['.tures$', 'NN'],\n  ['.ous$', 'JJ'],\n  ['.ports$', 'NN'],\n  ['. so$', 'RB'],\n  ['.ints$', 'NN'],\n  ['.[gt]led$', 'JJ'],\n  ['[aeiou].*ist$', 'JJ'],\n  ['.lked$', 'VB'],\n  ['.fully$', 'RB'],\n  ['.*ould$', 'MD'],\n  ['^-?[0-9]+(.[0-9]+)?$', 'CD'],\n  ['[a-z]*\\\\-[a-z]*\\\\-', 'JJ'],\n  ['[a-z]\\'s$', 'NNO'],\n  ['.\\'n$', 'VB'],\n  ['.\\'re$', 'CP'],\n  ['.\\'ll$', 'MD'],\n  ['.\\'t$', 'VB'],\n  ['.tches$', 'VB'],\n  ['^https?\\:?\\/\\/[a-z0-9]', 'NN'], //the colon is removed in normalisation\n  ['^www\\.[a-z0-9]', 'NN'],\n  ['.ize$', 'VB'],\n  ['.[^aeiou]ise$', 'VB'],\n  ['.[aeiou]te$', 'VB'],\n  ['.ea$', 'NN'],\n  ['[aeiou][pns]er$', 'NN'],\n  ['.ia$', 'NN'],\n  ['.sis$', 'NN'],\n  ['.[aeiou]na$', 'NN'],\n  ['.[^aeiou]ity$', 'NN'],\n  ['.[^aeiou]ium$', 'NN'],\n  ['.[^aeiou][ei]al$', 'JJ'],\n  ['.ffy$', 'JJ'],\n  ['.[^aeiou]ic$', 'JJ'],\n  ['.(gg|bb|zz)ly$', 'JJ'],\n  ['.[aeiou]my$', 'JJ'],\n  ['.[aeiou]ble$', 'JJ'],\n  ['.[^aeiou]ful$', 'JJ'],\n  ['.[^aeiou]ish$', 'JJ'],\n  ['.[^aeiou]ica$', 'NN'],\n  ['[aeiou][^aeiou]is$', 'NN'],\n  ['[^aeiou]ard$', 'NN'],\n  ['[^aeiou]ism$', 'NN'],\n  ['.[^aeiou]ity$', 'NN'],\n  ['.[^aeiou]ium$', 'NN'],\n  ['.[lstrn]us$', 'NN'],\n  ['..ic$', 'JJ'],\n  ['[aeiou][^aeiou]id$', 'JJ'],\n  ['.[^aeiou]ish$', 'JJ'],\n  ['.[^aeiou]ive$', 'JJ'],\n  ['[ea]{2}zy$', 'JJ'],\n].map(function(a) {\n  return {\n    reg: new RegExp(a[0], 'i'),\n    pos: tag_mapping[a[1]]\n  };\n});\n\n},{\"./parts_of_speech.js\":25}],29:[function(require,module,exports){\n'use strict';\nconst Term = require('../term/term.js');\nconst fns = require('../fns.js');\nconst tagger = require('./pos/tagger.js');\nconst pos = require('./pos/parts_of_speech.js');\nconst passive_voice = require('./passive_voice.js');\nconst contract = require('./pos/contractions.js').contract;\n\n//a sentence is an array of Term objects, along with their various methods\nclass Sentence {\n\n  constructor(str) {\n    const the = this;\n    this.str = str || '';\n    const terms = str.split(' ');\n    //build-up term-objects\n    this.terms = terms.map(function(s) {\n      return new Term(s);\n    });\n    this.terms = tagger(this);\n    //contractions\n    this.contractions = {\n      // \"he'd go\" -> \"he would go\"\n      expand: function() {\n        //the hard part is already done, just flip them\n        the.terms.forEach(function(t) {\n          if (t.implicit) {\n            t.changeTo(t.implicit);\n            t.implicit = '';\n          }\n        });\n        return the;\n      },\n      // \"he would go\" -> \"he'd go\"\n      contract: function() {\n        return contract(the.terms);\n      }\n    };\n  }\n\n  //Sentence methods:\n\n  //insert a new word at this point\n  addBefore(i, str) {\n    let t = new Term(str);\n    this.terms.splice(i, 0, t);\n  }\n  addAfter(i, str) {\n    let t = new Term(str);\n    this.terms.splice(i + 1, 0, t);\n  }\n\n  //the ending punctuation\n  terminator() {\n    const allowed = ['.', '?', '!'];\n    const punct = this.str.slice(-1) || '';\n    if (allowed.indexOf(punct) !== -1) {\n      return punct;\n    }\n    return '.';\n  }\n\n  //part-of-speech assign each term\n  tag() {\n    this.terms = tagger(this);\n    return this.terms;\n  }\n\n  //is it a question/statement\n  sentence_type() {\n    const char = this.terminator();\n    const types = {\n      '?': 'interrogative',\n      '!': 'exclamative',\n      '.': 'declarative',\n    };\n    return types[char] || 'declarative';\n  }\n\n  // A was verbed by B - B verbed A\n  is_passive() {\n    return passive_voice(this);\n  }\n  // john walks quickly -> john walked quickly\n  to_past() {\n    this.terms.forEach(function(t) {\n      if (t instanceof pos.Verb) {\n        t.to_past();\n      }\n    });\n    return this;\n  }\n  // john walked quickly -> john walks quickly\n  to_present() {\n    this.terms.forEach(function(t) {\n      if (t instanceof pos.Verb) {\n        t.to_present();\n      }\n    });\n    return this;\n  }\n  // john walked quickly -> john will walk quickly\n  to_future() {\n    this.terms.forEach(function(t) {\n      if (t instanceof pos.Verb) {\n        t.to_future();\n      }\n    });\n    return this;\n  }\n\n  //map over Term methods\n  text() {\n    return this.terms.reduce(function(s, t) {\n      //implicit contractions shouldn't be included\n      if (t.text) {\n        if (s === '') {\n          s = t.text;\n        } else {\n          s += ' ' + t.text;\n        }\n      }\n      return s;\n    }, '');\n  }\n  //like text but for cleaner text\n  normalized() {\n    return this.terms.reduce(function(s, t) {\n      if (t.text) {\n        s += ' ' + t.normal;\n      }\n      return s;\n    }, '');\n  }\n  //return only the POS tags\n  tags() {\n    return fns.pluck(this.terms, 'tag');\n  }\n  syllables() {\n    return this.terms.reduce(function(arr, t) {\n      arr = arr.concat(t.syllables());\n      return arr;\n    }, []);\n  }\n  //mining for specific things\n  people() {\n    return this.terms.filter(function(t) {\n      return t.pos['Person'];\n    });\n  }\n  places() {\n    return this.terms.filter(function(t) {\n      return t.pos['Place'];\n    });\n  }\n  dates() {\n    return this.terms.filter(function(t) {\n      return t.pos['Date'];\n    });\n  }\n  organisations() {\n    return this.terms.filter(function(t) {\n      return t.pos['Organisation'];\n    });\n  }\n  values() {\n    return this.terms.filter(function(t) {\n      return t.pos['Value'];\n    });\n  }\n}\n\nSentence.fn = Sentence.prototype;\n\nmodule.exports = Sentence;\n\n},{\"../fns.js\":18,\"../term/term.js\":66,\"./passive_voice.js\":21,\"./pos/contractions.js\":22,\"./pos/parts_of_speech.js\":25,\"./pos/tagger.js\":27}],30:[function(require,module,exports){\n'use strict';\nconst Term = require('../term.js');\n\nconst to_comparative = require('./to_comparative');\nconst to_superlative = require('./to_superlative');\nconst adj_to_adv = require('./to_adverb');\nconst adj_to_noun = require('./to_noun');\n\nclass Adjective extends Term {\n  constructor(str, tag) {\n    super(str);\n    this.tag = tag;\n    this.pos['Adjective'] = true;\n  }\n\n  to_comparative() {\n    return to_comparative(this.normal);\n  }\n  to_superlative() {\n    return to_superlative(this.normal);\n  }\n  to_noun() {\n    return adj_to_noun(this.normal);\n  }\n  to_adverb() {\n    return adj_to_adv(this.normal);\n  }\n  conjugate() {\n    return {\n      comparative: to_comparative(this.normal),\n      superlative: to_superlative(this.normal),\n      adverb: adj_to_adv(this.normal),\n      noun: adj_to_noun(this.normal)\n    };\n  }\n\n}\nAdjective.fn = Adjective.prototype;\n// let t = new Adjective(\"quick\")\n// console.log(t.conjugate())\n\nmodule.exports = Adjective;\n\n},{\"../term.js\":66,\"./to_adverb\":31,\"./to_comparative\":32,\"./to_noun\":33,\"./to_superlative\":34}],31:[function(require,module,exports){\n//turn 'quick' into 'quickly'\n'use strict';\nconst adj_to_adv = function(str) {\n  const irregulars = {\n    'idle': 'idly',\n    'public': 'publicly',\n    'vague': 'vaguely',\n    'day': 'daily',\n    'icy': 'icily',\n    'single': 'singly',\n    'female': 'womanly',\n    'male': 'manly',\n    'simple': 'simply',\n    'whole': 'wholly',\n    'special': 'especially',\n    'straight': 'straight',\n    'wrong': 'wrong',\n    'fast': 'fast',\n    'hard': 'hard',\n    'late': 'late',\n    'early': 'early',\n    'well': 'well',\n    'best': 'best',\n    'latter': 'latter',\n    'bad': 'badly'\n  };\n\n  const dont = {\n    'foreign': 1,\n    'black': 1,\n    'modern': 1,\n    'next': 1,\n    'difficult': 1,\n    'degenerate': 1,\n    'young': 1,\n    'awake': 1,\n    'back': 1,\n    'blue': 1,\n    'brown': 1,\n    'orange': 1,\n    'complex': 1,\n    'cool': 1,\n    'dirty': 1,\n    'done': 1,\n    'empty': 1,\n    'fat': 1,\n    'fertile': 1,\n    'frozen': 1,\n    'gold': 1,\n    'grey': 1,\n    'gray': 1,\n    'green': 1,\n    'medium': 1,\n    'parallel': 1,\n    'outdoor': 1,\n    'unknown': 1,\n    'undersized': 1,\n    'used': 1,\n    'welcome': 1,\n    'yellow': 1,\n    'white': 1,\n    'fixed': 1,\n    'mixed': 1,\n    'super': 1,\n    'guilty': 1,\n    'tiny': 1,\n    'able': 1,\n    'unable': 1,\n    'same': 1,\n    'adult': 1\n  };\n\n  const transforms = [{\n    reg: /al$/i,\n    repl: 'ally'\n  }, {\n    reg: /ly$/i,\n    repl: 'ly'\n  }, {\n    reg: /(.{3})y$/i,\n    repl: '$1ily'\n  }, {\n    reg: /que$/i,\n    repl: 'quely'\n  }, {\n    reg: /ue$/i,\n    repl: 'uly'\n  }, {\n    reg: /ic$/i,\n    repl: 'ically'\n  }, {\n    reg: /ble$/i,\n    repl: 'bly'\n  }, {\n    reg: /l$/i,\n    repl: 'ly'\n  }];\n\n  const not_matches = [\n    /airs$/,\n    /ll$/,\n    /ee.$/,\n    /ile$/\n  ];\n\n  if (dont[str]) {\n    return null;\n  }\n  if (irregulars[str]) {\n    return irregulars[str];\n  }\n  if (str.length <= 3) {\n    return null;\n  }\n  for (let i = 0; i < not_matches.length; i++) {\n    if (str.match(not_matches[i])) {\n      return null;\n    }\n  }\n  for (let i = 0; i < transforms.length; i++) {\n    if (str.match(transforms[i].reg)) {\n      return str.replace(transforms[i].reg, transforms[i].repl);\n    }\n  }\n  return str + 'ly';\n};\n// console.log(adj_to_adv('direct'))\n\nmodule.exports = adj_to_adv;\n\n},{}],32:[function(require,module,exports){\n//turn 'quick' into 'quickly'\n'use strict';\nconst convertables = require('../../data/convertables.js');\n\nconst to_comparative = function(str) {\n  const irregulars = {\n    'grey': 'greyer',\n    'gray': 'grayer',\n    'green': 'greener',\n    'yellow': 'yellower',\n    'red': 'redder',\n    'good': 'better',\n    'well': 'better',\n    'bad': 'worse',\n    'sad': 'sadder'\n  };\n\n  const dont = {\n    'overweight': 1,\n    'main': 1,\n    'nearby': 1,\n    'asleep': 1,\n    'weekly': 1,\n    'secret': 1,\n    'certain': 1\n  };\n\n  const transforms = [{\n    reg: /y$/i,\n    repl: 'ier'\n  }, {\n    reg: /([aeiou])t$/i,\n    repl: '$1tter'\n  }, {\n    reg: /([aeou])de$/i,\n    repl: '$1der'\n  }, {\n    reg: /nge$/i,\n    repl: 'nger'\n  }];\n\n  const matches = [\n    /ght$/,\n    /nge$/,\n    /ough$/,\n    /ain$/,\n    /uel$/,\n    /[au]ll$/,\n    /ow$/,\n    /old$/,\n    /oud$/,\n    /e[ae]p$/\n  ];\n\n  const not_matches = [\n    /ary$/,\n    /ous$/\n  ];\n\n  if (dont.hasOwnProperty(str)) {\n    return null;\n  }\n\n  for (let i = 0; i < transforms.length; i++) {\n    if (str.match(transforms[i].reg)) {\n      return str.replace(transforms[i].reg, transforms[i].repl);\n    }\n  }\n\n  if (convertables.hasOwnProperty(str)) {\n    if (str.match(/e$/)) {\n      return str + 'r';\n    }\n    return str + 'er';\n  }\n\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str];\n  }\n\n  for (let i = 0; i < not_matches.length; i++) {\n    if (str.match(not_matches[i])) {\n      return 'more ' + str;\n    }\n  }\n\n  for (let i = 0; i < matches.length; i++) {\n    if (str.match(matches[i])) {\n      return str + 'er';\n    }\n  }\n  return 'more ' + str;\n};\n\n// console.log(to_comparative(\"great\"))\n\nmodule.exports = to_comparative;\n\n},{\"../../data/convertables.js\":3}],33:[function(require,module,exports){\n//convert cute to cuteness\n'use strict';\nconst to_noun = function(w) {\n  const irregulars = {\n    'clean': 'cleanliness',\n    'naivety': 'naivety'\n  };\n  if (!w) {\n    return '';\n  }\n  if (irregulars.hasOwnProperty(w)) {\n    return irregulars[w];\n  }\n  if (w.match(' ')) {\n    return w;\n  }\n  if (w.match(/w$/)) {\n    return w;\n  }\n  const transforms = [{\n    'reg': /y$/,\n    'repl': 'iness'\n  }, {\n    'reg': /le$/,\n    'repl': 'ility'\n  }, {\n    'reg': /ial$/,\n    'repl': 'y'\n  }, {\n    'reg': /al$/,\n    'repl': 'ality'\n  }, {\n    'reg': /ting$/,\n    'repl': 'ting'\n  }, {\n    'reg': /ring$/,\n    'repl': 'ring'\n  }, {\n    'reg': /bing$/,\n    'repl': 'bingness'\n  }, {\n    'reg': /sing$/,\n    'repl': 'se'\n  }, {\n    'reg': /ing$/,\n    'repl': 'ment'\n  }, {\n    'reg': /ess$/,\n    'repl': 'essness'\n  }, {\n    'reg': /ous$/,\n    'repl': 'ousness'\n  }];\n\n  for (let i = 0; i < transforms.length; i++) {\n    if (w.match(transforms[i].reg)) {\n      return w.replace(transforms[i].reg, transforms[i].repl);\n    }\n  }\n\n  if (w.match(/s$/)) {\n    return w;\n  }\n  return w + 'ness';\n};\n\n// console.log(to_noun(\"great\"))\n\nmodule.exports = to_noun;\n\n},{}],34:[function(require,module,exports){\n//turn 'quick' into 'quickest'\n'use strict';\nconst convertables = require('../../data/convertables.js');\n\nconst to_superlative = function(str) {\n  const irregulars = {\n    'nice': 'nicest',\n    'late': 'latest',\n    'hard': 'hardest',\n    'inner': 'innermost',\n    'outer': 'outermost',\n    'far': 'furthest',\n    'worse': 'worst',\n    'bad': 'worst',\n    'good': 'best'\n  };\n\n  const dont = {\n    'overweight': 1,\n    'ready': 1\n  };\n\n  const transforms = [{\n    'reg': /y$/i,\n    'repl': 'iest'\n  }, {\n    'reg': /([aeiou])t$/i,\n    'repl': '$1ttest'\n  }, {\n    'reg': /([aeou])de$/i,\n    'repl': '$1dest'\n  }, {\n    'reg': /nge$/i,\n    'repl': 'ngest'\n  }];\n\n  const matches = [\n    /ght$/,\n    /nge$/,\n    /ough$/,\n    /ain$/,\n    /uel$/,\n    /[au]ll$/,\n    /ow$/,\n    /oud$/,\n    /...p$/\n  ];\n\n  const not_matches = [\n    /ary$/\n  ];\n\n  const generic_transformation = function(s) {\n    if (s.match(/e$/)) {\n      return s + 'st';\n    }\n    return s + 'est';\n  };\n\n  for (let i = 0; i < transforms.length; i++) {\n    if (str.match(transforms[i].reg)) {\n      return str.replace(transforms[i].reg, transforms[i].repl);\n    }\n  }\n\n  if (convertables.hasOwnProperty(str)) {\n    return generic_transformation(str);\n  }\n\n  if (dont.hasOwnProperty(str)) {\n    return 'most ' + str;\n  }\n\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str];\n  }\n  for (let i = 0; i < not_matches.length; i++) {\n    if (str.match(not_matches[i])) {\n      return 'most ' + str;\n    }\n  }\n\n  for (let i = 0; i < matches.length; i++) {\n    if (str.match(matches[i])) {\n      return generic_transformation(str);\n    }\n  }\n  return 'most ' + str;\n};\n\n// console.log(to_superlative(\"great\"))\n\nmodule.exports = to_superlative;\n\n},{\"../../data/convertables.js\":3}],35:[function(require,module,exports){\n'use strict';\nconst Term = require('../term.js');\nconst to_adjective = require('./to_adjective.js');\n\nclass Adverb extends Term {\n  constructor(str, tag) {\n    super(str);\n    this.tag = tag;\n    this.pos['Adverb'] = true;\n  }\n  to_adjective() {\n    return to_adjective(this.normal);\n  }\n}\nAdverb.fn = Adverb.prototype;\n// let t = new Adverb(\"quickly\")\n// console.log(t.to_adjective())\n\nmodule.exports = Adverb;\n\n},{\"../term.js\":66,\"./to_adjective.js\":36}],36:[function(require,module,exports){\n//turns 'quickly' into 'quick'\n'use strict';\nconst to_adjective = function(str) {\n  const irregulars = {\n    'idly': 'idle',\n    'sporadically': 'sporadic',\n    'basically': 'basic',\n    'grammatically': 'grammatical',\n    'alphabetically': 'alphabetical',\n    'economically': 'economical',\n    'conically': 'conical',\n    'politically': 'political',\n    'vertically': 'vertical',\n    'practically': 'practical',\n    'theoretically': 'theoretical',\n    'critically': 'critical',\n    'fantastically': 'fantastic',\n    'mystically': 'mystical',\n    'pornographically': 'pornographic',\n    'fully': 'full',\n    'jolly': 'jolly',\n    'wholly': 'whole'\n  };\n  const transforms = [{\n    'reg': /bly$/i,\n    'repl': 'ble'\n  }, {\n    'reg': /gically$/i,\n    'repl': 'gical'\n  }, {\n    'reg': /([rsdh])ically$/i,\n    'repl': '$1ical'\n  }, {\n    'reg': /ically$/i,\n    'repl': 'ic'\n  }, {\n    'reg': /uly$/i,\n    'repl': 'ue'\n  }, {\n    'reg': /ily$/i,\n    'repl': 'y'\n  }, {\n    'reg': /(.{3})ly$/i,\n    'repl': '$1'\n  }];\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str];\n  }\n  for (let i = 0; i < transforms.length; i++) {\n    if (str.match(transforms[i].reg)) {\n      return str.replace(transforms[i].reg, transforms[i].repl);\n    }\n  }\n  return str;\n};\n\n// console.log(to_adjective('quickly') === 'quick')\n// console.log(to_adjective('marvelously') === 'marvelous')\nmodule.exports = to_adjective;\n\n},{}],37:[function(require,module,exports){\n'use strict';\nconst is_acronym = function(str) {\n  //like N.D.A\n  if (str.match(/([A-Z]\\.)+[A-Z]?$/)) {\n    return true;\n  }\n  //like NDA\n  if (str.match(/[A-Z]{3}$/)) {\n    return true;\n  }\n  return false;\n};\nmodule.exports = is_acronym;\n\n},{}],38:[function(require,module,exports){\n//two-way us/uk transitions with no patterns\nmodule.exports = [\n  ['axe', 'ax'],\n  ['jewellery', 'jewelry'],\n  ['almanack', 'almanac'],\n  ['aluminium', 'aluminum'],\n  ['axe', 'ax'],\n  ['artefact', 'artifact'],\n  ['buses', 'busses'],\n  ['chequered', 'checkered'],\n  ['cypher', 'cipher'],\n  ['disc', 'disk'],\n  ['chilli', 'chili'],\n  ['inflexion', 'inflection'],\n  ['storey', 'story'],\n  ['pyjama', 'pajama'],\n  ['tyre', 'tire'],\n  ['waggon', 'wagon'],\n  ['woollen', 'woolen'],\n  ['woolly', 'wooly'],\n  ['woollies', 'woolies'],\n  ['yoghourt', 'yogurt'],\n  ['yoghurt', 'yogurt'],\n\n\n\n\n\n\n\n  ['aerogramme', 'aerogram'],\n  ['aerogrammes', 'aerograms'],\n  ['anaesthetise', 'anesthetize'],\n  ['anaesthetised', 'anesthetized'],\n  ['anaesthetises', 'anesthetizes'],\n  ['anaesthetising', 'anesthetizing'],\n  ['appal', 'appall'],\n  ['appals', 'appalls'],\n  ['armourers', 'armorers'],\n  ['bannister', 'banister'],\n  ['bannisters', 'banisters'],\n  ['battleaxe', 'battleax'],\n  ['behaviourists', 'behaviorists'],\n  ['bevvies', 'bevies'],\n  ['bevvy', 'bevy'],\n  ['biassing', 'biasing'],\n  ['busing', 'bussing'],\n  ['calliper', 'caliper'],\n  ['callipers', 'calipers'],\n  ['callisthenics', 'calisthenics'],\n  ['cancellation', 'cancelation'],\n  ['cancellations', 'cancelations'],\n  ['catalogued', 'cataloged'],\n  ['centred', 'centered'],\n  ['clarinettist', 'clarinetist'],\n  ['clarinettists', 'clarinetists'],\n  ['connexion', 'connection'],\n  ['connexions', 'connections'],\n  ['cosy', 'cozy'],\n  ['councillors', 'councilors'],\n  ['counsellors', 'counselors'],\n  ['crenellated', 'crenelated'],\n  ['crueller', 'crueler'],\n  ['cruellest', 'cruelest'],\n  ['dialled', 'dialed'],\n  ['dialling', 'dialing'],\n  ['distill', 'distil'],\n  ['distills', 'distils'],\n  ['enrol', 'enroll'],\n  ['enrols', 'enrolls'],\n  ['enthral', 'enthrall'],\n  ['enthrals', 'enthralls'],\n  ['epaulette', 'epaulet'],\n  ['epaulettes', 'epaulets'],\n  ['favourites', 'favorites'],\n  ['favouritism', 'favoritism'],\n  ['flautist', 'flutist'],\n  ['flautists', 'flutists'],\n  ['flavourings', 'flavorings'],\n  ['flavoursome', 'flavorsome'],\n  ['gases', 'gasses'],\n  ['gauging', 'gaging'],\n  ['ghettoise', 'ghettoize'],\n  ['ghettoised', 'ghettoized'],\n  ['ghettoises', 'ghettoizes'],\n  ['gipsies', 'gypsies'],\n  ['groyne', 'groin'],\n  ['groynes', 'groins'],\n  ['gruelling', 'grueling'],\n  ['gruellingly', 'gruelingly'],\n  ['gryphon', 'griffin'],\n  ['gryphons', 'griffins'],\n  ['instal', 'install'],\n  ['instalment', 'installment'],\n  ['instalments', 'installments'],\n  ['instals', 'installs'],\n  ['instil', 'instill'],\n  ['instils', 'instills'],\n  ['jewellers', 'jewelers'],\n  ['labourers', 'laborers'],\n  ['levellers', 'levelers'],\n  ['libellous', 'libelous'],\n  ['licencing', 'licensing'],\n  ['louvred', 'louvered'],\n  ['louvres', 'louvers'],\n  ['manoeuvrability', 'maneuverability'],\n  ['manoeuvrable', 'maneuverable'],\n  ['manoeuvre', 'maneuver'],\n  ['manoeuvred', 'maneuvered'],\n  ['manoeuvres', 'maneuvers'],\n  ['manoeuvring', 'maneuvering'],\n  ['manoeuvrings', 'maneuverings'],\n  ['minibuses', 'minibusses'],\n  ['modellers', 'modelers'],\n  ['moult', 'molt'],\n  ['moulted', 'molted'],\n  ['moulting', 'molting'],\n  ['moults', 'molts'],\n  ['moustache', 'mustache'],\n  ['moustached', 'mustached'],\n  ['moustaches', 'mustaches'],\n  ['moustachioed', 'mustachioed'],\n  ['neighbourhood', 'neighborhood'],\n  ['neighbourhoods', 'neighborhoods'],\n  ['neighbourliness', 'neighborliness'],\n  ['outmanoeuvre', 'outmaneuver'],\n  ['outmanoeuvred', 'outmaneuvered'],\n  ['outmanoeuvres', 'outmaneuvers'],\n  ['outmanoeuvring', 'outmaneuvering'],\n  ['panellist', 'panelist'],\n  ['panellists', 'panelists'],\n  ['philtre', 'filter'],\n  ['philtres', 'filters'],\n  ['ploughshare', 'plowshare'],\n  ['ploughshares', 'plowshares'],\n  ['pouffe', 'pouf'],\n  ['pouffes', 'poufs'],\n  ['practise', 'practice'],\n  ['practised', 'practiced'],\n  ['practises', 'practices'],\n  ['practising', 'practicing'],\n  ['pretence', 'pretense'],\n  ['pretences', 'pretenses'],\n  ['pummelled', 'pummel'],\n  ['pummelling', 'pummeled'],\n  ['pzazz', 'pizzazz'],\n  ['recognisably', 'recognizably'],\n  ['recognisance', 'recognizance'],\n  ['reconnoitred', 'reconnoitered'],\n  ['reconnoitring', 'reconnoitering'],\n  ['revellers', 'revelers'],\n  ['snowploughs', 'snowplow'],\n  ['storeys', 'stories'],\n  ['theatregoer', 'theatergoer'],\n  ['theatregoers', 'theatergoers'],\n  ['tranquillise', 'tranquilize'],\n  ['tranquillised', 'tranquilized'],\n  ['tranquilliser', 'tranquilizer'],\n  ['tranquillisers', 'tranquilizers'],\n  ['tranquillises', 'tranquilizes'],\n  ['tranquillising', 'tranquilizing'],\n  ['tranquilly', 'tranquility'],\n  ['travellers', 'travelers'],\n  ['videodiscs', 'videodisks'],\n\n\n\n\n\n\n\n];\n\n},{}],39:[function(require,module,exports){\n// convert british spellings into american ones\n// built with patterns+exceptions from https://en.wikipedia.org/wiki/British_spelling\n'use strict';\nconst exceptions = require('./exceptions').reduce(function(h, a) {\n  h[a[0]] = a[1];\n  return h;\n}, {});\n\n\nconst patterns = [\n  // ise -> ize\n  {\n    reg: /([^aeiou][iy])s(e|ed|es|ing)?$/,\n    repl: '$1z$2'\n  },\n\n  // our -> or\n  {\n    reg: /colour/,\n    repl: 'color'\n  },\n  {\n    reg: /(..)our(ly|y|ite|ed|ing|s|al|ous|ies|full?|able|ably|er|ism|ist|less)?s?$/,\n    repl: '$1or$2'\n  },\n\n\n  // xion -> tion\n  {\n    reg: /([aeiou])xion([ed])?$/,\n    repl: '$1tion$2'\n  },\n  //logue -> log\n  {\n    reg: /logue?/,\n    repl: 'log'\n  },\n  // ae -> e\n  {\n    reg: /([o|a])e/,\n    repl: 'e'\n  },\n  //eing -> ing\n  {\n    reg: /e(ing|able)$/,\n    repl: '$1'\n  },\n  // illful -> ilful\n  {\n    reg: /([aeiou]+[^aeiou]+[aeiou]+)ll(ful|ment|est|ing|or|er|ed)$/, //must be second-syllable\n    repl: '$1l$2'\n  },\n  {\n    reg: /(..)sation/,\n    repl: '$1zation'\n  },\n  {\n    reg: /isabl(i|e)/,\n    repl: 'izabl$1'\n  },\n  {\n    reg: /iser/,\n    repl: 'izer'\n  },\n  {\n    reg: /(..)sing(ly)?/,\n    repl: '$1zing$2'\n  },\n  {\n    reg: /(i|a)niser/,\n    repl: '$1nizer'\n  },\n\n  {\n    reg: /isement/,\n    repl: 'izement'\n  },\n\n  //re -> er\n  {\n    reg: /euvre/,\n    repl: 'euver'\n  },\n  {\n    reg: /outre/,\n    repl: 'outer'\n  },\n\n  {\n    reg: /centre/,\n    repl: 'center'\n  },\n  // re -> er\n  {\n    reg: /(.[^cdnv])re(s)?$/,\n    repl: '$1er$2'\n  },\n  {\n    reg: /fibre/,\n    repl: 'fiber'\n  },\n\n  {\n    reg: /uring/,\n    repl: 'oring'\n  },\n  {\n    reg: /fence/,\n    repl: 'fense'\n  },\n\n  {\n    reg: /gramme/,\n    repl: 'gram'\n  },\n  {\n    reg: /anaes/,\n    repl: 'anes'\n  },\n  {\n    reg: /behove/,\n    repl: 'behoove'\n  },\n  {\n    reg: /baulk/,\n    repl: 'balk'\n  },\n\n\n\n  {\n    reg: /biass/,\n    repl: 'bias'\n  },\n  {\n    reg: /alyse/,\n    repl: 'alyze'\n  },\n\n  {\n    reg: /cheque/,\n    repl: 'check'\n  },\n\n  {\n    reg: /^cosi/,\n    repl: 'cozi'\n  },\n  {\n    reg: /defenc/,\n    repl: 'defens'\n  },\n  {\n    reg: /draught/,\n    repl: 'draft'\n  },\n  {\n    reg: /duell/,\n    repl: 'duel'\n  },\n  {\n    reg: /fillet/,\n    repl: 'filet'\n  },\n  {\n    reg: /fulfil/,\n    repl: 'fulfill'\n  },\n  {\n    reg: /gaol/,\n    repl: 'jail'\n  },\n  {\n    reg: /gauge/,\n    repl: 'gage'\n  },\n  {\n    reg: /grey/,\n    repl: 'gray'\n  },\n  {\n    reg: /licence/,\n    repl: 'license'\n  },\n  {\n    reg: /manoeuvre/,\n    repl: 'maneuver'\n  },\n  {\n    reg: /marvellous/,\n    repl: 'marvelous'\n  },\n  {\n    reg: /mould/,\n    repl: 'mold'\n  },\n\n  {\n    reg: /plough/,\n    repl: 'plow'\n  },\n  {\n    reg: /practise/,\n    repl: 'practice'\n  },\n\n  {\n    reg: /tranquill/,\n    repl: 'tranquil'\n  },\n  {\n    reg: /triall/,\n    repl: 'trial'\n  },\n  {\n    reg: /sceptic/,\n    repl: 'skeptic'\n  },\n  {\n    reg: /sulph/,\n    repl: 'sulf'\n  },\n  {\n    reg: /syphon/,\n    repl: 'siphon'\n  },\n  {\n    reg: /tonne/,\n    repl: 'ton'\n  },\n  {\n    reg: /anaesthetis/,\n    repl: 'anesthetiz'\n  },\n  {\n    reg: /anaesthetise/,\n    repl: 'anesthetize'\n  },\n  {\n    reg: /disc$/,\n    repl: 'disk'\n  },\n  {\n    reg: /tranquillise/,\n    repl: 'tranquilize'\n  }\n];\n\nconst americanize = function(str) {\n  if (exceptions[str]) {\n    return exceptions[str];\n  }\n  let single = str.replace(/s$/, ''); //eww\n  if (exceptions[single]) {\n    return exceptions[single] + 's';\n  }\n  for (let i = 0; i < patterns.length; i++) {\n    if (str.match(patterns[i].reg)) {\n      return str.replace(patterns[i].reg, patterns[i].repl);\n    }\n  }\n\n  return str;\n};\n\n// console.log(americanize(\"synthesise\") === \"synthesize\")\n// console.log(americanize('are'));\n// console.log(americanize('yoghourt') === 'yogurt');\n// console.log(americanize('yoghourts') === 'yogurts');\n// console.log(exceptions['yoghourt']);\n\nmodule.exports = americanize;\n\n},{\"./exceptions\":38}],40:[function(require,module,exports){\n// convert american spellings into british ones\n// built with patterns+exceptions from https://en.wikipedia.org/wiki/British_spelling\n// (some patterns are only safe to do in one direction)\n'use strict';\nconst exceptions = require('./exceptions').reduce(function(h, a) {\n  h[a[1]] = a[0];\n  return h;\n}, {});\n\nconst patterns = [\n  // ise -> ize\n  {\n    reg: /([^aeiou][iy])z(e|ed|es|ing|er)?$/,\n    repl: '$1s$2'\n  },\n  // our -> or\n  {\n    reg: /(..)our(ly|y|ite)?$/,\n    repl: '$1or$2'\n  },\n  // re -> er\n  {\n    reg: /([^cdnv])re(s)?$/,\n    repl: '$1er$2'\n  },\n  // xion -> tion\n  {\n    reg: /([aeiou])xion([ed])?$/,\n    repl: '$1tion$2'\n  },\n  //logue -> log\n  {\n    reg: /logue$/,\n    repl: 'log'\n  },\n  // ae -> e\n  {\n    reg: /([o|a])e/,\n    repl: 'e'\n  },\n  //eing -> ing\n  {\n    reg: /e(ing|able)$/,\n    repl: '$1'\n  },\n  // illful -> ilful\n  {\n    reg: /([aeiou]+[^aeiou]+[aeiou]+)ll(ful|ment|est|ing|or|er|ed)$/, //must be second-syllable\n    repl: '$1l$2'\n  },\n  {\n    reg: /ization/,\n    repl: 'isation'\n  },\n  {\n    reg: /izable/,\n    repl: 'isable'\n  },\n  {\n    reg: /orabl/,\n    repl: 'ourabl'\n  },\n  {\n    reg: /zingly/,\n    repl: 'singly'\n  },\n  {\n    reg: /ilizer/,\n    repl: 'iliser'\n  },\n  {\n    reg: /pedic/,\n    repl: 'paedic'\n  },\n  {\n    reg: /anesthes/,\n    repl: 'anaesthes'\n  },\n  {\n    reg: /ar(b|m|d)or/,\n    repl: 'ar$1our'\n  },\n  {\n    reg: /balk/,\n    repl: 'baulk'\n  },\n  {\n    reg: /behavior/,\n    repl: 'behaviour'\n  },\n  {\n    reg: /behove/,\n    repl: 'behoove'\n  },\n  {\n    reg: /canceled/,\n    repl: 'cancelled'\n  },\n  {\n    reg: /catalog/,\n    repl: 'catalogue'\n  },\n  {\n    reg: /meter/,\n    repl: 'metre'\n  },\n  {\n    reg: /center/,\n    repl: 'centre'\n  },\n  {\n    reg: /clamor/,\n    repl: 'clamour'\n  },\n  {\n    reg: /color/,\n    repl: 'colour'\n  },\n  {\n    reg: /defense/,\n    repl: 'defence'\n  },\n  {\n    reg: /endeavor/,\n    repl: 'endeavour'\n  },\n  {\n    reg: /favor/,\n    repl: 'favour'\n  },\n  {\n    reg: /flavor/,\n    repl: 'flavour'\n  },\n  {\n    reg: /filet/,\n    repl: 'fillet'\n  },\n  {\n    reg: /jail/,\n    repl: 'gaol'\n  },\n  {\n    reg: /gray/,\n    repl: 'grey'\n  },\n  {\n    reg: /^hematol/,\n    repl: 'haematol'\n  },\n  {\n    reg: /^hemo/,\n    repl: 'haemo'\n  },\n  {\n    reg: /^install/,\n    repl: 'instal'\n  },\n  {\n    reg: /mold/,\n    repl: 'mould'\n  },\n  {\n    reg: /neighbor/,\n    repl: 'neighbour'\n  },\n  {\n    reg: /odor/,\n    repl: 'odour'\n  },\n  {\n    reg: /^pedo/,\n    repl: 'paedo'\n  },\n  {\n    reg: /^pedia/,\n    repl: 'paedia'\n  },\n  {\n    reg: /^parlor/,\n    repl: 'parlour'\n  },\n  {\n    reg: /plow/,\n    repl: 'plough'\n  },\n  {\n    reg: /skeptic/,\n    repl: 'sceptic'\n  },\n  {\n    reg: /rumor/,\n    repl: 'rumour'\n  },\n  {\n    reg: /practice/,\n    repl: 'practise'\n  },\n  {\n    reg: /maneuver/,\n    repl: 'manoeuvre'\n  },\n  {\n    reg: /level(ed|er|ing)?$/,\n    repl: 'levell$1'\n  },\n  {\n    reg: /travel(ed|er|ing)?$/,\n    repl: 'travell$1'\n  },\n  {\n    reg: /tranquil/,\n    repl: 'tranquill'\n  },\n  {\n    reg: /tranquilize/,\n    repl: 'tranquillise'\n  },\n  {\n    reg: /vigor/,\n    repl: 'vigour'\n  },\n  {\n    reg: /fiber/,\n    repl: 'fibre'\n  },\n  {\n    reg: /drafts/,\n    repl: 'draughts'\n  },\n  {\n    reg: /disk/,\n    repl: 'disc'\n  },\n  {\n    reg: /uel(er|est|ed)/,\n    repl: 'uell$1'\n  },\n  {\n    reg: /cozi(er|est|es|ly)/,\n    repl: 'cosi$1'\n  },\n  {\n    reg: /colorize/,\n    repl: 'colourise'\n  },\n  {\n    reg: /honor/,\n    repl: 'honour'\n  },\n  {\n    reg: /abor(ed|ing)/,\n    repl: 'abour$1'\n  },\n  {\n    reg: /pedal(ed|ing)/,\n    repl: 'pedall$1'\n  },\n  {\n    reg: /shovel(ed|ing|er)/,\n    repl: 'shovell$1'\n  },\n  {\n    reg: /al(ed|ing|er)/,\n    repl: 'all$1'\n  },\n  {\n    reg: /el(ed|ing|er)/,\n    repl: 'ell$1'\n  },\n  {\n    reg: /ol(ed|ing|er)/,\n    repl: 'oll$1'\n  },\n  {\n    reg: /avor(ed|ing|er)/,\n    repl: 'avour$1'\n  },\n  {\n    reg: /anesth/,\n    repl: 'anaesth'\n  },\n  {\n    reg: /behoove/,\n    repl: 'behove'\n  },\n  {\n    reg: /sulfur/,\n    repl: 'sulphur'\n  },\n\n];\n\nconst britishize = function(str) {\n  if (exceptions[str]) {\n    return exceptions[str];\n  }\n  let single = str.replace(/s$/, ''); //eww\n  if (exceptions[single]) {\n    return exceptions[single];\n  }\n  for (let i = 0; i < patterns.length; i++) {\n    if (str.match(patterns[i].reg)) {\n      return str.replace(patterns[i].reg, patterns[i].repl);\n    }\n  }\n  return str;\n};\n\n// console.log(britishize(\"synthesize\") === \"synthesise\")\n// console.log(britishize(\"synthesized\") === \"synthesised\")\n\nmodule.exports = britishize;\n\n},{\"./exceptions\":38}],41:[function(require,module,exports){\n'use strict';\n\nconst is_acronym = require('../is_acronym.js');\n\n//chooses an indefinite aricle 'a/an' for a word\nconst irregulars = {\n  'hour': 'an',\n  'heir': 'an',\n  'heirloom': 'an',\n  'honest': 'an',\n  'honour': 'an',\n  'honor': 'an',\n  'uber': 'an' //german u\n};\n\nconst indefinite_article = function(str) {\n  if (!str) {\n    return null;\n  }\n  //pronounced letters of acronyms that get a 'an'\n  const an_acronyms = {\n    A: true,\n    E: true,\n    F: true,\n    H: true,\n    I: true,\n    L: true,\n    M: true,\n    N: true,\n    O: true,\n    R: true,\n    S: true,\n    X: true\n  };\n  //'a' regexes\n  const a_regexs = [\n    /^onc?e/i, //'wu' sound of 'o'\n    /^u[bcfhjkqrstn][aeiou]/i, // 'yu' sound for hard 'u'\n    /^eul/i\n  ];\n\n  //begin business time\n  ////////////////////\n  //explicit irregular forms\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str];\n  }\n  //spelled-out acronyms\n  if (is_acronym(str) && an_acronyms.hasOwnProperty(str.substr(0, 1))) {\n    return 'an';\n  }\n  //'a' regexes\n  for (let i = 0; i < a_regexs.length; i++) {\n    if (str.match(a_regexs[i])) {\n      return 'a';\n    }\n  }\n  //basic vowel-startings\n  if (str.match(/^[aeiou]/i)) {\n    return 'an';\n  }\n  return 'a';\n};\n\nmodule.exports = indefinite_article;\n\n// console.log(indefinite_article('N.D.A'));\n\n},{\"../is_acronym.js\":37}],42:[function(require,module,exports){\n'use strict';\nconst Noun = require('../noun.js');\nconst parse_date = require('./parse_date.js');\n\nclass _Date extends Noun {\n  constructor(str, tag) {\n    super(str);\n    this.tag = tag;\n    this.pos['Date'] = true;\n    this.data = parse_date(this.text) || {};\n  }\n\n  //can we make it a js Date object?\n  is_date() {\n    let o = this.data;\n    if (o.month === null || o.day === null || o.year === null) {\n      return false;\n    }\n    return true;\n  }\n\n  date() {\n    if (this.is_date() === false) {\n      return null;\n    }\n    let d = new Date();\n    if (this.data.year) {\n      d.setYear(this.data.year);\n    }\n    if (this.data.month !== null) {\n      d.setMonth(this.data.month);\n    }\n    if (this.data.day !== null) {\n      d.setDate(this.data.day);\n    }\n    return d;\n  }\n\n}\n_Date.fn = _Date.prototype;\n\nmodule.exports = _Date;\n\n// let d = new _Date('June 4th 1993');\n// console.log(d.date());\n\n},{\"../noun.js\":48,\"./parse_date.js\":45}],43:[function(require,module,exports){\n'use strict';\n\nlet months = require('../../../data/dates').months.concat(['march', 'may']); //(march and may are ambiguous grammatically)\nconst month = '(' + months.join('|') + ')';\nconst day = '([0-9]{1,2})';\nconst year = '\\'?([12][0-9]{3})';\n\nconst rules = [\n  {\n    reg: `${month} ${day} ${year}`, //'March 1st 1987'\n    order: ['month', 'day', 'year']\n  },\n  {\n    reg: `${day} of ${month} ${year}`, //'3rd of March 1969',\n    order: ['day', 'month', 'year']\n  },\n\n  //incomplete versions\n  {\n    reg: `${day} of ${month}`, //'3rd of March',\n    order: ['day', 'month']\n  },\n  {\n    reg: `${month} ${year}`, //'March 1969',\n    order: ['month', 'year']\n  },\n  {\n    reg: `${month} ${day}`, //'March 18th',\n    order: ['month', 'day']\n  },\n  {\n    reg: `${day} ${month}`, //'18th of March',\n    order: ['month', 'day']\n  },\n  {\n    reg: `${month}`, //'january'\n    order: ['month']\n  },\n  {\n    reg: `${year}`, //'1998'\n    order: ['year']\n  }\n].map(function (o) {\n  o.reg = new RegExp('\\\\b' + o.reg + '\\\\b', '');\n  return o;\n});\nmodule.exports = rules;\n\n},{\"../../../data/dates\":4}],44:[function(require,module,exports){\n\n'use strict';\n\nconst dates = require('../../../data/dates');\n\n//build date regex\nlet terms = dates.months.concat(dates.days);\nlet day_reg = '(\\\\b' + terms.join('\\\\b|\\\\b') + '\\\\b)';\nday_reg = new RegExp(day_reg, 'i');\nconst times_reg = /1?[0-9]:[0-9]{2}/;\n\nconst is_date = function(str) {\n  if (str.match(day_reg) || str.match(times_reg)) {\n    return true;\n  }\n  return false;\n};\n\nmodule.exports = is_date;\n\n// console.log(is_date('january fifth, 2015'));\n\n},{\"../../../data/dates\":4}],45:[function(require,module,exports){\n'use strict';\n// #generates properly-formatted dates from free-text date forms\n// #by spencer kelly 2015\nconst to_number = require('../value/to_number.js');\n//regexes to top-parse\nconst rules = require('./date_rules.js');\n\n//return integers from strings\nlet wrangle = {\n\n  year: function(s) {\n    let num = s.match(/[0-9]+/);\n    num = parseInt(num, 10);\n    if (!num || num > 2900 || num < 0) {\n      return null;\n    }\n    //honestly, prob not a year either\n    if (num > 100 && num < 1000) {\n      return null;\n    }\n    //'20BC' becomes -20\n    if (s.match(/[0-9] ?bc/i)) {\n      return num *= -1;\n    }\n    // '98 becomes 1998\n    if (num < 100 && num > 30) {\n      num += 1900;\n    }\n    return num;\n  },\n\n  month: function(s) {\n    //0 based months, 1 based days...\n    let months_obj = {\n      january: 0,\n      february: 1,\n      march: 2,\n      april: 3,\n      may: 4,\n      june: 5,\n      july: 6,\n      august: 7,\n      september: 8,\n      october: 9,\n      november: 10,\n      december: 11,\n      jan: 0,\n      feb: 1,\n      mar: 2,\n      apr: 3,\n      aug: 7,\n      sept: 8,\n      oct: 9,\n      nov: 10,\n      dec: 11\n    };\n    return months_obj[s];\n  },\n\n  day: function(s) {\n    let n = to_number(s) || parseInt(s, 10);\n    if (n < 0 || n > 31) {\n      return null;\n    }\n    return n;\n  }\n};\n\n//cleanup string\nconst preprocess = function(str) {\n  str = str.toLowerCase();\n  str = str.replace(/([0-9]+)(nd|rd|th|st)/i, '$1');\n  let words = str.split(' ').map(function(w) {\n    if (!w.match(/[0-9]/)) {\n      return to_number(w) || w;\n    }\n    return w;\n  });\n  return words.join(' ');\n};\n\nconst date_parser = function(str) {\n  str = preprocess(str);\n  let result = {\n    year: null,\n    month: null,\n    day: null\n  };\n  for(let i = 0; i < rules.length; i++) {\n    if (str.match(rules[i].reg)) {\n      let m = str.match(rules[i].reg);\n      for(let o = 0; o < rules[i].order.length; o++) {\n        let type = rules[i].order[o];\n        result[type] = wrangle[type](m[o + 1]);\n      }\n      break;\n    }\n  }\n  return result;\n};\nmodule.exports = date_parser;\n// console.log(wrangle.year('1998'));\n// console.log(date_parser('March 1st 1987'));\n// console.log(date_extractor('june second 1999'));\n\n},{\"../value/to_number.js\":62,\"./date_rules.js\":43}],46:[function(require,module,exports){\n'use strict';\nconst irregulars = require('../../data/irregular_nouns');\n\n//similar to plural/singularize rules, but not the same\nconst plural_indicators = [\n  /(^v)ies$/i,\n  /ises$/i,\n  /ives$/i,\n  /(antenn|formul|nebul|vertebr|vit)ae$/i,\n  /(octop|vir|radi|nucle|fung|cact|stimul)i$/i,\n  /(buffal|tomat|tornad)oes$/i,\n  /(analy|ba|diagno|parenthe|progno|synop|the)ses$/i,\n  /(vert|ind|cort)ices$/i,\n  /(matr|append)ices$/i,\n  /(x|ch|ss|sh|s|z|o)es$/i,\n  /men$/i,\n  /news$/i,\n  /.tia$/i,\n  /(^f)ves$/i,\n  /(lr)ves$/i,\n  /(^aeiouy|qu)ies$/i,\n  /(m|l)ice$/i,\n  /(cris|ax|test)es$/i,\n  /(alias|status)es$/i,\n  /ics$/i\n];\n\n//similar to plural/singularize rules, but not the same\nconst singular_indicators = [\n  /(ax|test)is$/i,\n  /(octop|vir|radi|nucle|fung|cact|stimul)us$/i,\n  /(octop|vir)i$/i,\n  /(rl)f$/i,\n  /(alias|status)$/i,\n  /(bu)s$/i,\n  /(al|ad|at|er|et|ed|ad)o$/i,\n  /(ti)um$/i,\n  /(ti)a$/i,\n  /sis$/i,\n  /(?:(^f)fe|(lr)f)$/i,\n  /hive$/i,\n  /(^aeiouy|qu)y$/i,\n  /(x|ch|ss|sh|z)$/i,\n  /(matr|vert|ind|cort)(ix|ex)$/i,\n  /(m|l)ouse$/i,\n  /(m|l)ice$/i,\n  /(antenn|formul|nebul|vertebr|vit)a$/i,\n  /.sis$/i,\n  /^(?!talis|.*hu)(.*)man$/i\n];\n\nconst is_plural = function(str) {\n  str = (str || '').toLowerCase();\n  //handle 'mayors of chicago'\n  const preposition = str.match(/([a-z]*) (of|in|by|for) [a-z]/);\n  if (preposition && preposition[1]) {\n    str = preposition[1];\n  }\n  // if it's a known irregular case\n  for (let i = 0; i < irregulars.length; i++) {\n    if (irregulars[i][1] === str) {\n      return true;\n    }\n    if (irregulars[i][0] === str) {\n      return false;\n    }\n  }\n  for (let i = 0; i < plural_indicators.length; i++) {\n    if (str.match(plural_indicators[i])) {\n      return true;\n    }\n  }\n  for (let i = 0; i < singular_indicators.length; i++) {\n    if (str.match(singular_indicators[i])) {\n      return false;\n    }\n  }\n  // some 'looks pretty plural' rules\n  if (str.match(/s$/) && !str.match(/ss$/) && str.length > 3) { //needs some lovin'\n    return true;\n  }\n  return false;\n};\n\n// console.log(is_plural('octopus') === false)\n// console.log(is_plural('octopi') === true)\n// console.log(is_plural('eyebrow') === false)\n// console.log(is_plural('eyebrows') === true)\n// console.log(is_plural('child') === false)\n// console.log(is_plural('children') === true)\n\nmodule.exports = is_plural;\n\n},{\"../../data/irregular_nouns\":8}],47:[function(require,module,exports){\n//uncountables are words that shouldn't ever inflect, for metaphysical reasons, like 'peace'\n'use strict';\nconst uncountable_arr = require('../../data/uncountables.js');\n\nconst uncountable = uncountable_arr.reduce(function(h, a) {\n  h[a] = true;\n  return h;\n}, {});\n\nconst is_uncountable = function(str) {\n  if (uncountable[str]) {\n    return true;\n  }\n  return false;\n};\n// console.log(is_uncountable(\"peace\") === true)\n// console.log(is_uncountable(\"dog\") === false)\nmodule.exports = is_uncountable;\n\n},{\"../../data/uncountables.js\":16}],48:[function(require,module,exports){\n'use strict';\nconst Term = require('../term.js');\nconst article = require('./article.js');\nconst is_plural = require('./is_plural.js');\nconst is_place = require('./place/is_place.js');\nconst is_person = require('./person/is_person.js');\nconst pronoun = require('./pronoun.js');\nconst is_value = require('./value/is_value.js');\nconst is_date = require('./date/is_date.js');\nconst is_organisation = require('./organisation/is_organisation.js');\nconst singularize = require('./singularize.js');\nconst pluralize = require('./pluralize.js');\nconst is_uncountable = require('./is_uncountable.js');\n\nclass Noun extends Term {\n  constructor(str, tag) {\n    super(str);\n    this.tag = tag;\n    this.pos['Noun'] = true;\n    if (tag) {\n      this.pos[tag] = true;\n    }\n  }\n  //noun methods\n  article() {\n    return article(this.text);\n  }\n  pronoun() {\n    if (this.is_organisation() || this.is_place() || this.is_value()) {\n      return 'it';\n    }\n    return pronoun(this.normal);\n  }\n  is_plural() {\n    return is_plural(this.normal);\n  }\n  is_uncountable() {\n    return is_uncountable(this.normal);\n  }\n  pluralize() {\n    return pluralize(this.normal);\n  }\n  singularize() {\n    return singularize(this.normal);\n  }\n  //sub-classes\n  is_person() {\n    return is_person(this.normal);\n  }\n  is_organisation() {\n    return is_organisation(this.normal, this.text);\n  }\n  is_date() {\n    return is_date(this.normal);\n  }\n  is_value() {\n    return is_value(this.normal);\n  }\n  is_place() {\n    return is_place(this.normal);\n  }\n\n}\n\nNoun.fn = Noun.prototype;\n\nmodule.exports = Noun;\n\n// let t = new Noun('NDA');\n// console.log(t.article());\n\n},{\"../term.js\":66,\"./article.js\":41,\"./date/is_date.js\":44,\"./is_plural.js\":46,\"./is_uncountable.js\":47,\"./organisation/is_organisation.js\":49,\"./person/is_person.js\":52,\"./place/is_place.js\":55,\"./pluralize.js\":57,\"./pronoun.js\":58,\"./singularize.js\":59,\"./value/is_value.js\":60}],49:[function(require,module,exports){\n'use strict';\nconst abbreviations = require('../../../data/abbreviations');\nconst org_data = require('../../../data/organisations');\n\n//words like 'co' and ltd\nlet org_suffix = abbreviations.orgs.reduce(function(h, s) {\n  h[s] = true;\n  return h;\n}, {});\norg_data.suffixes.forEach(function(s) { //a few more\n  org_suffix[s] = true;\n});\n\n//named orgs like google and nestle\nlet org_names = org_data.organisations.reduce(function(h, s) {\n  h[s] = true;\n  return h;\n}, {});\n\nconst is_organisation = function(str, text) {\n  text = text || '';\n  //some known organisations, like microsoft\n  if (org_names[str]) {\n    return true;\n  }\n  //no period acronyms\n  if (text.length <= 5 && text.match(/^[A-Z][A-Z]+$/) !== null) {\n    return true;\n  }\n  //period acronyms\n  if (text.length >= 4 && text.match(/^([A-Z]\\.)*$/) !== null) {\n    return true;\n  }\n  // eg 'Smith & Co'\n  if (str.match(/ & /)) {\n    return true;\n  }\n  // Girlscouts of Canada\n  if (str.match(/..s of /)) {\n    return true;\n  }\n  // eg pets.com\n  if (str.match(/[a-z]{3}\\.(com|net|org|biz)/)) { //not a perfect url regex, but a \"org.com\"\n    return true;\n  }\n  let words = str.split(' ');\n  let last = words[words.length - 1];\n  if (org_suffix[last]) {\n    return true;\n  }\n\n  return false;\n};\n\nmodule.exports = is_organisation;\n\n// console.log(is_organisation('Captain of Jamaica'));\n\n},{\"../../../data/abbreviations\":1,\"../../../data/organisations\":13}],50:[function(require,module,exports){\n'use strict';\nconst Noun = require('../noun.js');\n\nclass Organisation extends Noun {\n  constructor(str, tag) {\n    super(str);\n    this.tag = tag;\n    this.pos['Organisation'] = true;\n\n  }\n}\nOrganisation.fn = Organisation.prototype;\nmodule.exports = Organisation;\n\n},{\"../noun.js\":48}],51:[function(require,module,exports){\n'use strict';\nconst firstnames = require('../../../data/firstnames');\nconst parse_name = require('./parse_name.js');\n\nconst gender = function(normal) {\n  if (normal === 'he') {\n    return 'Male';\n  }\n  if (normal === 'she') {\n    return 'Female';\n  }\n  let o = parse_name(normal);\n  let firstName = o.firstName;\n  if (!firstName) {\n    return null;\n  }\n  if (firstnames[firstName] === 'm') {\n    return 'Male';\n  }\n  if (firstnames[firstName] === 'f') {\n    return 'Female';\n  }\n  //male honourifics\n  if (normal.match(/\\b(mr|mister|sr|jr)\\b/i)) {\n    return 'Male';\n  }\n  //female honourifics\n  if (normal.match(/^(mrs|miss|ms|misses|mme|mlle)\\.? /i)) {\n    return 'Female';\n  }\n  //statistical guesses\n  if (firstName.match(/.(i|ee|[a|e]y|a)$/i)) { //this is almost-always true\n    return 'Female';\n  }\n  if (firstName.match(/[ou]$/i)) { //if it ends in a 'oh or uh', male\n    return 'Male';\n  }\n  if (firstName.match(/(nn|ll|tt)/i)) { //if it has double-consonants, female\n    return 'Female';\n  }\n  return null;\n};\nmodule.exports = gender;\n\n// console.log(gender('john', 'john') === 'Male');\n// console.log(gender('jane smith', 'jane') === 'Female');\n\n},{\"../../../data/firstnames\":6,\"./parse_name.js\":53}],52:[function(require,module,exports){\n'use strict';\nconst firstnames = require('../../../data/firstnames');\nlet honourifics = require('../../../data/honourifics').reduce(function(h, s) {\n  h[s] = true;\n  return h;\n}, {});\n\nlet whitelist = {\n  'he': true,\n  'she': true,\n  'i': true,\n  'you': true,\n};\n\nconst is_person = function(str) {\n  if (whitelist[str] || firstnames[str]) {\n    return true;\n  }\n  let words = str.split(' ');\n  if (words.length > 1) {\n    let first = words[0];\n    if (honourifics[first] || firstnames[first]) {\n      return true;\n    }\n  }\n  return false;\n};\n\nmodule.exports = is_person;\n\n// console.log(is_person('Illi Danza'));\n\n},{\"../../../data/firstnames\":6,\"../../../data/honourifics\":7}],53:[function(require,module,exports){\n'use strict';\nconst firstnames = require('../../../data/firstnames');\nconst honourifics = require('../../../data/honourifics').reduce(function(h, s) {\n  h[s] = true;\n  return h;\n}, {});\n\nconst parse_name = function(str) {\n\n  let words = str.split(' ');\n  let o = {\n    honourific: null,\n    firstName: null,\n    middleName: null,\n    lastName: null,\n  };\n\n  //first-word honourific\n  if (honourifics[words[0]]) {\n    o.honourific = words[0];\n    words = words.slice(1, words.length);\n  }\n  //last-word honourific\n  if (honourifics[words[words.length - 1]]) {\n    o.honourific = words[words.length - 1];\n    words = words.slice(0, words.length - 1);\n  }\n  //see if the first word is now a known first-name\n  if (firstnames[words[0]]) {\n    o.firstName = words[0];\n    words = words.slice(1, words.length);\n  } else {\n    //ambiguous one-word name\n    if (words.length === 1) {\n      return o;\n    }\n    //looks like an unknown first-name\n    o.firstName = words[0];\n    words = words.slice(1, words.length);\n  }\n  //assume the remaining is '[middle..] [last]'\n  if (words[words.length - 1]) {\n    o.lastName = words[words.length - 1];\n    words = words.slice(0, words.length - 1);\n  }\n  o.middleName = words.join(' ');\n  return o;\n};\n\nmodule.exports = parse_name;\n\n// console.log(parse_name('john smith'));\n\n},{\"../../../data/firstnames\":6,\"../../../data/honourifics\":7}],54:[function(require,module,exports){\n// not all cultures use the firstname-lastname practice. this does make some assumptions.\n'use strict';\nconst Noun = require('../noun.js');\nconst guess_gender = require('./gender.js');\nconst parse_name = require('./parse_name.js');\n\nclass Person extends Noun {\n  constructor(str, tag) {\n    super(str);\n    this.tag = tag;\n    this.pos['Person'] = true;\n    this.honourific = null;\n    this.firstName = null;\n    this.middleName = null;\n    this.lastName = null;\n    this.parse();\n  }\n\n  //turn a multi-word string into [first, middle, last, honourific]\n  parse() {\n    let o = parse_name(this.normal);\n    this.honourific = o.honourific;\n    this.firstName = o.firstName;\n    this.middleName = o.middleName;\n    this.lastName = o.lastName;\n  }\n\n  gender() {\n    return guess_gender(this.normal);\n  }\n\n}\nPerson.fn = Person.prototype;\nmodule.exports = Person;\n\n// let p = new Person('John Smith');\n// console.log(p.gender());\n\n},{\"../noun.js\":48,\"./gender.js\":51,\"./parse_name.js\":53}],55:[function(require,module,exports){\n'use strict';\n\nconst places = require('../../../data/places');\nconst abbreviations = require('../../../data/abbreviations');\n\n//add Country names\nlet isPlace = places.countries.reduce(function(h, s) {\n  h[s] = true;\n  return h;\n}, {});\n//add City names\nplaces.cities.forEach(function(s) {\n  isPlace[s] = true;\n});\n//add place abbreviations names\nabbreviations.places.forEach(function(s) {\n  isPlace[s] = true;\n});\n\n//these are signals too\nlet placeSignals = [\n  'west',\n  'east',\n  'nort',\n  'south',\n  'western',\n  'eastern',\n  'nortern',\n  'southern',\n  'city',\n  'town',\n  'county',\n  'state',\n  'province',\n].reduce(function(h, s) {\n  h[s] = true;\n  return h;\n}, {});\n\nconst is_place = function(str) {\n  let words = str.split();\n  for(let i = 0; i < words.length; i++) {\n    if (isPlace[words[i]]) {\n      return true;\n    }\n    if (placeSignals[words[i]] && !placeSignals[str]) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nmodule.exports = is_place;\n\n},{\"../../../data/abbreviations\":1,\"../../../data/places\":15}],56:[function(require,module,exports){\n'use strict';\nconst Noun = require('../noun.js');\n\nconst Place = class Place extends Noun {\nconstructor(str, tag) {\n  super(str);\n  this.tag = tag;\n  this.pos['Place'] = true;\n}\n};\nPlace.fn = Place.prototype;\nmodule.exports = Place;\n\n},{\"../noun.js\":48}],57:[function(require,module,exports){\n'use strict';\nconst is_uncountable = require('./is_uncountable.js');\nconst irregulars = require('../../data/irregular_nouns.js');\nconst is_plural = require('./is_plural.js');\nconst fns = require('../../fns.js');\n\nconst pluralize_rules = [\n  [/(ax|test)is$/i, '$1es'],\n  [/(octop|vir|radi|nucle|fung|cact|stimul)us$/i, '$1i'],\n  [/(octop|vir)i$/i, '$1i'],\n  [/([rl])f$/i, '$1ves'],\n  [/(alias|status)$/i, '$1es'],\n  [/(bu)s$/i, '$1ses'],\n  [/(al|ad|at|er|et|ed|ad)o$/i, '$1oes'],\n  [/([ti])um$/i, '$1a'],\n  [/([ti])a$/i, '$1a'],\n  [/sis$/i, 'ses'],\n  [/(?:([^f])fe|([lr])f)$/i, '$1ves'],\n  [/(hive)$/i, '$1s'],\n  [/([^aeiouy]|qu)y$/i, '$1ies'],\n  [/(x|ch|ss|sh|s|z)$/i, '$1es'],\n  [/(matr|vert|ind|cort)(ix|ex)$/i, '$1ices'],\n  [/([m|l])ouse$/i, '$1ice'],\n  [/([m|l])ice$/i, '$1ice'],\n  [/^(ox)$/i, '$1en'],\n  [/^(oxen)$/i, '$1'],\n  [/(quiz)$/i, '$1zes'],\n  [/(antenn|formul|nebul|vertebr|vit)a$/i, '$1ae'],\n  [/(sis)$/i, 'ses'],\n  [/^(?!talis|.*hu)(.*)man$/i, '$1men'],\n  [/(.*)/i, '$1s']\n].map(function(a) {\n  return {\n    reg: a[0],\n    repl: a[1]\n  };\n});\n\n\nconst pluralize = function(str) {\n  const low = str.toLowerCase();\n  //uncountable\n  if (is_uncountable(low)) { //uncountables shouldn't ever inflect\n    return str;\n  }\n  //is it already plural?\n  if (is_plural(low) === true) {\n    return str;\n  }\n  //irregular\n  const found = irregulars.filter(function(r) {\n    return r[0] === low;\n  });\n  if (found[0]) {\n    if (fns.titlecase(low) === str) { //handle capitalisation properly\n      return fns.titlecase(found[0][1]);\n    }\n    return found[0][1];\n\n  }\n  //inflect first word of preposition-phrase\n  if (str.match(/([a-z]*) (of|in|by|for) [a-z]/)) {\n    const first = (str.match(/^([a-z]*) (of|in|by|for) [a-z]/) || [])[1];\n    if (first) {\n      const better_first = pluralize(first);\n      return better_first + str.replace(first, '');\n    }\n  }\n  //regular\n  for (let i = 0; i < pluralize_rules.length; i++) {\n    if (str.match(pluralize_rules[i].reg)) {\n      return str.replace(pluralize_rules[i].reg, pluralize_rules[i].repl);\n    }\n  }\n};\n// console.log(pluralize('gas') === \"gases\")\n// console.log(pluralize('narrative') === \"narratives\")\n// console.log(pluralize('video') === \"videos\")\n// console.log(pluralize('photo') === \"photos\")\n// console.log(pluralize('stomach') === \"stomachs\")\n// console.log(pluralize('database') === \"databases\")\n// console.log(pluralize('kiss') === \"kisses\")\n// console.log(pluralize('towns') === \"towns\")\n// console.log(pluralize('peace') === \"peace\")\n// console.log(pluralize('mayor of chicago') === \"mayors of chicago\")\nmodule.exports = pluralize;\n\n},{\"../../data/irregular_nouns.js\":8,\"../../fns.js\":18,\"./is_plural.js\":46,\"./is_uncountable.js\":47}],58:[function(require,module,exports){\n'use strict';\nconst is_person = require('./person/is_person.js');\nconst is_plural = require('./is_plural.js');\nconst gender = require('./person/gender.js');\n\nconst pronoun = function(str) {\n  if (is_person(str)) {\n    let g = gender(str);\n    if (g === 'Male') {\n      return 'he';\n    } else if (g === 'Female') {\n      return 'she';\n    }\n    return 'they'; //singular they\n  }\n  //non-person, like 'microwaves'\n  if (is_plural(str)) {\n    return 'they';\n  }\n  return 'it';\n};\n\nmodule.exports = pronoun;\n\n// console.log(pronoun('Illi Danza'));\n\n},{\"./is_plural.js\":46,\"./person/gender.js\":51,\"./person/is_person.js\":52}],59:[function(require,module,exports){\n'use strict';\nconst is_uncountable = require('./is_uncountable.js');\nconst irregulars = require('../../data/irregular_nouns.js');\nconst is_plural = require('./is_plural.js');\nconst fns = require('../../fns.js');\n\nconst singularize_rules = [\n  [/([^v])ies$/i, '$1y'],\n  [/ises$/i, 'isis'],\n  [/ives$/i, 'ife'],\n  [/(antenn|formul|nebul|vertebr|vit)ae$/i, '$1a'],\n  [/(octop|vir|radi|nucle|fung|cact|stimul)(i)$/i, '$1us'],\n  [/(buffal|tomat|tornad)(oes)$/i, '$1o'],\n  [/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i, '$1sis'],\n  [/(vert|ind|cort)(ices)$/i, '$1ex'],\n  [/(matr|append)(ices)$/i, '$1ix'],\n  [/(x|ch|ss|sh|s|z|o)es$/i, '$1'],\n  [/men$/i, 'man'],\n  [/(n)ews$/i, '$1ews'],\n  [/([ti])a$/i, '$1um'],\n  [/([^f])ves$/i, '$1fe'],\n  [/([lr])ves$/i, '$1f'],\n  [/([^aeiouy]|qu)ies$/i, '$1y'],\n  [/(s)eries$/i, '$1eries'],\n  [/(m)ovies$/i, '$1ovie'],\n  [/([m|l])ice$/i, '$1ouse'],\n  [/(cris|ax|test)es$/i, '$1is'],\n  [/(alias|status)es$/i, '$1'],\n  [/(ss)$/i, '$1'],\n  [/(ics)$/i, '$1'],\n  [/s$/i, '']\n].map(function(a) {\n  return {\n    reg: a[0],\n    repl: a[1]\n  };\n});\n\nconst singularize = function(str) {\n  const low = str.toLowerCase();\n  //uncountable\n  if (is_uncountable(low)) {\n    return str;\n  }\n  //is it already singular?\n  if (is_plural(low) === false) {\n    return str;\n  }\n  //irregular\n  const found = irregulars.filter(function(r) {\n    return r[1] === low;\n  });\n  if (found[0]) {\n    if (fns.titlecase(low) === str) { //handle capitalisation properly\n      return fns.titlecase(found[0][0]);\n    }\n    return found[0][0];\n  }\n  //inflect first word of preposition-phrase\n  if (str.match(/([a-z]*) (of|in|by|for) [a-z]/)) {\n    const first = str.match(/^([a-z]*) (of|in|by|for) [a-z]/);\n    if (first && first[1]) {\n      const better_first = singularize(first[1]);\n      return better_first + str.replace(first[1], '');\n    }\n  }\n  //regular\n  for (let i = 0; i < singularize_rules.length; i++) {\n    if (str.match(singularize_rules[i].reg)) {\n      return str.replace(singularize_rules[i].reg, singularize_rules[i].repl);\n    }\n  }\n  return str;\n};\n\n// console.log(singularize('gases') === \"gas\")\n// console.log(singularize('kisses') === \"kiss\")\n// console.log(singularize('kiss') === \"kiss\")\n// console.log(singularize('children') === \"child\")\n// console.log(singularize('peace') === \"peace\")\n// console.log(singularize('child') === \"child\")\n// console.log(singularize('mayors of chicago') === \"mayor of chicago\")\n\nmodule.exports = singularize;\n\n},{\"../../data/irregular_nouns.js\":8,\"../../fns.js\":18,\"./is_plural.js\":46,\"./is_uncountable.js\":47}],60:[function(require,module,exports){\n'use strict';\n\nconst nums = require('./numbers');\nconst is_date = require('../date/is_date');\n\nconst is_value = function(str) {\n  let words = str.split(' ');\n  //'january 5' is not a value\n  if (is_date(str)) {\n    return false;\n  }\n  for(let i = 0; i < words.length; i++) {\n    let w = words[i];\n    if (nums.ones[w] || nums.teens[w] || nums.tens[w] || nums.multiples[w] || nums.prefixes[w]) {\n      return true;\n    }\n    if (parseFloat(w)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nmodule.exports = is_value;\n\n},{\"../date/is_date\":44,\"./numbers\":61}],61:[function(require,module,exports){\nconst ones = {\n  'a': 1,\n  'zero': 0,\n  'one': 1,\n  'two': 2,\n  'three': 3,\n  'four': 4,\n  'five': 5,\n  'six': 6,\n  'seven': 7,\n  'eight': 8,\n  'nine': 9,\n  'first': 1,\n  'second': 2,\n  'third': 3,\n  'fourth': 4,\n  'fifth': 5,\n  'sixth': 6,\n  'seventh': 7,\n  'eighth': 8,\n  'ninth': 9\n};\nconst teens = {\n  'ten': 10,\n  'eleven': 11,\n  'twelve': 12,\n  'thirteen': 13,\n  'fourteen': 14,\n  'fifteen': 15,\n  'sixteen': 16,\n  'seventeen': 17,\n  'eighteen': 18,\n  'nineteen': 19,\n  'eleventh': 11,\n  'twelfth': 12,\n  'thirteenth': 13,\n  'fourteenth': 14,\n  'fifteenth': 15,\n  'sixteenth': 16,\n  'seventeenth': 17,\n  'eighteenth': 18,\n  'nineteenth': 19\n};\nconst tens = {\n  'twenty': 20,\n  'thirty': 30,\n  'forty': 40,\n  'fifty': 50,\n  'sixty': 60,\n  'seventy': 70,\n  'eighty': 80,\n  'ninety': 90,\n  'twentieth': 20,\n  'thirtieth': 30,\n  'fourtieth': 40,\n  'fiftieth': 50,\n  'sixtieth': 60,\n  'seventieth': 70,\n  'eightieth': 80,\n  'ninetieth': 90\n};\nconst multiples = {\n  'hundred': 100,\n  'grand': 1000,\n  'thousand': 1000,\n  'million': 1000000,\n  'billion': 1000000000,\n  'trillion': 1000000000000,\n  'quadrillion': 1000000000000000,\n  'quintillion': 1000000000000000000,\n  'sextillion': 1000000000000000000000,\n  'septillion': 1000000000000000000000000,\n  'octillion': 1000000000000000000000000000,\n  'nonillion': 1000000000000000000000000000000,\n  'decillion': 1000000000000000000000000000000000\n};\n\n//used for the units\nconst prefixes = {\n  'yotta': 1,\n  'zeta': 1,\n  'peta': 1,\n  'tera': 1,\n  'giga': 1,\n  'mega': 1,\n  'kilo': 1,\n  'hecto': 1,\n  'deca': 1,\n  'centi': 1,\n  'centa': 1,\n  'milli': 1,\n  'micro': 1,\n  'nano': 1,\n  'pico': 1,\n  'femto': 1,\n  'atto': 1,\n  'zepto': 1,\n  'yokto': 1,\n\n  'square': 1,\n  'cubic': 1,\n  'quartic': 1,\n};\n\nmodule.exports = {\n  ones: ones,\n  teens: teens,\n  tens: tens,\n  multiples: multiples,\n  prefixes: prefixes,\n};\n\n},{}],62:[function(require,module,exports){\n// converts spoken numbers into integers  \"fifty seven point eight\" -> 57.8\n//\n// Spoken numbers take the following format\n// [sixty five] (thousand) [sixty five] (hundred) [sixty five]\n// aka: [one/teen/ten] (multiple) [one/teen/ten] (multiple) ...\n// combile the [one/teen/ten]s as 'current_sum', then multiply it by its following multiple\n// multiple not repeat\n\n'use strict';\nconst nums = require('./numbers.js');\n//these sets of numbers each have different rules\n//[tenth, hundreth, thousandth..] are ambiguous because they could be ordinal like fifth, or decimal like one-one-hundredth, so are ignored\n// let decimal_multiple={'tenth':0.1, 'hundredth':0.01, 'thousandth':0.001, 'millionth':0.000001,'billionth':0.000000001};\n\n\n//test for nearly-values, like phonenumbers, or whatever\nconst is_number = function(s) {\n  //phone numbers, etc\n  if (s.match(/[:@]/)) {\n    return false;\n  }\n  //if there's a number, then something, then a number\n  if (s.match(/[0-9][^0-9,\\.][0-9]/)) {\n    return false;\n  }\n  return true;\n};\n\n//try the best to turn this into a integer/float\nconst to_number = function(s) {\n  if (s === null || s === undefined) {\n    return null;\n  }\n  //if it's already a number,\n  if (typeof s === 'number') {\n    return s;\n  }\n  //remove symbols, commas, etc\n  if (is_number(s) !== true) {\n    return null;\n  }\n  s = s.replace(/[\\$%\\(\\)~,]/g, '');\n  s = s.trim();\n  //if it's a number-as-string\n  if (s.match(/^[0-9\\.\\-]+$/)) {\n    return parseFloat(s);\n  }\n  //remember these concerns for possible errors\n  let ones_done = false;\n  let teens_done = false;\n  let tens_done = false;\n  const multiple_done = {};\n  let total = 0;\n  let global_multiplier = 1;\n  //pretty-printed numbers\n  s = s.replace(/, ?/g, '');\n  //parse-out currency\n  s = s.replace(/[$£€]/, '');\n  //try to die fast. (phone numbers or times)\n  if (s.match(/[0-9][\\-:][0-9]/)) {\n    return null;\n  }\n  //support global multipliers, like 'half-million' by doing 'million' then multiplying by 0.5\n  const mults = [{\n    reg: /^(minus|negative)[\\s\\-]/i,\n    mult: -1\n  }, {\n    reg: /^(a\\s)?half[\\s\\-](of\\s)?/i,\n    mult: 0.5\n  }, {\n    reg: /^(a\\s)?quarter[\\s\\-]/i,\n    mult: 0.25\n  }];\n  for (let i = 0; i < mults.length; i++) {\n    if (s.match(mults[i].reg)) {\n      global_multiplier = mults[i].mult;\n      s = s.replace(mults[i].reg, '');\n      break;\n    }\n  }\n\n  //do each word in turn..\n  const words = s.toString().split(/[\\s\\-]+/);\n  let w, x;\n  let current_sum = 0;\n  let local_multiplier = 1;\n  let decimal_mode = false;\n  for (let i = 0; i < words.length; i++) {\n    w = words[i];\n\n    //skip 'and' eg. five hundred and twelve\n    if (w === 'and') {\n      continue;\n    }\n\n    //..we're doing decimals now\n    if (w === 'point' || w === 'decimal') {\n      if (decimal_mode) {\n        return null;\n      } //two point one point six\n      decimal_mode = true;\n      total += current_sum;\n      current_sum = 0;\n      ones_done = false;\n      local_multiplier = 0.1;\n      continue;\n    }\n\n    //handle special rules following a decimal\n    if (decimal_mode) {\n      x = null;\n      //allow consecutive ones in decimals eg. 'two point zero five nine'\n      if (nums.ones[w] !== undefined) {\n        x = nums.ones[w];\n      }\n      if (nums.teens[w] !== undefined) {\n        x = nums.teens[w];\n      }\n      if (parseInt(w, 10) === w) {\n        x = parseInt(w, 10);\n      }\n      if (!x) {\n        return null;\n      }\n      if (x < 10) {\n        total += x * local_multiplier;\n        local_multiplier = local_multiplier * 0.1; // next number is next decimal place\n        current_sum = 0;\n        continue;\n      }\n      //two-digit decimals eg. 'two point sixteen'\n      if (x < 100) {\n        total += x * (local_multiplier * 0.1);\n        local_multiplier = local_multiplier * 0.01; // next number is next decimal place\n        current_sum = 0;\n        continue;\n      }\n    }\n\n    //if it's already an actual number\n    if (w.match(/^[0-9\\.]+$/)) {\n      current_sum += parseFloat(w);\n      continue;\n    }\n    if (parseInt(w, 10) === w) {\n      current_sum += parseInt(w, 10);\n      continue;\n    }\n    //ones rules\n    if (nums.ones[w] !== undefined) {\n      if (ones_done) {\n        return null;\n      } // eg. five seven\n      if (teens_done) {\n        return null;\n      } // eg. five seventeen\n      ones_done = true;\n      current_sum += nums.ones[w];\n      continue;\n    }\n    //teens rules\n    if (nums.teens[w]) {\n      if (ones_done) {\n        return null;\n      } // eg. five seventeen\n      if (teens_done) {\n        return null;\n      } // eg. fifteen seventeen\n      if (tens_done) {\n        return null;\n      } // eg. sixty fifteen\n      teens_done = true;\n      current_sum += nums.teens[w];\n      continue;\n    }\n    //tens rules\n    if (nums.tens[w]) {\n      if (ones_done) {\n        return null;\n      } // eg. five seventy\n      if (teens_done) {\n        return null;\n      } // eg. fiveteen seventy\n      if (tens_done) {\n        return null;\n      } // eg. twenty seventy\n      tens_done = true;\n      current_sum += nums.tens[w];\n      continue;\n    }\n    //multiple rules\n    if (nums.multiples[w]) {\n      if (multiple_done[w]) {\n        return null;\n      } // eg. five hundred six hundred\n      multiple_done[w] = true;\n      //reset our concerns. allow 'five hundred five'\n      ones_done = false;\n      teens_done = false;\n      tens_done = false;\n      //case of 'hundred million', (2 consecutive multipliers)\n      if (current_sum === 0) {\n        total = total || 1; //dont ever multiply by 0\n        total *= nums.multiples[w];\n      } else {\n        current_sum *= nums.multiples[w];\n        total += current_sum;\n      }\n      current_sum = 0;\n      continue;\n    }\n    //if word is not a known thing now, die\n    return null;\n  }\n  if (current_sum) {\n    total += (current_sum || 1) * local_multiplier;\n  }\n  //combine with global multiplier, like 'minus' or 'half'\n  total = total * global_multiplier;\n\n  return total;\n};\n\n// console.log(to_number('minus five hundred'));\n// console.log(to_number(\"a hundred\"))\n// console.log(to_number('four point six'));\n\n//kick it into module\nmodule.exports = to_number;\n\n},{\"./numbers.js\":61}],63:[function(require,module,exports){\nconst units = {\n  'Temperature': {\n    '°C': 'Celsius',\n    '°F': 'Fahrenheit',\n    'K': 'Kelvin',\n    '°Ré': 'Reaumur',\n    '°N': 'Newton',\n    '°Ra': 'Rankine',\n  },\n  'Volume': {\n    'm³': 'cubic meter',\n    'dm³': 'cubic decimeter',\n    'cm³': 'cubic centimeter',\n    'l': 'liter',\n    'dl': 'deciliter',\n    'cl': 'centiliter',\n    'ml': 'milliliter',\n    'in³': 'cubic inch',\n    'ft³': 'cubic foot',\n    'yd³': 'cubic yard',\n    'gal': 'gallon',\n    'bbl': 'petroleum barrel',\n    'pt': 'pint',\n  },\n  'Distance': {\n    'km': 'kilometer',\n    'm': 'meter',\n    'dm': 'decimeter',\n    'cm': 'centimeter',\n    'mm': 'millimeter',\n    'mi': 'mile',\n    'in': 'inch',\n    'ft': 'foot',\n    'feet': 'foot',\n    'yd': 'yard',\n  },\n  'Weight': {\n    't': 'tonne',\n    'kg': 'kilogram',\n    'hg': 'hectogram',\n    'g': 'gram',\n    'dg': 'decigram',\n    'cg': 'centigram',\n    'mg': 'milligram',\n    'µg': 'microgram',\n    'carat': 'carat',\n    'grain': 'grain',\n    'oz': 'ounce',\n    'lb': 'pound',\n    'ton': 'tonne',\n    'st': 'stone',\n  },\n  'Area': {\n    'km²': 'square kilometer',\n    'm²': 'square meter',\n    'dm²': 'square decimeter',\n    'cm²': 'square centimeter',\n    'mm²': 'square millimeter',\n    'ha': 'hectare',\n    'ca': 'centiare',\n    'mile²': 'square mile',\n    'in²': 'square inch',\n    'yd²': 'square yard',\n    'ft²': 'square foot',\n    'acre': 'acre',\n  },\n  'Frequency': {\n    'Hz': 'hertz'\n  },\n  'Speed': {\n    'km/h': 'kilometer per hour',\n    'kmph': 'kilometer per hour',\n    'mps': 'meter per second',\n    'm/s': 'meter per second',\n    'mph': 'mile per hour',\n    'mi/h': 'mile per hour',\n    'knot': 'knot',\n  },\n  'Data': {\n    'b': 'bit',\n    'B': 'byte',\n    'KB': 'kilobyte',\n    'Kb': 'kilobyte',\n    'MB': 'megabyte',\n    'Mb': 'megabyte',\n    'GB': 'gigabyte',\n    'Gb': 'gigabyte',\n    'TB': 'terabyte',\n    'Tb': 'terabyte',\n    'PB': 'petabyte',\n    'Pb': 'petabyte',\n    'EB': 'exabyte',\n    'Eb': 'exabyte',\n    'ZB': 'zettabyte',\n    'Zb': 'zettabyte',\n    'YB': 'yottabyte',\n    'Yb': 'yottabyte',\n  },\n  'Energy': {\n    'J': 'joule',\n    'Pa': 'pascal',\n    'bar': 'bar',\n    'W': 'watt',\n    'N': 'newton',\n    'Wb': 'weber',\n    'T': 'tesla',\n    'H': 'henry',\n    'C': 'coulomb',\n    'V': 'volt',\n    'F': 'farad',\n    'S': 'siemens',\n    'O': 'ohm',\n    'lx': 'lux',\n    'lm': 'lumen'\n  },\n  'Time': {\n    'year': 'year',\n    'week': 'week',\n    'day': 'day',\n    'h': 'hour',\n    'min': 'minute',\n    's': 'second',\n    'ms': 'millisecond',\n    'µs': 'microsecond',\n    'nanosecond': 'nanosecond',\n    'picosecond': 'picosecond',\n    'femtosecond': 'femtosecond',\n    'attosecond': 'attosecond'\n  },\n  'Money': {\n    'dollar': 'currency',\n    'cent': 'currency',\n    'penny': 'currency',\n    'dime': 'currency',\n    'dinar': 'currency',\n    'euro': 'currency',\n    'EU': 'currency',\n    'lira': 'currency',\n    'pound': 'currency',\n    'GBP': 'currency',\n    'pence': 'currency',\n    'peso': 'currency',\n    'sterling': 'currency',\n    'rand': 'currency',\n    'rouble': 'currency',\n    'shekel': 'currency',\n    'yen': 'currency',\n    'yuan': 'currency',\n    'franc': 'currency',\n    'rupee': 'currency',\n    'shilling': 'currency',\n    'won': 'currency',\n    'krona': 'currency',\n    'dirham': 'currency',\n    '€': 'currency',\n    '$': 'currency',\n    '¥': 'currency',\n    '£': 'currency',\n    'real': 'currency',\n    'USD': 'currency',\n    'AUD': 'currency',\n    'CAD': 'currency',\n    'BRL': 'currency',\n    'EUR': 'currency',\n    'CNY': 'currency',\n    'EGP': 'currency',\n    'MXN': 'currency'\n  }\n};\n\nmodule.exports = Object.keys(units).reduce(function(h, k) {\n  Object.keys(units[k]).forEach(function(u) {\n    h[u] = {\n      name: units[k][u],\n      category: k\n    };\n    h[units[k][u]] = {\n      name: units[k][u],\n      category: k\n    };\n  });\n  return h;\n}, {});\n\n},{}],64:[function(require,module,exports){\n'use strict';\nconst Noun = require('../noun.js');\nconst to_number = require('./to_number.js');\nconst units = require('./units.js');\nconst nums = require('./numbers.js');\n\nclass Value extends Noun {\n  constructor(str, tag) {\n    super(str);\n    this.tag = tag;\n    this.pos['Value'] = true;\n    this.number = null;\n    this.unit = null;\n    this.unit_name = null;\n    this.measurement = null;\n    this.parse();\n  }\n\n  is_unit(s) {\n    if (units[s]) {\n      return true;\n    }\n    s = s.toLowerCase();\n    if (nums.prefixes[s]) {\n      return true;\n    }\n    //try singular version\n    s = s.replace(/s$/); //ew\n    if (units[s]) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parse() {\n    let words = this.text.toLowerCase().split(' ');\n    let number_words = {\n      minus: true,\n      point: true\n    };\n    let numbers = '';\n    for(let i = 0; i < words.length; i++) {\n      let w = words[i];\n      if (nums.ones[w] || nums.teens[w] || nums.tens[w] || nums.multiples[w] || number_words[w] || w.match(/[0-9]/)) {\n        numbers += ' ' + w;\n      } else if (this.is_unit(w)) { //optional units come after the number\n        this.unit = w;\n        if (units[w]) {\n          this.measurement = units[w].category;\n          this.unit_name = units[w].name;\n        }\n      }\n    }\n    this.number = to_number(numbers);\n  }\n\n}\nValue.fn = Value.prototype;\n\nmodule.exports = Value;\n\n},{\"../noun.js\":48,\"./numbers.js\":61,\"./to_number.js\":62,\"./units.js\":63}],65:[function(require,module,exports){\n//chop a string into pronounced syllables\n'use strict';\n\n//suffix fixes\nfunction postprocess(arr) {\n  //trim whitespace\n  arr = arr.map(function(w) {\n    return w.trim();\n  });\n  arr = arr.filter(function(w) {\n    return w !== '';\n  });\n  // if (arr.length > 2) {\n  //   return arr;\n  // }\n  const ones = [\n    /^[^aeiou]?ion/,\n    /^[^aeiou]?ised/,\n    /^[^aeiou]?iled/\n  ];\n  const l = arr.length;\n  if (l > 1) {\n    const suffix = arr[l - 2] + arr[l - 1];\n    for (let i = 0; i < ones.length; i++) {\n      if (suffix.match(ones[i])) {\n        arr[l - 2] = arr[l - 2] + arr[l - 1];\n        arr.pop();\n      }\n    }\n  }\n  return arr;\n}\n\nconst syllables = function(str) {\n  let all = [];\n\n  //method is nested because it's called recursively\n  const doer = function(w) {\n    const vow = /[aeiouy]$/;\n    const chars = w.split('');\n    let before = '';\n    let after = '';\n    let current = '';\n    for (let i = 0; i < chars.length; i++) {\n      before = chars.slice(0, i).join('');\n      current = chars[i];\n      after = chars.slice(i + 1, chars.length).join('');\n      let candidate = before + chars[i];\n\n      //it's a consonant that comes after a vowel\n      if (before.match(vow) && !current.match(vow)) {\n        if (after.match(/^e[sm]/)) {\n          candidate += 'e';\n          after = after.replace(/^e/, '');\n        }\n        all.push(candidate);\n        return doer(after);\n      }\n      //unblended vowels ('noisy' vowel combinations)\n      if (candidate.match(/(eo|eu|ia|oa|ua|ui)$/i)) { //'io' is noisy, not in 'ion'\n        all.push(before);\n        all.push(current);\n        return doer(after); //recursion\n      }\n    }\n    //if still running, end last syllable\n    if (str.match(/[aiouy]/) || str.match(/ee$/)) { //allow silent trailing e\n      all.push(w);\n    } else {\n      all[all.length - 1] = (all[all.length - 1] || '') + str; //append it to the last one\n    }\n  };\n\n  str.split(/\\s\\-/).forEach(function(s) {\n    doer(s);\n  });\n  all = postprocess(all);\n\n  //for words like 'tree' and 'free'\n  if (all.length === 0) {\n    all = [str];\n  }\n  //filter blanks\n  all = all.filter(function(s) {\n    return s !== '' && s !== null && s !== undefined;\n  });\n\n  return all;\n};\n\n// console.log(syllables('civilised'));\n\nmodule.exports = syllables;\n\n},{}],66:[function(require,module,exports){\n'use strict';\nconst syllables = require('./syllables');\nconst is_acronym = require('./is_acronym');\nconst americanize = require('./localization/to_american');\nconst britishize = require('./localization/to_british');\n\nclass Term {\n  constructor(str, tag) {\n    //fail-safe\n    if (str === null || str === undefined) {\n      str = '';\n    }\n    str = (str).toString();\n    //set .text\n    this.text = str;\n    //the normalised working-version of the word\n    this.normal = '';\n    //if it's a contraction, the 'hidden word'\n    this.implicit = '';\n    //set .normal\n    this.rebuild();\n    //the reasoning behind it's part-of-speech\n    this.reason = '';\n    //these are orphaned POS that have no methods\n    let types = {\n      Determiner: 'Determiner',\n      Conjunction: 'Conjunction',\n      Preposition: 'Preposition',\n      Posessive: 'Posessive',\n    };\n    this.pos = {};\n    this.tag = types[tag] || '?';\n    //record them in pos{}\n    if (types[tag]) {\n      this.pos[types[tag]] = true;\n    }\n  }\n\n  //when the text changes, rebuild derivative fields\n  rebuild() {\n    this.text = this.text || '';\n    this.text = this.text.trim();\n    this.normal = '';\n    this.normalize();\n  }\n  changeTo(str) {\n    this.text = str;\n    this.rebuild();\n  }\n\n  //Term methods..\n  is_capital() {\n    if (this.text.match(/[A-Z][a-z]/)) { //tranditional capital\n      return true;\n    }\n    return false;\n  }\n  //FBI or F.B.I.\n  is_acronym() {\n    return is_acronym(this.text);\n  }\n  //working word\n  normalize() {\n    let str = this.text || '';\n    str = str.toLowerCase();\n    str = str.replace(/[,\\.!:;\\?\\(\\)]/, '');\n    str = str.replace(/’/g, '\\'');\n    str = str.replace(/\"/g, '');\n    // coerce single curly quotes\n    str = str.replace(/[\\u2018\\u2019\\u201A\\u201B\\u2032\\u2035]+/g, '\\'');\n    // coerce double curly quotes\n    str = str.replace(/[\\u201C\\u201D\\u201E\\u201F\\u2033\\u2036]+/g, '\"');\n    if (!str.match(/[a-z0-9]/i)) {\n      return '';\n    }\n    this.normal = str;\n    return this.normal;\n  }\n  //localization for us/uk\n  americanize() {\n    return americanize(this.normal);\n  }\n  britishize() {\n    return britishize(this.normal);\n  }\n  //naiive regex-based syllable splitting\n  syllables() {\n    return syllables(this.normal);\n  }\n}\n\nTerm.fn = Term.prototype;\n// let t = new Term('NSA');\n// console.log(t.britishize());\n\nmodule.exports = Term;\n\n},{\"./is_acronym\":37,\"./localization/to_american\":39,\"./localization/to_british\":40,\"./syllables\":65}],67:[function(require,module,exports){\n//turn a verb into its other grammatical forms.\n'use strict';\nconst verb_to_actor = require('./to_actor');\nconst to_infinitive = require('./to_infinitive');\nconst from_infinitive = require('./from_infinitive');\nconst irregular_verbs = require('../../../data/irregular_verbs');\nconst predict = require('./predict_form.js');\n\n\n//make sure object has all forms\nconst fufill = function(obj, prefix) {\n  if (!obj.infinitive) {\n    return obj;\n  }\n  if (!obj.gerund) {\n    if (obj.infinitive.match(/e$/)) {\n      obj.gerund = obj.infinitive.replace(/e$/, 'ing');\n    } else {\n      obj.gerund = obj.infinitive + 'ing';\n    }\n  }\n  if (obj.actor === undefined) {\n    obj.actor = verb_to_actor(obj.infinitive);\n  }\n  if (!obj.present) {\n    obj.present = obj.infinitive + 's';\n  }\n  if (!obj.past) {\n    if (obj.infinitive.match(/e$/)) {\n      obj.past = obj.infinitive + 'd';\n    } else {\n      obj.past = obj.infinitive + 'ed';\n    }\n  }\n  //add the prefix to all forms, if it exists\n  if (prefix) {\n    Object.keys(obj).forEach(function(k) {\n      obj[k] = prefix + obj[k];\n    });\n  }\n  //future is 'will'+infinitive\n  if (!obj.future) {\n    obj.future = 'will ' + obj.infinitive;\n  }\n  //perfect is 'have'+past-tense\n  if (!obj.perfect) {\n    obj.perfect = 'have ' + (obj.participle || obj.past);\n  }\n  //pluperfect is 'had'+past-tense\n  if (!obj.pluperfect) {\n    obj.pluperfect = 'had ' + obj.past;\n  }\n  //future perfect is 'will have'+past-tense\n  if (!obj.future_perfect) {\n    obj.future_perfect = 'will have ' + obj.past;\n  }\n  return obj;\n};\n\nconst conjugate = function(w) {\n  if (w === undefined) {\n    return {};\n  }\n\n  //for phrasal verbs ('look out'), conjugate look, then append 'out'\n  const phrasal_reg = new RegExp('^(.*?) (in|out|on|off|behind|way|with|of|do|away|across|ahead|back|over|under|together|apart|up|upon|aback|down|about|before|after|around|to|forth|round|through|along|onto)$', 'i');\n  if (w.match(' ') && w.match(phrasal_reg)) {\n    const split = w.match(phrasal_reg, '');\n    const phrasal_verb = split[1];\n    const particle = split[2];\n    const result = conjugate(phrasal_verb); //recursive\n    Object.keys(result).forEach(function(k) {\n      if (result[k]) {\n        result[k] += ' ' + particle;\n      }\n    });\n    return result;\n  }\n\n  //for pluperfect ('had tried') remove 'had' and call it past-tense\n  w = w.replace(/^had /i, '');\n  //for perfect ('have tried') remove 'have' and call it past-tense\n  w = w.replace(/^have /i, '');\n  //for future perfect ('will have tried') remove 'will have' and call it past-tense\n  w = w.replace(/^will have /i, '');\n  //chop it if it's future-tense\n  w = w.replace(/^will /i, '');\n\n  //un-prefix the verb, and add it in later\n  let prefix = '';\n  let match = w.match(/^(over|under|re|anti|full)[- ]?([a-z]*)/i);\n  if (match) {\n    prefix = match[1];\n    w = match[2];\n  }\n\n  //guess the tense, so we know which transormation to make\n  const predicted = predict(w) || 'infinitive';\n  //check against suffix rules\n  let infinitive = to_infinitive(w, predicted);\n  //check irregulars\n  let obj = irregular_verbs[w] || irregular_verbs[infinitive] || {};\n  obj.infinitive = infinitive;\n  //apply regex-transformations\n  let conjugations = from_infinitive(infinitive);\n  Object.keys(conjugations).forEach(function(k) {\n    if (!obj[k]) {\n      obj[k] = conjugations[k];\n    }\n  });\n  return fufill(obj, prefix);\n};\nmodule.exports = conjugate;\n\n// console.log(conjugate('convolute'));\n\n\n// console.log(conjugate('overtake'));\n// console.log(conjugate(\"watch out\"))\n// console.log(conjugate(\"watch\"))\n// console.log(conjugate(\"smash\"))\n// console.log(conjugate(\"word\"))\n// // broken\n// console.log(conjugate(\"read\"))\n// console.log(conjugate(\"free\"))\n// console.log(conjugate(\"flesh\"))\n// console.log(conjugate(\"branch\"))\n// console.log(conjugate(\"spred\"))\n// console.log(conjugate(\"bog\"))\n// console.log(conjugate(\"nod\"))\n// console.log(conjugate(\"had tried\"))\n// console.log(conjugate(\"have tried\"))\n\n},{\"../../../data/irregular_verbs\":9,\"./from_infinitive\":68,\"./predict_form.js\":69,\"./to_actor\":71,\"./to_infinitive\":72}],68:[function(require,module,exports){\n'use strict';\n\nlet rules = [\n  {\n    reg: /(eave)$/i,\n    repl: {\n      pr: '$1s',\n      pa: '$1d',\n      gr: 'eaving',\n      ar: '$1r'\n    }\n  },\n  {\n    reg: /(end)$/i,\n    repl: {\n      pr: '$1s',\n      pa: 'ent',\n      gr: '$1ing',\n      ar: '$1er'\n    }\n  },\n  {\n    reg: /(ide)$/i,\n    repl: {\n      pr: '$1s',\n      pa: 'ode',\n      gr: 'iding',\n      ar: 'ider'\n    }\n  },\n  {\n    reg: /(ake)$/i,\n    repl: {\n      pr: '$1s',\n      pa: 'ook',\n      gr: 'aking',\n      ar: '$1r'\n    }\n  },\n  {\n    reg: /(eed)$/i,\n    repl: {\n      pr: '$1s',\n      pa: '$1ed',\n      gr: '$1ing',\n      ar: '$1er'\n    }\n  },\n\n  {\n    reg: /(e)(ep)$/i,\n    repl: {\n      pr: '$1$2s',\n      pa: '$1pt',\n      gr: '$1$2ing',\n      ar: '$1$2er'\n    }\n  }, {\n    reg: /(a[tg]|i[zn]|ur|nc|gl|is)e$/i,\n    repl: {\n      pr: '$1es',\n      pa: '$1ed',\n      gr: '$1ing',\n      prt: '$1en'\n    }\n  }, {\n    reg: /([i|f|rr])y$/i,\n    repl: {\n      pr: '$1ies',\n      pa: '$1ied',\n      gr: '$1ying'\n    }\n  }, {\n    reg: /([td]er)$/i,\n    repl: {\n      pr: '$1s',\n      pa: '$1ed',\n      gr: '$1ing'\n    }\n  }, {\n    reg: /([bd]l)e$/i,\n    repl: {\n      pr: '$1es',\n      pa: '$1ed',\n      gr: '$1ing'\n    }\n  }, {\n    reg: /(ish|tch|ess)$/i,\n    repl: {\n      pr: '$1es',\n      pa: '$1ed',\n      gr: '$1ing'\n    }\n  }, {\n    reg: /(ion|end|e[nc]t)$/i,\n    repl: {\n      pr: '$1s',\n      pa: '$1ed',\n      gr: '$1ing'\n    }\n  }, {\n    reg: /(om)e$/i,\n    repl: {\n      pr: '$1es',\n      pa: 'ame',\n      gr: '$1ing'\n    }\n  }, {\n    reg: /([aeiu])([pt])$/i,\n    repl: {\n      pr: '$1$2s',\n      pa: '$1$2',\n      gr: '$1$2$2ing'\n    }\n  }, {\n    reg: /(er)$/i,\n    repl: {\n      pr: '$1s',\n      pa: '$1ed',\n      gr: '$1ing'\n    }\n  }, {\n    reg: /(en)$/i,\n    repl: {\n      pr: '$1s',\n      pa: '$1ed',\n      gr: '$1ing'\n    },\n  },\n  {\n    reg: /(..)(ow)$/i,\n    repl: {\n      pr: '$1$2s',\n      pa: '$1ew',\n      gr: '$1$2ing',\n      prt: '$1$2n'\n    }\n  }\n];\n\nlet keys = {\n  pr: 'present',\n  pa: 'past',\n  gr: 'gerund',\n  prt: 'participle',\n  ar: 'actor',\n};\n\nconst from_infinitive = function(str) {\n  let obj = {\n    infinitive: str\n  };\n  if (!str) {\n    return obj;\n  }\n  for(let i = 0; i < rules.length; i++) {\n    if (str.match(rules[i].reg)) {\n      Object.keys(rules[i].repl).forEach(function(k) {\n        obj[keys[k]] = str.replace(rules[i].reg, rules[i].repl[k]);\n      });\n      return obj;\n    }\n  }\n  return obj;\n};\n// console.log(from_infinitive('arise'));\n\nmodule.exports = from_infinitive;\n\n},{}],69:[function(require,module,exports){\n'use strict';\n//this method is used to predict which current conjugation a verb is\n\n//this method is the slowest in the whole library,\nconst fns = require('../../../fns.js');\nconst suffix_rules = require('./suffix_rules');\nconst irregular_verbs = require('../../../data/irregular_verbs');\nlet known_verbs = Object.keys(irregular_verbs).reduce(function(h, k) {\n  Object.keys(irregular_verbs[k]).forEach(function(k2) {\n    h[irregular_verbs[k][k2]] = k2;\n  });\n  return h;\n}, {});\n\nconst predict = function(w) {\n\n  //check if known infinitive\n  if (irregular_verbs[w]) {\n    return 'infinitive';\n  }\n  //check if known infinitive\n  if (known_verbs[w]) {\n    return known_verbs[w];\n  }\n\n  if (w.match(/will ha(ve|d) [a-z]{2}/)) {\n    return 'future_perfect';\n  }\n  if (w.match(/will [a-z]{2}/)) {\n    return 'future';\n  }\n  if (w.match(/had [a-z]{2}/)) {\n    return 'pluperfect';\n  }\n  if (w.match(/have [a-z]{2}/)) {\n    return 'perfect';\n  }\n  if (w.match(/..erer$/)) {\n    return 'actor';\n  }\n  if (w.match(/[^aeiou]ing$/)) {\n    return 'gerund';\n  }\n\n  const arr = Object.keys(suffix_rules);\n  for (let i = 0; i < arr.length; i++) {\n    if (fns.endsWith(w, arr[i]) && arr[i].length < w.length) {\n      return suffix_rules[arr[i]];\n    }\n  }\n  return 'infinitive';\n};\n\nmodule.exports = predict;\n\n},{\"../../../data/irregular_verbs\":9,\"../../../fns.js\":18,\"./suffix_rules\":70}],70:[function(require,module,exports){\n'use strict';\n//suffix signals for verb tense, generated from test data\nconst compact = {\n  'gerund': [],\n  'infinitive': [\n    'ate',\n    'ize',\n    'tion',\n    'rify',\n    'then',\n    'ress',\n    'ify',\n    'age',\n    'nce',\n    'ect',\n    'ise',\n    'ine',\n    'ish',\n    'ace',\n    'ash',\n    'ure',\n    'tch',\n    'end',\n    'ack',\n    'and',\n    'ute',\n    'ade',\n    'ock',\n    'ite',\n    'ase',\n    'ose',\n    'use',\n    'ive',\n    'int',\n    'nge',\n    'lay',\n    'est',\n    'ain',\n    'ant',\n    'eed',\n    'er',\n    'le'\n  ],\n  'participle': [\n    'own',\n    'unk',\n    'ung',\n    'en'\n  ],\n  'past': [\n    'ed',\n    'lt',\n    'nt',\n    'pt',\n    'ew',\n    'ld'\n  ],\n  'present': [\n    'rks',\n    'cks',\n    'nks',\n    'ngs',\n    'mps',\n    'tes',\n    'zes',\n    'ers',\n    'les',\n    'acks',\n    'ends',\n    'ands',\n    'ocks',\n    'lays',\n    'eads',\n    'lls',\n    'els',\n    'ils',\n    'ows',\n    'nds',\n    'ays',\n    'ams',\n    'ars',\n    'ops',\n    'ffs',\n    'als',\n    'urs',\n    'lds',\n    'ews',\n    'ips',\n    'es',\n    'ts',\n    'ns',\n    's'\n  ]\n};\nconst suffix_rules = {};\nconst keys = Object.keys(compact);\nconst l = keys.length;\n\nfor (let i = 0; i < l; i++) {\n  let l2 = compact[keys[i]].length;\n  for (let o = 0; o < l2; o++) {\n    suffix_rules[compact[keys[i]][o]] = keys[i];\n  }\n}\nmodule.exports = suffix_rules;\n\n},{}],71:[function(require,module,exports){\n//somone who does this present-tense verb\n//turn 'walk' into 'walker'\n'use strict';\nconst actor = function(str) {\n  str = str || '';\n  const irregulars = {\n    'tie': 'tier',\n    'dream': 'dreamer',\n    'sail': 'sailer',\n    'run': 'runner',\n    'rub': 'rubber',\n    'begin': 'beginner',\n    'win': 'winner',\n    'claim': 'claimant',\n    'deal': 'dealer',\n    'spin': 'spinner'\n  };\n  const dont = {\n    'aid': 1,\n    'fail': 1,\n    'appear': 1,\n    'happen': 1,\n    'seem': 1,\n    'try': 1,\n    'say': 1,\n    'marry': 1,\n    'be': 1,\n    'forbid': 1,\n    'understand': 1,\n    'bet': 1\n  };\n  const transforms = [{\n    'reg': /e$/i,\n    'repl': 'er'\n  }, {\n    'reg': /([aeiou])([mlgp])$/i,\n    'repl': '$1$2$2er'\n  }, {\n    'reg': /([rlf])y$/i,\n    'repl': '$1ier'\n  }, {\n    'reg': /^(.?.[aeiou])t$/i,\n    'repl': '$1tter'\n  }];\n\n  if (dont.hasOwnProperty(str)) {\n    return null;\n  }\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str];\n  }\n  for (let i = 0; i < transforms.length; i++) {\n    if (str.match(transforms[i].reg)) {\n      return str.replace(transforms[i].reg, transforms[i].repl);\n    }\n  }\n  return str + 'er';\n};\n\n// console.log(verb_to_actor('set'))\n// console.log(verb_to_actor('sweep'))\n// console.log(verb_to_actor('watch'))\nmodule.exports = actor;\n\n},{}],72:[function(require,module,exports){\n'use strict';\nconst irregular_verbs = require('../../../data/irregular_verbs');\nlet known_verbs = Object.keys(irregular_verbs).reduce(function(h, k) {\n  Object.keys(irregular_verbs[k]).forEach(function(k2) {\n    h[irregular_verbs[k][k2]] = k;\n  });\n  return h;\n}, {});\n\n\nlet rules = {\n  participle: [\n    {\n      reg: /own$/i,\n      to: 'ow'\n    },\n    {\n      reg: /(.)un([g|k])$/i,\n      to: '$1in$2'\n    },\n    {\n      reg: /(..)en$/i,\n      to: '$1e'\n    },\n  ],\n  actor: [\n    {\n      reg: /(er)er$/i,\n      to: '$1'\n    }\n  ],\n  present: [\n    {\n      reg: /(ies)$/i,\n      to: 'y'\n    }, {\n      reg: /(tch|sh)es$/i,\n      to: '$1'\n    }, {\n      reg: /(ss)es$/i,\n      to: '$1'\n    }, {\n      reg: /([tzlshicgrvdnkmu])es$/i,\n      to: '$1e'\n    }, {\n      reg: /(n[dtk]|c[kt]|[eo]n|i[nl]|er|a[ytrl])s$/i,\n      to: '$1'\n    }, {\n      reg: /(ow)s$/i,\n      to: '$1'\n    }, {\n      reg: /(op)s$/i,\n      to: '$1'\n    }, {\n      reg: /([eirs])ts$/i,\n      to: '$1t'\n    }, {\n      reg: /(ll)s$/i,\n      to: '$1'\n    }, {\n      reg: /(el)s$/i,\n      to: '$1'\n    }, {\n      reg: /(ip)es$/i,\n      to: '$1e'\n    }, {\n      reg: /ss$/i,\n      to: 'ss'\n    }, {\n      reg: /s$/i,\n      to: ''\n    }],\n  gerund: [\n    {\n      reg: /pping$/i,\n      to: 'p'\n    }, {\n      reg: /lling$/i,\n      to: 'll'\n    }, {\n      reg: /tting$/i,\n      to: 't'\n    }, {\n      reg: /ssing$/i,\n      to: 'ss'\n    }, {\n      reg: /gging$/i,\n      to: 'g'\n    }, {\n      reg: /([^aeiou])ying$/i,\n      to: '$1y'\n    }, {\n      reg: /(i.)ing$/i,\n      to: '$1e'\n    }, {\n      reg: /(u[rtcb]|[bdtpkg]l|n[cg]|a[gdkvtc]|[ua]s|[dr]g|yz|o[rlsp]|cre)ing$/i,\n      to: '$1e'\n    }, {\n      reg: /(ch|sh)ing$/i,\n      to: '$1'\n    }, {\n      reg: /(..)ing$/i,\n      to: '$1'\n    }],\n  past: [\n    {\n      reg: /(ued)$/i,\n      to: 'ue'\n    }, {\n      reg: /(e|i)lled$/i,\n      to: '$1ll'\n    }, {\n      reg: /(sh|ch)ed$/i,\n      to: '$1'\n    }, {\n      reg: /(tl|gl)ed$/i,\n      to: '$1e'\n    }, {\n      reg: /(ss)ed$/i,\n      to: '$1'\n    }, {\n      reg: /pped$/i,\n      to: 'p'\n    }, {\n      reg: /tted$/i,\n      to: 't'\n    }, {\n      reg: /gged$/i,\n      to: 'g'\n    }, {\n      reg: /(h|ion|n[dt]|ai.|[cs]t|pp|all|ss|tt|int|ail|ld|en|oo.|er|k|pp|w|ou.|rt|ght|rm)ed$/i,\n      to: '$1'\n    }, {\n      reg: /(..[^aeiou])ed$/i,\n      to: '$1e'\n    }, {\n      reg: /ied$/i,\n      to: 'y'\n    }, {\n      reg: /(.o)ed$/i,\n      to: '$1o'\n    }, {\n      reg: /(.i)ed$/i,\n      to: '$1'\n    }, {\n      reg: /([rl])ew$/i,\n      to: '$1ow'\n    }, {\n      reg: /([pl])t$/i,\n      to: '$1t'\n    }]\n};\n\nconst to_infinitive = function (str, from_tense) {\n  if (known_verbs[str]) {\n    return known_verbs[str];\n  }\n  if (from_tense === 'infinitive') {\n    return str;\n  }\n  let regs = rules[from_tense] || [];\n  for(let i = 0; i < regs.length; i++) {\n    if (str.match(regs[i].reg)) {\n      return str.replace(regs[i].reg, regs[i].to);\n    }\n  }\n  return str;\n};\n\n// console.log(to_infinitive('wrecked', 'past'));\n\nmodule.exports = to_infinitive;\n\n},{\"../../../data/irregular_verbs\":9}],73:[function(require,module,exports){\n'use strict';\n//recieves a verb object, and returns a negated string\n//sort out don't/didn't/doesn't/won't\nconst negate = function(v, form) {\n\n  let exceptions = {\n    'is': 'isn\\'t',\n    'are': 'aren\\'t',\n    'was': 'wasn\\'t',\n    'will': 'won\\'t',\n    'had': 'hadn\\'t',\n    //modals\n    'did': 'didn\\'t',\n    'would': 'wouldn\\'t',\n    'could': 'couldn\\'t',\n    'should': 'shouldn\\'t',\n    'can': 'can\\'t',\n    'must': 'mustn\\'t',\n    'have': 'hasn\\'t',\n    'does': 'doesn\\'t',\n    //un-negate?\n    'didn\\'t': 'did',\n    'doesn\\'t': 'does',\n    'wouldn\\'t': 'would',\n    'couldn\\'t': 'could',\n    'shouldn\\'t': 'should',\n    'can\\'t': 'can',\n    'won\\'t': 'will',\n    'mustn\\'t': 'must',\n    'shan\\'t': 'shall',\n    'shant': 'shall',\n    'not': '',\n    'don\\'t': '',\n  };\n  //hard-coded exceptions\n  if (exceptions[v.normal]) {\n    return exceptions[v.normal];\n  }\n\n  //multiple-word verbs, like 'have walked'\n  let words = v.normal.split(' ');\n  if (words.length > 1 && exceptions[words[0]]) {\n    return exceptions[words[0]] + ' ' + words.slice(1, words.length).join(' ');\n  }\n  form = form || v.conjugation();\n  //walked -> didn't walk\n  if (form === 'PastTense') {\n    return 'didn\\'t ' + v.conjugate()['infinitive'];\n  }\n  //walks -> doesn't walk\n  if (form === 'PresentTense') {\n    return 'doesn\\'t ' + v.conjugate()['infinitive'];\n  }\n  //walking -> not walking\n  if (form === 'Gerund') {\n    return 'not ' + v.text;\n  }\n  //walker -> non-walker ?\n  if (form === 'Actor') {\n    return 'non-' + v.text;\n  }\n  //walk -> not walk ?\n  if (form === 'Infinitive') {\n    return 'not ' + v.text;\n  }\n\n  return v.text;\n\n};\n\nmodule.exports = negate;\n\n},{}],74:[function(require,module,exports){\n'use strict';\nconst Term = require('../term.js');\nconst conjugate = require('./conjugate/conjugate.js');\nconst negate = require('./negate.js');\n\nconst verbTags = {\n  infinitive: 'Infinitive',\n  present: 'PresentTense',\n  past: 'PastTense',\n  gerund: 'Gerund',\n  actor: 'Actor',\n  future: 'FutureTense',\n  pluperfect: 'PluperfectTense',\n  perfect: 'PerfectTense',\n\n  PerfectTense: 'PerfectTense',\n  PluperfectTense: 'PluperfectTense',\n  FutureTense: 'FutureTense',\n  PastTense: 'PastTense',\n  PresentTense: 'PresentTense',\n};\n\nclass Verb extends Term {\n  constructor(str, tag) {\n    super(str);\n    this.tag = tag;\n    this.pos['Verb'] = true;\n    this.conjugations = {}; //cached conjugations\n    //if we've been told which\n    this.pos[tag] = true;\n    if (tag && verbTags[tag]) {\n      this.conjugations[tag] = this.normal;\n    }\n  }\n\n\n  //retrieve a specific form\n  conjugation() {\n    //check cached conjugations\n    this.conjugations = this.conjugate();\n    let keys = Object.keys(this.conjugations);\n    for(let i = 0; i < keys.length; i++) {\n      if (this.conjugations[keys[i]] === this.normal) {\n        return verbTags[keys[i]];\n      }\n    }\n    return verbTags[predict(this.normal)];\n  }\n\n  conjugate() {\n    this.conjugations = conjugate(this.normal);\n    return this.conjugations;\n  }\n  to_past() {\n    let tense = 'past';\n    if (!this.conjugations[tense]) {\n      this.conjugate(this.normal);\n    }\n    this.tag = verbTags[tense];\n    this.changeTo(this.conjugations[tense]);\n    return this.conjugations[tense];\n  }\n  to_present() {\n    let tense = 'present';\n    if (!this.conjugations[tense]) {\n      this.conjugate(this.normal);\n    }\n    this.tag = verbTags[tense];\n    this.changeTo(this.conjugations[tense]);\n    return this.conjugations[tense];\n  }\n  to_future() {\n    let tense = 'future';\n    if (!this.conjugations[tense]) {\n      this.conjugate(this.normal);\n    }\n    this.tag = verbTags[tense];\n    this.changeTo(this.conjugations[tense]);\n    return this.conjugations[tense];\n  }\n\n\n  //is this verb negative already?\n  isNegative() {\n    const str = this.normal;\n    if (str.match(/(n't|\\bnot\\b)/)) {\n      return true;\n    }\n    return false;\n  }\n\n  negate(form) {\n    if (this.isNegative()) {\n      return this.text;\n    }\n    this.changeTo(negate(this, form));\n    return this.text;\n\n  }\n\n}\nVerb.fn = Verb.prototype;\n\n// let v = new Verb(\"walk\", \"asdf\")\n// console.log(v.form())\n\nmodule.exports = Verb;\n\n},{\"../term.js\":66,\"./conjugate/conjugate.js\":67,\"./negate.js\":73}],75:[function(require,module,exports){\n'use strict';\n//split a string into all possible parts\nconst fns = require('../fns.js');\n\n//n-gram takes a list of pre-cleaned terms, and makes no assumptions\nconst ngram = function(terms, options) {\n  options = options || {};\n  const min_count = options.min_count || 1; // minimum hit-count\n  const max_size = options.max_size || 5; // maximum gram count\n  const keys = [null];\n  let results = [];\n  //prepare the keys object\n  for (let i = 1; i <= max_size; i++) {\n    keys.push({});\n  }\n  // Create a hash for counting..\n  const textlen = terms.length;\n  for (let i = 0; i < textlen; i++) {\n    let s = terms[i];\n    keys[1][s] = (keys[1][s] || 0) + 1;\n    for (let j = 2; j <= max_size; j++) {\n      if (i + j <= textlen) {\n        s += ' ' + terms[i + j - 1];\n        keys[j][s] = (keys[j][s] || 0) + 1;\n      } else {\n        break;\n      }\n    }\n  }\n  // map the hash to an array for sorting\n  for (let k = 1; k < max_size; k++) {\n    results[k] = [];\n    const key = keys[k];\n    const words = Object.keys(keys[k]);\n    for (let i = 0; i < words.length; i++) {\n      const word = words[i];\n      if (key[word] >= min_count) {\n        results[k].push({\n          'word': word,\n          'count': key[word],\n          'size': k\n        });\n      }\n    }\n  }\n  //post-process + sort\n  results = fns.compact(results);\n  results = results.map(function(r) {\n    r = r.sort(function(a, b) {\n      return b.count - a.count;\n    });\n    return r;\n  });\n  return results;\n};\n\n// console.log(ngram(\"hi dr nick! dr nick!\".split(\" \")))\n\nmodule.exports = ngram;\n\n},{\"../fns.js\":18}],76:[function(require,module,exports){\n//(Rule-based sentence boundary segmentation) - chop given text into its proper sentences.\n// Ignore periods/questions/exclamations used in acronyms/abbreviations/numbers, etc.\n// @spencermountain 2015 MIT\n'use strict';\nlet abbreviations = require('../data/abbreviations').abbreviations;\n\nconst sentence_parser = function(text) {\n  const sentences = [];\n  //first do a greedy-split..\n  const chunks = text.split(/(\\S.+?[.\\?!])(?=\\s+|$|\")/g);\n\n  //detection of non-sentence chunks\n  const abbrev_reg = new RegExp('\\\\b(' + abbreviations.join('|') + ')[.!?] ?$', 'i');\n  const acronym_reg = new RegExp('[ |\\.][A-Z]\\.?$', 'i');\n  const elipses_reg = new RegExp('\\\\.\\\\.\\\\.*$');\n\n  //loop through these chunks, and join the non-sentence chunks back together..\n  const chunks_length = chunks.length;\n  for (let i = 0; i < chunks_length; i++) {\n    if (chunks[i]) {\n      //trim whitespace\n      chunks[i] = chunks[i].replace(/^\\s+|\\s+$/g, '');\n      //should this chunk be combined with the next one?\n      if (chunks[i + 1] && chunks[i].match(abbrev_reg) || chunks[i].match(acronym_reg) || chunks[i].match(elipses_reg)) {\n        chunks[i + 1] = ((chunks[i] || '') + ' ' + (chunks[i + 1] || '')).replace(/ +/g, ' ');\n      } else if (chunks[i] && chunks[i].length > 0) { //this chunk is a proper sentence..\n        sentences.push(chunks[i]);\n        chunks[i] = '';\n      }\n    }\n  }\n  //if we never got a sentence, return the given text\n  if (sentences.length === 0) {\n    return [text];\n  }\n\n  return sentences;\n};\n\nmodule.exports = sentence_parser;\n\n},{\"../data/abbreviations\":1}],77:[function(require,module,exports){\n'use strict';\nconst sentence_parser = require('./sentence_parser.js');\nconst Sentence = require('../sentence/sentence.js');\nconst ngram = require('./ngram.js');\nconst fns = require('../fns.js');\n\n//a text object is a series of sentences, along with the generic methods for transforming them\nclass Text {\n  constructor(str) {\n    const the = this;\n    this.raw_text = str || '';\n    //build-up sentence methods\n    this.sentences = sentence_parser(str).map(function(s) {\n      return new Sentence(s);\n    });\n\n    this.contractions = {\n      // he'd -> he would\n      expand: function() {\n        return the.sentences.map(function(s) {\n          return s.contractions.expand();\n        });\n      },\n      // he would -> he'd\n      contract: function() {\n        return the.sentences.map(function(s) {\n          return s.contractions.contract();\n        });\n      }\n    };\n  }\n\n  //Text methods\n  ngram(options) {\n    let terms = this.terms();\n    terms = terms.map(function(t) {\n      return t.normal;\n    });\n    return ngram(terms, options);\n  }\n\n  //map over sentence methods\n  text() {\n    const arr = this.sentences.map(function(s) {\n      return s.text();\n    });\n    return fns.flatten(arr).join(' ');\n  }\n  normalized() {\n    const arr = this.sentences.map(function(s) {\n      return s.normalized();\n    });\n    return fns.flatten(arr).join(' ');\n  }\n  terms() {\n    const arr = this.sentences.map(function(s) {\n      return s.terms;\n    });\n    return fns.flatten(arr);\n  }\n  normalised() {\n    const arr = this.sentences.map(function(s) {\n      return s.normalized();\n    });\n    return fns.flatten(arr).join(' ');\n  }\n  tags() {\n    return this.sentences.map(function(s) {\n      return s.tags();\n    });\n  }\n  syllables() {\n    return this.sentences.reduce(function(arr, s) {\n      arr = arr.concat(s.syllables());\n      return arr;\n    }, []);\n  }\n  to_past() {\n    return this.sentences.map(function(s) {\n      return s.to_past();\n    });\n  }\n  to_present() {\n    return this.sentences.map(function(s) {\n      return s.to_present();\n    });\n  }\n  to_future() {\n    return this.sentences.map(function(s) {\n      return s.to_future();\n    });\n  }\n  //mining\n  people() {\n    let arr = [];\n    for(let i = 0; i < this.sentences.length; i++) {\n      arr = arr.concat(this.sentences[i].people());\n    }\n    return arr;\n  }\n  places() {\n    let arr = [];\n    for(let i = 0; i < this.sentences.length; i++) {\n      arr = arr.concat(this.sentences[i].places());\n    }\n    return arr;\n  }\n  organisations() {\n    let arr = [];\n    for(let i = 0; i < this.sentences.length; i++) {\n      arr = arr.concat(this.sentences[i].organisations());\n    }\n    return arr;\n  }\n  dates() {\n    let arr = [];\n    for(let i = 0; i < this.sentences.length; i++) {\n      arr = arr.concat(this.sentences[i].dates());\n    }\n    return arr;\n  }\n  values() {\n    let arr = [];\n    for(let i = 0; i < this.sentences.length; i++) {\n      arr = arr.concat(this.sentences[i].values());\n    }\n    return arr;\n  }\n}\nText.fn = Text.prototype;\n\nmodule.exports = Text;\n\n},{\"../fns.js\":18,\"../sentence/sentence.js\":29,\"./ngram.js\":75,\"./sentence_parser.js\":76}]},{},[19]);\n"]}