!function(){"use strict";function e(e){Gumby.debug("Initializing Checkbox",e),this.$el=e,this.$input=this.$el.find("input[type=checkbox]");var n=this;this.$el.on(Gumby.click,function(e){e.stopImmediatePropagation(),e.preventDefault(),n.$input.is("[disabled]")||(n.$el.hasClass("checked")?n.update(!1):n.update(!0))}).on("gumby.check",function(){Gumby.debug("Check event triggered",n.$el),n.update(!0)}).on("gumby.uncheck",function(){Gumby.debug("Uncheck event triggered",n.$el),n.update(!1)}),(this.$input.prop("checked")||this.$el.hasClass("checked"))&&n.update(!0)}e.prototype.update=function(e){var n=this.$el.find("span");e?(Gumby.debug("Checking Checkbox",this.$el),n.append('<i class="icon-check" />'),this.$input.prop("checked",!0),Gumby.debug("Triggering onCheck event",this.$el),Gumby.debug("Triggering onChange event",this.$el),this.$el.addClass("checked").trigger("gumby.onCheck").trigger("gumby.onChange")):(Gumby.debug("Unchecking Checkbox",this.$el),this.$input.prop("checked",!1),n.find("i").remove(),Gumby.debug("Triggering onUncheck event",this.$el),Gumby.debug("Triggering onChange event",this.$el),this.$el.removeClass("checked").trigger("gumby.onUncheck").trigger("gumby.onChange"))},Gumby.addInitalisation("checkbox",function(){$(".checkbox").each(function(){var n=$(this);return n.data("isCheckbox")?!0:(n.data("isCheckbox",!0),void new e(n))})}),Gumby.UIModule({module:"checkbox",events:["onCheck","onUncheck","onChange","check","uncheck"],init:function(){Gumby.initialize("checkbox")}})}();