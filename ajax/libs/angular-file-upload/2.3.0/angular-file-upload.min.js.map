{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///angular-file-upload.min.js","webpack:///webpack/bootstrap 28fa09dee3e5703b4594?eb8b","webpack:///./src/index.js?9552","webpack:///./src/config.json?1c25","webpack:///./src/values/options.js?b00e","webpack:///./src/services/FileUploader.js?148d","webpack:///./src/services/FileLikeObject.js?b90b","webpack:///./src/services/FileItem.js?e529","webpack:///./src/services/FileDirective.js?4dd3","webpack:///./src/services/FileSelect.js?5a11","webpack:///./src/services/FileDrop.js?e446","webpack:///./src/services/FileOver.js?26c9","webpack:///./src/directives/FileSelect.js?8405","webpack:///./src/directives/FileDrop.js?82da","webpack:///./src/directives/FileOver.js?6161"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_config","_config2","_options","_options2","_FileUploader","_FileUploader2","_FileLikeObject","_FileLikeObject2","_FileItem","_FileItem2","_FileDirective","_FileDirective2","_FileSelect","_FileSelect2","_FileDrop","_FileDrop2","_FileOver","_FileOver2","_FileSelect3","_FileSelect4","_FileDrop3","_FileDrop4","_FileOver3","_FileOver4","angular","name","value","directive","run","FileUploader","FileLikeObject","FileItem","FileDirective","FileSelect","FileDrop","FileOver","Object","defineProperty","url","alias","headers","queue","progress","autoUpload","removeAfterUpload","method","filters","formData","queueLimit","Number","MAX_VALUE","withCredentials","disableMultipart","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_angular","copy","extend","forEach","isObject","isNumber","isDefined","isArray","element","fileUploaderOptions","$rootScope","$http","$window","File","FormData","options","settings","isUploading","_nextIndex","_failFilterIndex","_directives","select","drop","over","unshift","fn","_queueLimitFilter","_folderFilter","files","_this","list","isArrayLikeObject","arrayOfFilters","_getFilters","count","addedFileItems","some","temp","_isValidFile","fileItem","push","_onAfterAddingFile","filter","_onWhenAddingFileFailed","_onAfterAddingAll","_getTotalProgress","_render","uploadAll","index","getIndexOfItem","item","cancel","splice","_destroy","remove","transport","isHTML5","_prepareToUploading","prop","abort","items","getNotUploadedItems","upload","constructor","isFile","isFileLikeObject","indexOf","isUploaded","isReady","sort","item1","item2","_this2","object","destroy","fileItems","response","status","notUploaded","uploaded","ratio","current","Math","round","names","match","$$phase","$apply","size","type","file","_this3","every","headersGetter","_headersGetter","defaults","transformResponse","transformFn","val","parsed","split","line","slice","trim","toLowerCase","parsedHeaders","sendable","_this4","xhr","_xhr","XMLHttpRequest","_onBeforeUploadItem","_file","append","onprogress","event","lengthComputable","total","_onProgressItem","onload","_parseHeaders","getAllResponseHeaders","_transformResponse","gist","_isSuccessCode","_onCompleteItem","onerror","_onErrorItem","onabort","_onCancelItem","open","setRequestHeader","send","_this5","form","iframe","Date","now","input","_input","_form","replaceWith","element_","action","enctype","encoding","bind","html","contentDocument","body","innerHTML","e","dummy","_onSuccessItem","unbind","after","submit","onWhenAddingFileFailed","onAfterAddingFile","onAfterAddingAll","_onBeforeUpload","onBeforeUploadItem","_onProgress","onProgressItem","onProgressAll","_onSuccess","onSuccessItem","_onError","onErrorItem","_onCancel","onCancelItem","_onComplete","onCompleteItem","nextItem","getReadyItems","onCompleteAll","source","create","super_","$inject","isElement","isString","fileOrInput","isInput","fakePathOrObject","postfix","path","lastModifiedDate","lastIndexOf","$compile","uploader","isSuccess","isCancel","isError","_replaceNode","uploadItem","cancelItem","removeFromQueue","onBeforeUpload","onProgress","onSuccess","onError","onCancel","onComplete","clone","scope","css","_saveLinks","events","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","extendedOptions","$destroy","change","getPrototypeOf","removeAttr","attr","getOptions","getFilters","addToQueue","isEmptyAfterSelection","dragover","dragleave","transfer","_getTransfer","_preventAndStop","_removeOverClass","_haveFiles","types","dropEffect","_addOverClass","currentTarget","dataTransfer","originalEvent","preventDefault","stopPropagation","contains","addOverClass","removeOverClass","overClass","addClass","getOverClass","removeClass","$parse","link","attributes","$eval"],"mappings":"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","file":"angular-file-upload.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-file-upload\"] = factory();\n\telse\n\t\troot[\"angular-file-upload\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-file-upload\"] = factory();\n\telse\n\t\troot[\"angular-file-upload\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tvar _options = __webpack_require__(2);\n\t\n\tvar _options2 = _interopRequireDefault(_options);\n\t\n\tvar _FileUploader = __webpack_require__(3);\n\t\n\tvar _FileUploader2 = _interopRequireDefault(_FileUploader);\n\t\n\tvar _FileLikeObject = __webpack_require__(4);\n\t\n\tvar _FileLikeObject2 = _interopRequireDefault(_FileLikeObject);\n\t\n\tvar _FileItem = __webpack_require__(5);\n\t\n\tvar _FileItem2 = _interopRequireDefault(_FileItem);\n\t\n\tvar _FileDirective = __webpack_require__(6);\n\t\n\tvar _FileDirective2 = _interopRequireDefault(_FileDirective);\n\t\n\tvar _FileSelect = __webpack_require__(7);\n\t\n\tvar _FileSelect2 = _interopRequireDefault(_FileSelect);\n\t\n\tvar _FileDrop = __webpack_require__(8);\n\t\n\tvar _FileDrop2 = _interopRequireDefault(_FileDrop);\n\t\n\tvar _FileOver = __webpack_require__(9);\n\t\n\tvar _FileOver2 = _interopRequireDefault(_FileOver);\n\t\n\tvar _FileSelect3 = __webpack_require__(10);\n\t\n\tvar _FileSelect4 = _interopRequireDefault(_FileSelect3);\n\t\n\tvar _FileDrop3 = __webpack_require__(11);\n\t\n\tvar _FileDrop4 = _interopRequireDefault(_FileDrop3);\n\t\n\tvar _FileOver3 = __webpack_require__(12);\n\t\n\tvar _FileOver4 = _interopRequireDefault(_FileOver3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tangular.module(_config2.default.name, []).value('fileUploaderOptions', _options2.default).factory('FileUploader', _FileUploader2.default).factory('FileLikeObject', _FileLikeObject2.default).factory('FileItem', _FileItem2.default).factory('FileDirective', _FileDirective2.default).factory('FileSelect', _FileSelect2.default).factory('FileDrop', _FileDrop2.default).factory('FileOver', _FileOver2.default).directive('nvFileSelect', _FileSelect4.default).directive('nvFileDrop', _FileDrop4.default).directive('nvFileOver', _FileOver4.default).run(['FileUploader', 'FileLikeObject', 'FileItem', 'FileDirective', 'FileSelect', 'FileDrop', 'FileOver', function (FileUploader, FileLikeObject, FileItem, FileDirective, FileSelect, FileDrop, FileOver) {\n\t    // only for compatibility\n\t    FileUploader.FileLikeObject = FileLikeObject;\n\t    FileUploader.FileItem = FileItem;\n\t    FileUploader.FileDirective = FileDirective;\n\t    FileUploader.FileSelect = FileSelect;\n\t    FileUploader.FileDrop = FileDrop;\n\t    FileUploader.FileOver = FileOver;\n\t}]);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"name\": \"angularFileUpload\"\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = {\n\t    url: '/',\n\t    alias: 'file',\n\t    headers: {},\n\t    queue: [],\n\t    progress: 0,\n\t    autoUpload: false,\n\t    removeAfterUpload: false,\n\t    method: 'POST',\n\t    filters: [],\n\t    formData: [],\n\t    queueLimit: Number.MAX_VALUE,\n\t    withCredentials: false,\n\t    disableMultipart: false\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular;\n\tvar copy = _angular.copy;\n\tvar extend = _angular.extend;\n\tvar forEach = _angular.forEach;\n\tvar isObject = _angular.isObject;\n\tvar isNumber = _angular.isNumber;\n\tvar isDefined = _angular.isDefined;\n\tvar isArray = _angular.isArray;\n\tvar element = _angular.element;\n\t\n\texports.default = function (fileUploaderOptions, $rootScope, $http, $window, FileLikeObject, FileItem) {\n\t    var File = $window.File;\n\t    var FormData = $window.FormData;\n\t\n\t    var FileUploader = function () {\n\t        /**********************\n\t         * PUBLIC\n\t         **********************/\n\t        /**\n\t         * Creates an instance of FileUploader\n\t         * @param {Object} [options]\n\t         * @constructor\n\t         */\n\t\n\t        function FileUploader(options) {\n\t            _classCallCheck(this, FileUploader);\n\t\n\t            var settings = copy(fileUploaderOptions);\n\t\n\t            extend(this, settings, options, {\n\t                isUploading: false,\n\t                _nextIndex: 0,\n\t                _failFilterIndex: -1,\n\t                _directives: { select: [], drop: [], over: [] }\n\t            });\n\t\n\t            // add default filters\n\t            this.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n\t            this.filters.unshift({ name: 'folder', fn: this._folderFilter });\n\t        }\n\t        /**\n\t         * Adds items to the queue\n\t         * @param {File|HTMLInputElement|Object|FileList|Array<Object>} files\n\t         * @param {Object} [options]\n\t         * @param {Array<Function>|String} filters\n\t         */\n\t\n\t\n\t        _createClass(FileUploader, [{\n\t            key: 'addToQueue',\n\t            value: function addToQueue(files, options, filters) {\n\t                var _this = this;\n\t\n\t                var list = this.isArrayLikeObject(files) ? files : [files];\n\t                var arrayOfFilters = this._getFilters(filters);\n\t                var count = this.queue.length;\n\t                var addedFileItems = [];\n\t\n\t                forEach(list, function (some /*{File|HTMLInputElement|Object}*/) {\n\t                    var temp = new FileLikeObject(some);\n\t\n\t                    if (_this._isValidFile(temp, arrayOfFilters, options)) {\n\t                        var fileItem = new FileItem(_this, some, options);\n\t                        addedFileItems.push(fileItem);\n\t                        _this.queue.push(fileItem);\n\t                        _this._onAfterAddingFile(fileItem);\n\t                    } else {\n\t                        var filter = arrayOfFilters[_this._failFilterIndex];\n\t                        _this._onWhenAddingFileFailed(temp, filter, options);\n\t                    }\n\t                });\n\t\n\t                if (this.queue.length !== count) {\n\t                    this._onAfterAddingAll(addedFileItems);\n\t                    this.progress = this._getTotalProgress();\n\t                }\n\t\n\t                this._render();\n\t                if (this.autoUpload) this.uploadAll();\n\t            }\n\t            /**\n\t             * Remove items from the queue. Remove last: index = -1\n\t             * @param {FileItem|Number} value\n\t             */\n\t\n\t        }, {\n\t            key: 'removeFromQueue',\n\t            value: function removeFromQueue(value) {\n\t                var index = this.getIndexOfItem(value);\n\t                var item = this.queue[index];\n\t                if (item.isUploading) item.cancel();\n\t                this.queue.splice(index, 1);\n\t                item._destroy();\n\t                this.progress = this._getTotalProgress();\n\t            }\n\t            /**\n\t             * Clears the queue\n\t             */\n\t\n\t        }, {\n\t            key: 'clearQueue',\n\t            value: function clearQueue() {\n\t                while (this.queue.length) {\n\t                    this.queue[0].remove();\n\t                }\n\t                this.progress = 0;\n\t            }\n\t            /**\n\t             * Uploads a item from the queue\n\t             * @param {FileItem|Number} value\n\t             */\n\t\n\t        }, {\n\t            key: 'uploadItem',\n\t            value: function uploadItem(value) {\n\t                var index = this.getIndexOfItem(value);\n\t                var item = this.queue[index];\n\t                var transport = this.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n\t\n\t                item._prepareToUploading();\n\t                if (this.isUploading) return;\n\t\n\t                this.isUploading = true;\n\t                this[transport](item);\n\t            }\n\t            /**\n\t             * Cancels uploading of item from the queue\n\t             * @param {FileItem|Number} value\n\t             */\n\t\n\t        }, {\n\t            key: 'cancelItem',\n\t            value: function cancelItem(value) {\n\t                var index = this.getIndexOfItem(value);\n\t                var item = this.queue[index];\n\t                var prop = this.isHTML5 ? '_xhr' : '_form';\n\t                if (item && item.isUploading) item[prop].abort();\n\t            }\n\t            /**\n\t             * Uploads all not uploaded items of queue\n\t             */\n\t\n\t        }, {\n\t            key: 'uploadAll',\n\t            value: function uploadAll() {\n\t                var items = this.getNotUploadedItems().filter(function (item) {\n\t                    return !item.isUploading;\n\t                });\n\t                if (!items.length) return;\n\t\n\t                forEach(items, function (item) {\n\t                    return item._prepareToUploading();\n\t                });\n\t                items[0].upload();\n\t            }\n\t            /**\n\t             * Cancels all uploads\n\t             */\n\t\n\t        }, {\n\t            key: 'cancelAll',\n\t            value: function cancelAll() {\n\t                var items = this.getNotUploadedItems();\n\t                forEach(items, function (item) {\n\t                    return item.cancel();\n\t                });\n\t            }\n\t            /**\n\t             * Returns \"true\" if value an instance of File\n\t             * @param {*} value\n\t             * @returns {Boolean}\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: 'isFile',\n\t            value: function isFile(value) {\n\t                return this.constructor.isFile(value);\n\t            }\n\t            /**\n\t             * Returns \"true\" if value an instance of FileLikeObject\n\t             * @param {*} value\n\t             * @returns {Boolean}\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: 'isFileLikeObject',\n\t            value: function isFileLikeObject(value) {\n\t                return this.constructor.isFileLikeObject(value);\n\t            }\n\t            /**\n\t             * Returns \"true\" if value is array like object\n\t             * @param {*} value\n\t             * @returns {Boolean}\n\t             */\n\t\n\t        }, {\n\t            key: 'isArrayLikeObject',\n\t            value: function isArrayLikeObject(value) {\n\t                return this.constructor.isArrayLikeObject(value);\n\t            }\n\t            /**\n\t             * Returns a index of item from the queue\n\t             * @param {Item|Number} value\n\t             * @returns {Number}\n\t             */\n\t\n\t        }, {\n\t            key: 'getIndexOfItem',\n\t            value: function getIndexOfItem(value) {\n\t                return isNumber(value) ? value : this.queue.indexOf(value);\n\t            }\n\t            /**\n\t             * Returns not uploaded items\n\t             * @returns {Array}\n\t             */\n\t\n\t        }, {\n\t            key: 'getNotUploadedItems',\n\t            value: function getNotUploadedItems() {\n\t                return this.queue.filter(function (item) {\n\t                    return !item.isUploaded;\n\t                });\n\t            }\n\t            /**\n\t             * Returns items ready for upload\n\t             * @returns {Array}\n\t             */\n\t\n\t        }, {\n\t            key: 'getReadyItems',\n\t            value: function getReadyItems() {\n\t                return this.queue.filter(function (item) {\n\t                    return item.isReady && !item.isUploading;\n\t                }).sort(function (item1, item2) {\n\t                    return item1.index - item2.index;\n\t                });\n\t            }\n\t            /**\n\t             * Destroys instance of FileUploader\n\t             */\n\t\n\t        }, {\n\t            key: 'destroy',\n\t            value: function destroy() {\n\t                var _this2 = this;\n\t\n\t                forEach(this._directives, function (key) {\n\t                    forEach(_this2._directives[key], function (object) {\n\t                        object.destroy();\n\t                    });\n\t                });\n\t            }\n\t            /**\n\t             * Callback\n\t             * @param {Array} fileItems\n\t             */\n\t\n\t        }, {\n\t            key: 'onAfterAddingAll',\n\t            value: function onAfterAddingAll(fileItems) {}\n\t            /**\n\t             * Callback\n\t             * @param {FileItem} fileItem\n\t             */\n\t\n\t        }, {\n\t            key: 'onAfterAddingFile',\n\t            value: function onAfterAddingFile(fileItem) {}\n\t            /**\n\t             * Callback\n\t             * @param {File|Object} item\n\t             * @param {Object} filter\n\t             * @param {Object} options\n\t             */\n\t\n\t        }, {\n\t            key: 'onWhenAddingFileFailed',\n\t            value: function onWhenAddingFileFailed(item, filter, options) {}\n\t            /**\n\t             * Callback\n\t             * @param {FileItem} fileItem\n\t             */\n\t\n\t        }, {\n\t            key: 'onBeforeUploadItem',\n\t            value: function onBeforeUploadItem(fileItem) {}\n\t            /**\n\t             * Callback\n\t             * @param {FileItem} fileItem\n\t             * @param {Number} progress\n\t             */\n\t\n\t        }, {\n\t            key: 'onProgressItem',\n\t            value: function onProgressItem(fileItem, progress) {}\n\t            /**\n\t             * Callback\n\t             * @param {Number} progress\n\t             */\n\t\n\t        }, {\n\t            key: 'onProgressAll',\n\t            value: function onProgressAll(progress) {}\n\t            /**\n\t             * Callback\n\t             * @param {FileItem} item\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             */\n\t\n\t        }, {\n\t            key: 'onSuccessItem',\n\t            value: function onSuccessItem(item, response, status, headers) {}\n\t            /**\n\t             * Callback\n\t             * @param {FileItem} item\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             */\n\t\n\t        }, {\n\t            key: 'onErrorItem',\n\t            value: function onErrorItem(item, response, status, headers) {}\n\t            /**\n\t             * Callback\n\t             * @param {FileItem} item\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             */\n\t\n\t        }, {\n\t            key: 'onCancelItem',\n\t            value: function onCancelItem(item, response, status, headers) {}\n\t            /**\n\t             * Callback\n\t             * @param {FileItem} item\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             */\n\t\n\t        }, {\n\t            key: 'onCompleteItem',\n\t            value: function onCompleteItem(item, response, status, headers) {}\n\t            /**\n\t             * Callback\n\t             */\n\t\n\t        }, {\n\t            key: 'onCompleteAll',\n\t            value: function onCompleteAll() {}\n\t            /**********************\n\t             * PRIVATE\n\t             **********************/\n\t            /**\n\t             * Returns the total progress\n\t             * @param {Number} [value]\n\t             * @returns {Number}\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_getTotalProgress',\n\t            value: function _getTotalProgress(value) {\n\t                if (this.removeAfterUpload) return value || 0;\n\t\n\t                var notUploaded = this.getNotUploadedItems().length;\n\t                var uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n\t                var ratio = 100 / this.queue.length;\n\t                var current = (value || 0) * ratio / 100;\n\t\n\t                return Math.round(uploaded * ratio + current);\n\t            }\n\t            /**\n\t             * Returns array of filters\n\t             * @param {Array<Function>|String} filters\n\t             * @returns {Array<Function>}\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_getFilters',\n\t            value: function _getFilters(filters) {\n\t                if (!filters) return this.filters;\n\t                if (isArray(filters)) return filters;\n\t                var names = filters.match(/[^\\s,]+/g);\n\t                return this.filters.filter(function (filter) {\n\t                    return names.indexOf(filter.name) !== -1;\n\t                });\n\t            }\n\t            /**\n\t             * Updates html\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_render',\n\t            value: function _render() {\n\t                if (!$rootScope.$$phase) $rootScope.$apply();\n\t            }\n\t            /**\n\t             * Returns \"true\" if item is a file (not folder)\n\t             * @param {File|FileLikeObject} item\n\t             * @returns {Boolean}\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_folderFilter',\n\t            value: function _folderFilter(item) {\n\t                return !!(item.size || item.type);\n\t            }\n\t            /**\n\t             * Returns \"true\" if the limit has not been reached\n\t             * @returns {Boolean}\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_queueLimitFilter',\n\t            value: function _queueLimitFilter() {\n\t                return this.queue.length < this.queueLimit;\n\t            }\n\t            /**\n\t             * Returns \"true\" if file pass all filters\n\t             * @param {File|Object} file\n\t             * @param {Array<Function>} filters\n\t             * @param {Object} options\n\t             * @returns {Boolean}\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_isValidFile',\n\t            value: function _isValidFile(file, filters, options) {\n\t                var _this3 = this;\n\t\n\t                this._failFilterIndex = -1;\n\t                return !filters.length ? true : filters.every(function (filter) {\n\t                    _this3._failFilterIndex++;\n\t                    return filter.fn.call(_this3, file, options);\n\t                });\n\t            }\n\t            /**\n\t             * Checks whether upload successful\n\t             * @param {Number} status\n\t             * @returns {Boolean}\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_isSuccessCode',\n\t            value: function _isSuccessCode(status) {\n\t                return status >= 200 && status < 300 || status === 304;\n\t            }\n\t            /**\n\t             * Transforms the server response\n\t             * @param {*} response\n\t             * @param {Object} headers\n\t             * @returns {*}\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_transformResponse',\n\t            value: function _transformResponse(response, headers) {\n\t                var headersGetter = this._headersGetter(headers);\n\t                forEach($http.defaults.transformResponse, function (transformFn) {\n\t                    response = transformFn(response, headersGetter);\n\t                });\n\t                return response;\n\t            }\n\t            /**\n\t             * Parsed response headers\n\t             * @param headers\n\t             * @returns {Object}\n\t             * @see https://github.com/angular/angular.js/blob/master/src/ng/http.js\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_parseHeaders',\n\t            value: function _parseHeaders(headers) {\n\t                var parsed = {},\n\t                    key,\n\t                    val,\n\t                    i;\n\t\n\t                if (!headers) return parsed;\n\t\n\t                forEach(headers.split('\\n'), function (line) {\n\t                    i = line.indexOf(':');\n\t                    key = line.slice(0, i).trim().toLowerCase();\n\t                    val = line.slice(i + 1).trim();\n\t\n\t                    if (key) {\n\t                        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n\t                    }\n\t                });\n\t\n\t                return parsed;\n\t            }\n\t            /**\n\t             * Returns function that returns headers\n\t             * @param {Object} parsedHeaders\n\t             * @returns {Function}\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_headersGetter',\n\t            value: function _headersGetter(parsedHeaders) {\n\t                return function (name) {\n\t                    if (name) {\n\t                        return parsedHeaders[name.toLowerCase()] || null;\n\t                    }\n\t                    return parsedHeaders;\n\t                };\n\t            }\n\t            /**\n\t             * The XMLHttpRequest transport\n\t             * @param {FileItem} item\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_xhrTransport',\n\t            value: function _xhrTransport(item) {\n\t                var _this4 = this;\n\t\n\t                var xhr = item._xhr = new XMLHttpRequest();\n\t                var sendable;\n\t\n\t                this._onBeforeUploadItem(item);\n\t\n\t                if (!item.disableMultipart) {\n\t                    sendable = new FormData();\n\t                    forEach(item.formData, function (obj) {\n\t                        forEach(obj, function (value, key) {\n\t                            sendable.append(key, value);\n\t                        });\n\t                    });\n\t\n\t                    sendable.append(item.alias, item._file, item.file.name);\n\t                } else {\n\t                    sendable = item._file;\n\t                }\n\t\n\t                if (typeof item._file.size != 'number') {\n\t                    throw new TypeError('The file specified is no longer valid');\n\t                }\n\t\n\t                xhr.upload.onprogress = function (event) {\n\t                    var progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n\t                    _this4._onProgressItem(item, progress);\n\t                };\n\t\n\t                xhr.onload = function () {\n\t                    var headers = _this4._parseHeaders(xhr.getAllResponseHeaders());\n\t                    var response = _this4._transformResponse(xhr.response, headers);\n\t                    var gist = _this4._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n\t                    var method = '_on' + gist + 'Item';\n\t                    _this4[method](item, response, xhr.status, headers);\n\t                    _this4._onCompleteItem(item, response, xhr.status, headers);\n\t                };\n\t\n\t                xhr.onerror = function () {\n\t                    var headers = _this4._parseHeaders(xhr.getAllResponseHeaders());\n\t                    var response = _this4._transformResponse(xhr.response, headers);\n\t                    _this4._onErrorItem(item, response, xhr.status, headers);\n\t                    _this4._onCompleteItem(item, response, xhr.status, headers);\n\t                };\n\t\n\t                xhr.onabort = function () {\n\t                    var headers = _this4._parseHeaders(xhr.getAllResponseHeaders());\n\t                    var response = _this4._transformResponse(xhr.response, headers);\n\t                    _this4._onCancelItem(item, response, xhr.status, headers);\n\t                    _this4._onCompleteItem(item, response, xhr.status, headers);\n\t                };\n\t\n\t                xhr.open(item.method, item.url, true);\n\t\n\t                xhr.withCredentials = item.withCredentials;\n\t\n\t                forEach(item.headers, function (value, name) {\n\t                    xhr.setRequestHeader(name, value);\n\t                });\n\t\n\t                xhr.send(sendable);\n\t                this._render();\n\t            }\n\t            /**\n\t             * The IFrame transport\n\t             * @param {FileItem} item\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_iframeTransport',\n\t            value: function _iframeTransport(item) {\n\t                var _this5 = this;\n\t\n\t                var form = element('<form style=\"display: none;\" />');\n\t                var iframe = element('<iframe name=\"iframeTransport' + Date.now() + '\">');\n\t                var input = item._input;\n\t\n\t                if (item._form) item._form.replaceWith(input); // remove old form\n\t                item._form = form; // save link to new form\n\t\n\t                this._onBeforeUploadItem(item);\n\t\n\t                input.prop('name', item.alias);\n\t\n\t                forEach(item.formData, function (obj) {\n\t                    forEach(obj, function (value, key) {\n\t                        var element_ = element('<input type=\"hidden\" name=\"' + key + '\" />');\n\t                        element_.val(value);\n\t                        form.append(element_);\n\t                    });\n\t                });\n\t\n\t                form.prop({\n\t                    action: item.url,\n\t                    method: 'POST',\n\t                    target: iframe.prop('name'),\n\t                    enctype: 'multipart/form-data',\n\t                    encoding: 'multipart/form-data' // old IE\n\t                });\n\t\n\t                iframe.bind('load', function () {\n\t                    var html = '';\n\t                    var status = 200;\n\t\n\t                    try {\n\t                        // Fix for legacy IE browsers that loads internal error page\n\t                        // when failed WS response received. In consequence iframe\n\t                        // content access denied error is thrown becouse trying to\n\t                        // access cross domain page. When such thing occurs notifying\n\t                        // with empty response object. See more info at:\n\t                        // http://stackoverflow.com/questions/151362/access-is-denied-error-on-accessing-iframe-document-object\n\t                        // Note that if non standard 4xx or 5xx error code returned\n\t                        // from WS then response content can be accessed without error\n\t                        // but 'XHR' status becomes 200. In order to avoid confusion\n\t                        // returning response via same 'success' event handler.\n\t\n\t                        // fixed angular.contents() for iframes\n\t                        html = iframe[0].contentDocument.body.innerHTML;\n\t                    } catch (e) {\n\t                        // in case we run into the access-is-denied error or we have another error on the server side\n\t                        // (intentional 500,40... errors), we at least say 'something went wrong' -> 500\n\t                        status = 500;\n\t                    }\n\t\n\t                    var xhr = { response: html, status: status, dummy: true };\n\t                    var headers = {};\n\t                    var response = _this5._transformResponse(xhr.response, headers);\n\t\n\t                    _this5._onSuccessItem(item, response, xhr.status, headers);\n\t                    _this5._onCompleteItem(item, response, xhr.status, headers);\n\t                });\n\t\n\t                form.abort = function () {\n\t                    var xhr = { status: 0, dummy: true };\n\t                    var headers = {};\n\t                    var response;\n\t\n\t                    iframe.unbind('load').prop('src', 'javascript:false;');\n\t                    form.replaceWith(input);\n\t\n\t                    _this5._onCancelItem(item, response, xhr.status, headers);\n\t                    _this5._onCompleteItem(item, response, xhr.status, headers);\n\t                };\n\t\n\t                input.after(form);\n\t                form.append(input).append(iframe);\n\t\n\t                form[0].submit();\n\t                this._render();\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {File|Object} item\n\t             * @param {Object} filter\n\t             * @param {Object} options\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_onWhenAddingFileFailed',\n\t            value: function _onWhenAddingFileFailed(item, filter, options) {\n\t                this.onWhenAddingFileFailed(item, filter, options);\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {FileItem} item\n\t             */\n\t\n\t        }, {\n\t            key: '_onAfterAddingFile',\n\t            value: function _onAfterAddingFile(item) {\n\t                this.onAfterAddingFile(item);\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {Array<FileItem>} items\n\t             */\n\t\n\t        }, {\n\t            key: '_onAfterAddingAll',\n\t            value: function _onAfterAddingAll(items) {\n\t                this.onAfterAddingAll(items);\n\t            }\n\t            /**\n\t             *  Inner callback\n\t             * @param {FileItem} item\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_onBeforeUploadItem',\n\t            value: function _onBeforeUploadItem(item) {\n\t                item._onBeforeUpload();\n\t                this.onBeforeUploadItem(item);\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {FileItem} item\n\t             * @param {Number} progress\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_onProgressItem',\n\t            value: function _onProgressItem(item, progress) {\n\t                var total = this._getTotalProgress(progress);\n\t                this.progress = total;\n\t                item._onProgress(progress);\n\t                this.onProgressItem(item, progress);\n\t                this.onProgressAll(total);\n\t                this._render();\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {FileItem} item\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_onSuccessItem',\n\t            value: function _onSuccessItem(item, response, status, headers) {\n\t                item._onSuccess(response, status, headers);\n\t                this.onSuccessItem(item, response, status, headers);\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {FileItem} item\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_onErrorItem',\n\t            value: function _onErrorItem(item, response, status, headers) {\n\t                item._onError(response, status, headers);\n\t                this.onErrorItem(item, response, status, headers);\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {FileItem} item\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_onCancelItem',\n\t            value: function _onCancelItem(item, response, status, headers) {\n\t                item._onCancel(response, status, headers);\n\t                this.onCancelItem(item, response, status, headers);\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {FileItem} item\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_onCompleteItem',\n\t            value: function _onCompleteItem(item, response, status, headers) {\n\t                item._onComplete(response, status, headers);\n\t                this.onCompleteItem(item, response, status, headers);\n\t\n\t                var nextItem = this.getReadyItems()[0];\n\t                this.isUploading = false;\n\t\n\t                if (isDefined(nextItem)) {\n\t                    nextItem.upload();\n\t                    return;\n\t                }\n\t\n\t                this.onCompleteAll();\n\t                this.progress = this._getTotalProgress();\n\t                this._render();\n\t            }\n\t            /**********************\n\t             * STATIC\n\t             **********************/\n\t            /**\n\t             * Returns \"true\" if value an instance of File\n\t             * @param {*} value\n\t             * @returns {Boolean}\n\t             * @private\n\t             */\n\t\n\t        }], [{\n\t            key: 'isFile',\n\t            value: function isFile(value) {\n\t                return File && value instanceof File;\n\t            }\n\t            /**\n\t             * Returns \"true\" if value an instance of FileLikeObject\n\t             * @param {*} value\n\t             * @returns {Boolean}\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: 'isFileLikeObject',\n\t            value: function isFileLikeObject(value) {\n\t                return value instanceof FileLikeObject;\n\t            }\n\t            /**\n\t             * Returns \"true\" if value is array like object\n\t             * @param {*} value\n\t             * @returns {Boolean}\n\t             */\n\t\n\t        }, {\n\t            key: 'isArrayLikeObject',\n\t            value: function isArrayLikeObject(value) {\n\t                return isObject(value) && 'length' in value;\n\t            }\n\t            /**\n\t             * Inherits a target (Class_1) by a source (Class_2)\n\t             * @param {Function} target\n\t             * @param {Function} source\n\t             */\n\t\n\t        }, {\n\t            key: 'inherit',\n\t            value: function inherit(target, source) {\n\t                target.prototype = Object.create(source.prototype);\n\t                target.prototype.constructor = target;\n\t                target.super_ = source;\n\t            }\n\t        }]);\n\t\n\t        return FileUploader;\n\t    }();\n\t\n\t    /**********************\n\t     * PUBLIC\n\t     **********************/\n\t    /**\n\t     * Checks a support the html5 uploader\n\t     * @returns {Boolean}\n\t     * @readonly\n\t     */\n\t\n\t\n\t    FileUploader.prototype.isHTML5 = !!(File && FormData);\n\t    /**********************\n\t     * STATIC\n\t     **********************/\n\t    /**\n\t     * @borrows FileUploader.prototype.isHTML5\n\t     */\n\t    FileUploader.isHTML5 = FileUploader.prototype.isHTML5;\n\t\n\t    return FileUploader;\n\t};\n\t\n\tmodule.exports.$inject = ['fileUploaderOptions', '$rootScope', '$http', '$window', 'FileLikeObject', 'FileItem'];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular;\n\tvar copy = _angular.copy;\n\tvar isElement = _angular.isElement;\n\tvar isString = _angular.isString;\n\t\n\texports.default = function () {\n\t    var FileLikeObject = function () {\n\t        /**\r\n\t         * Creates an instance of FileLikeObject\r\n\t         * @param {File|HTMLInputElement|Object} fileOrInput\r\n\t         * @constructor\r\n\t         */\n\t\n\t        function FileLikeObject(fileOrInput) {\n\t            _classCallCheck(this, FileLikeObject);\n\t\n\t            var isInput = isElement(fileOrInput);\n\t            var fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n\t            var postfix = isString(fakePathOrObject) ? 'FakePath' : 'Object';\n\t            var method = '_createFrom' + postfix;\n\t            this[method](fakePathOrObject);\n\t        }\n\t        /**\r\n\t         * Creates file like object from fake path string\r\n\t         * @param {String} path\r\n\t         * @private\r\n\t         */\n\t\n\t\n\t        _createClass(FileLikeObject, [{\n\t            key: '_createFromFakePath',\n\t            value: function _createFromFakePath(path) {\n\t                this.lastModifiedDate = null;\n\t                this.size = null;\n\t                this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n\t                this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n\t            }\n\t            /**\r\n\t             * Creates file like object from object\r\n\t             * @param {File|FileLikeObject} object\r\n\t             * @private\r\n\t             */\n\t\n\t        }, {\n\t            key: '_createFromObject',\n\t            value: function _createFromObject(object) {\n\t                this.lastModifiedDate = copy(object.lastModifiedDate);\n\t                this.size = object.size;\n\t                this.type = object.type;\n\t                this.name = object.name;\n\t            }\n\t        }]);\n\t\n\t        return FileLikeObject;\n\t    }();\n\t\n\t    return FileLikeObject;\n\t};\n\t\n\tmodule.exports.$inject = [];\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular;\n\tvar copy = _angular.copy;\n\tvar extend = _angular.extend;\n\tvar element = _angular.element;\n\tvar isElement = _angular.isElement;\n\t\n\texports.default = function ($compile, FileLikeObject) {\n\t    var FileItem = function () {\n\t        /**\n\t         * Creates an instance of FileItem\n\t         * @param {FileUploader} uploader\n\t         * @param {File|HTMLInputElement|Object} some\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t\n\t        function FileItem(uploader, some, options) {\n\t            _classCallCheck(this, FileItem);\n\t\n\t            var isInput = isElement(some);\n\t            var input = isInput ? element(some) : null;\n\t            var file = !isInput ? some : null;\n\t\n\t            extend(this, {\n\t                url: uploader.url,\n\t                alias: uploader.alias,\n\t                headers: copy(uploader.headers),\n\t                formData: copy(uploader.formData),\n\t                removeAfterUpload: uploader.removeAfterUpload,\n\t                withCredentials: uploader.withCredentials,\n\t                disableMultipart: uploader.disableMultipart,\n\t                method: uploader.method\n\t            }, options, {\n\t                uploader: uploader,\n\t                file: new FileLikeObject(some),\n\t                isReady: false,\n\t                isUploading: false,\n\t                isUploaded: false,\n\t                isSuccess: false,\n\t                isCancel: false,\n\t                isError: false,\n\t                progress: 0,\n\t                index: null,\n\t                _file: file,\n\t                _input: input\n\t            });\n\t\n\t            if (input) this._replaceNode(input);\n\t        }\n\t        /**********************\n\t         * PUBLIC\n\t         **********************/\n\t        /**\n\t         * Uploads a FileItem\n\t         */\n\t\n\t\n\t        _createClass(FileItem, [{\n\t            key: 'upload',\n\t            value: function upload() {\n\t                try {\n\t                    this.uploader.uploadItem(this);\n\t                } catch (e) {\n\t                    this.uploader._onCompleteItem(this, '', 0, []);\n\t                    this.uploader._onErrorItem(this, '', 0, []);\n\t                }\n\t            }\n\t            /**\n\t             * Cancels uploading of FileItem\n\t             */\n\t\n\t        }, {\n\t            key: 'cancel',\n\t            value: function cancel() {\n\t                this.uploader.cancelItem(this);\n\t            }\n\t            /**\n\t             * Removes a FileItem\n\t             */\n\t\n\t        }, {\n\t            key: 'remove',\n\t            value: function remove() {\n\t                this.uploader.removeFromQueue(this);\n\t            }\n\t            /**\n\t             * Callback\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: 'onBeforeUpload',\n\t            value: function onBeforeUpload() {}\n\t            /**\n\t             * Callback\n\t             * @param {Number} progress\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: 'onProgress',\n\t            value: function onProgress(progress) {}\n\t            /**\n\t             * Callback\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             */\n\t\n\t        }, {\n\t            key: 'onSuccess',\n\t            value: function onSuccess(response, status, headers) {}\n\t            /**\n\t             * Callback\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             */\n\t\n\t        }, {\n\t            key: 'onError',\n\t            value: function onError(response, status, headers) {}\n\t            /**\n\t             * Callback\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             */\n\t\n\t        }, {\n\t            key: 'onCancel',\n\t            value: function onCancel(response, status, headers) {}\n\t            /**\n\t             * Callback\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             */\n\t\n\t        }, {\n\t            key: 'onComplete',\n\t            value: function onComplete(response, status, headers) {}\n\t            /**********************\n\t             * PRIVATE\n\t             **********************/\n\t            /**\n\t             * Inner callback\n\t             */\n\t\n\t        }, {\n\t            key: '_onBeforeUpload',\n\t            value: function _onBeforeUpload() {\n\t                this.isReady = true;\n\t                this.isUploading = true;\n\t                this.isUploaded = false;\n\t                this.isSuccess = false;\n\t                this.isCancel = false;\n\t                this.isError = false;\n\t                this.progress = 0;\n\t                this.onBeforeUpload();\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {Number} progress\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_onProgress',\n\t            value: function _onProgress(progress) {\n\t                this.progress = progress;\n\t                this.onProgress(progress);\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_onSuccess',\n\t            value: function _onSuccess(response, status, headers) {\n\t                this.isReady = false;\n\t                this.isUploading = false;\n\t                this.isUploaded = true;\n\t                this.isSuccess = true;\n\t                this.isCancel = false;\n\t                this.isError = false;\n\t                this.progress = 100;\n\t                this.index = null;\n\t                this.onSuccess(response, status, headers);\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_onError',\n\t            value: function _onError(response, status, headers) {\n\t                this.isReady = false;\n\t                this.isUploading = false;\n\t                this.isUploaded = true;\n\t                this.isSuccess = false;\n\t                this.isCancel = false;\n\t                this.isError = true;\n\t                this.progress = 0;\n\t                this.index = null;\n\t                this.onError(response, status, headers);\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_onCancel',\n\t            value: function _onCancel(response, status, headers) {\n\t                this.isReady = false;\n\t                this.isUploading = false;\n\t                this.isUploaded = false;\n\t                this.isSuccess = false;\n\t                this.isCancel = true;\n\t                this.isError = false;\n\t                this.progress = 0;\n\t                this.index = null;\n\t                this.onCancel(response, status, headers);\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_onComplete',\n\t            value: function _onComplete(response, status, headers) {\n\t                this.onComplete(response, status, headers);\n\t                if (this.removeAfterUpload) this.remove();\n\t            }\n\t            /**\n\t             * Destroys a FileItem\n\t             */\n\t\n\t        }, {\n\t            key: '_destroy',\n\t            value: function _destroy() {\n\t                if (this._input) this._input.remove();\n\t                if (this._form) this._form.remove();\n\t                delete this._form;\n\t                delete this._input;\n\t            }\n\t            /**\n\t             * Prepares to uploading\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_prepareToUploading',\n\t            value: function _prepareToUploading() {\n\t                this.index = this.index || ++this.uploader._nextIndex;\n\t                this.isReady = true;\n\t            }\n\t            /**\n\t             * Replaces input element on his clone\n\t             * @param {JQLite|jQuery} input\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_replaceNode',\n\t            value: function _replaceNode(input) {\n\t                var clone = $compile(input.clone())(input.scope());\n\t                clone.prop('value', null); // FF fix\n\t                input.css('display', 'none');\n\t                input.after(clone); // remove jquery dependency\n\t            }\n\t        }]);\n\t\n\t        return FileItem;\n\t    }();\n\t\n\t    return FileItem;\n\t};\n\t\n\tmodule.exports.$inject = ['$compile', 'FileLikeObject'];\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular;\n\tvar extend = _angular.extend;\n\t\n\texports.default = function () {\n\t    var FileDirective = function () {\n\t        /**\r\n\t         * Creates instance of {FileDirective} object\r\n\t         * @param {Object} options\r\n\t         * @param {Object} options.uploader\r\n\t         * @param {HTMLElement} options.element\r\n\t         * @param {Object} options.events\r\n\t         * @param {String} options.prop\r\n\t         * @constructor\r\n\t         */\n\t\n\t        function FileDirective(options) {\n\t            _classCallCheck(this, FileDirective);\n\t\n\t            extend(this, options);\n\t            this.uploader._directives[this.prop].push(this);\n\t            this._saveLinks();\n\t            this.bind();\n\t        }\n\t        /**\r\n\t         * Binds events handles\r\n\t         */\n\t\n\t\n\t        _createClass(FileDirective, [{\n\t            key: 'bind',\n\t            value: function bind() {\n\t                for (var key in this.events) {\n\t                    var prop = this.events[key];\n\t                    this.element.bind(key, this[prop]);\n\t                }\n\t            }\n\t            /**\r\n\t             * Unbinds events handles\r\n\t             */\n\t\n\t        }, {\n\t            key: 'unbind',\n\t            value: function unbind() {\n\t                for (var key in this.events) {\n\t                    this.element.unbind(key, this.events[key]);\n\t                }\n\t            }\n\t            /**\r\n\t             * Destroys directive\r\n\t             */\n\t\n\t        }, {\n\t            key: 'destroy',\n\t            value: function destroy() {\n\t                var index = this.uploader._directives[this.prop].indexOf(this);\n\t                this.uploader._directives[this.prop].splice(index, 1);\n\t                this.unbind();\n\t                // this.element = null;\n\t            }\n\t            /**\r\n\t             * Saves links to functions\r\n\t             * @private\r\n\t             */\n\t\n\t        }, {\n\t            key: '_saveLinks',\n\t            value: function _saveLinks() {\n\t                for (var key in this.events) {\n\t                    var prop = this.events[key];\n\t                    this[prop] = this[prop].bind(this);\n\t                }\n\t            }\n\t        }]);\n\t\n\t        return FileDirective;\n\t    }();\n\t\n\t    /**\r\n\t     * Map of events\r\n\t     * @type {Object}\r\n\t     */\n\t\n\t\n\t    FileDirective.prototype.events = {};\n\t\n\t    return FileDirective;\n\t};\n\t\n\tmodule.exports.$inject = [];\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _angular = angular;\n\tvar extend = _angular.extend;\n\t\n\texports.default = function (FileDirective) {\n\t    var FileSelect = function (_FileDirective) {\n\t        _inherits(FileSelect, _FileDirective);\n\t\n\t        /**\r\n\t         * Creates instance of {FileSelect} object\r\n\t         * @param {Object} options\r\n\t         * @constructor\r\n\t         */\n\t\n\t        function FileSelect(options) {\n\t            _classCallCheck(this, FileSelect);\n\t\n\t            var extendedOptions = extend(options, {\n\t                // Map of events\n\t                events: {\n\t                    $destroy: 'destroy',\n\t                    change: 'onChange'\n\t                },\n\t                // Name of property inside uploader._directive object\n\t                prop: 'select'\n\t            });\n\t\n\t            var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(FileSelect).call(this, extendedOptions));\n\t\n\t            if (!_this.uploader.isHTML5) {\n\t                _this.element.removeAttr('multiple');\n\t            }\n\t            _this.element.prop('value', null); // FF fix\n\t            return _this;\n\t        }\n\t        /**\r\n\t         * Returns options\r\n\t         * @return {Object|undefined}\r\n\t         */\n\t\n\t\n\t        _createClass(FileSelect, [{\n\t            key: 'getOptions',\n\t            value: function getOptions() {}\n\t            /**\r\n\t             * Returns filters\r\n\t             * @return {Array<Function>|String|undefined}\r\n\t             */\n\t\n\t        }, {\n\t            key: 'getFilters',\n\t            value: function getFilters() {}\n\t            /**\r\n\t             * If returns \"true\" then HTMLInputElement will be cleared\r\n\t             * @returns {Boolean}\r\n\t             */\n\t\n\t        }, {\n\t            key: 'isEmptyAfterSelection',\n\t            value: function isEmptyAfterSelection() {\n\t                return !!this.element.attr('multiple');\n\t            }\n\t            /**\r\n\t             * Event handler\r\n\t             */\n\t\n\t        }, {\n\t            key: 'onChange',\n\t            value: function onChange() {\n\t                var files = this.uploader.isHTML5 ? this.element[0].files : this.element[0];\n\t                var options = this.getOptions();\n\t                var filters = this.getFilters();\n\t\n\t                if (!this.uploader.isHTML5) this.destroy();\n\t                this.uploader.addToQueue(files, options, filters);\n\t                if (this.isEmptyAfterSelection()) {\n\t                    this.element.prop('value', null);\n\t                    this.element.replaceWith(this.element = this.element.clone(true)); // IE fix\n\t                }\n\t            }\n\t        }]);\n\t\n\t        return FileSelect;\n\t    }(FileDirective);\n\t\n\t    return FileSelect;\n\t};\n\t\n\tmodule.exports.$inject = ['FileDirective'];\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _angular = angular;\n\tvar extend = _angular.extend;\n\tvar forEach = _angular.forEach;\n\t\n\texports.default = function (FileDirective) {\n\t    var FileDrop = function (_FileDirective) {\n\t        _inherits(FileDrop, _FileDirective);\n\t\n\t        /**\r\n\t         * Creates instance of {FileDrop} object\r\n\t         * @param {Object} options\r\n\t         * @constructor\r\n\t         */\n\t\n\t        function FileDrop(options) {\n\t            _classCallCheck(this, FileDrop);\n\t\n\t            var extendedOptions = extend(options, {\n\t                // Map of events\n\t                events: {\n\t                    $destroy: 'destroy',\n\t                    drop: 'onDrop',\n\t                    dragover: 'onDragOver',\n\t                    dragleave: 'onDragLeave'\n\t                },\n\t                // Name of property inside uploader._directive object\n\t                prop: 'drop'\n\t            });\n\t\n\t            return _possibleConstructorReturn(this, Object.getPrototypeOf(FileDrop).call(this, extendedOptions));\n\t        }\n\t        /**\r\n\t         * Returns options\r\n\t         * @return {Object|undefined}\r\n\t         */\n\t\n\t\n\t        _createClass(FileDrop, [{\n\t            key: 'getOptions',\n\t            value: function getOptions() {}\n\t            /**\r\n\t             * Returns filters\r\n\t             * @return {Array<Function>|String|undefined}\r\n\t             */\n\t\n\t        }, {\n\t            key: 'getFilters',\n\t            value: function getFilters() {}\n\t            /**\r\n\t             * Event handler\r\n\t             */\n\t\n\t        }, {\n\t            key: 'onDrop',\n\t            value: function onDrop(event) {\n\t                var transfer = this._getTransfer(event);\n\t                if (!transfer) return;\n\t                var options = this.getOptions();\n\t                var filters = this.getFilters();\n\t                this._preventAndStop(event);\n\t                forEach(this.uploader._directives.over, this._removeOverClass, this);\n\t                this.uploader.addToQueue(transfer.files, options, filters);\n\t            }\n\t            /**\r\n\t             * Event handler\r\n\t             */\n\t\n\t        }, {\n\t            key: 'onDragOver',\n\t            value: function onDragOver(event) {\n\t                var transfer = this._getTransfer(event);\n\t                if (!this._haveFiles(transfer.types)) return;\n\t                transfer.dropEffect = 'copy';\n\t                this._preventAndStop(event);\n\t                forEach(this.uploader._directives.over, this._addOverClass, this);\n\t            }\n\t            /**\r\n\t             * Event handler\r\n\t             */\n\t\n\t        }, {\n\t            key: 'onDragLeave',\n\t            value: function onDragLeave(event) {\n\t                if (event.currentTarget === this.element[0]) return;\n\t                this._preventAndStop(event);\n\t                forEach(this.uploader._directives.over, this._removeOverClass, this);\n\t            }\n\t            /**\r\n\t             * Helper\r\n\t             */\n\t\n\t        }, {\n\t            key: '_getTransfer',\n\t            value: function _getTransfer(event) {\n\t                return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n\t            }\n\t            /**\r\n\t             * Helper\r\n\t             */\n\t\n\t        }, {\n\t            key: '_preventAndStop',\n\t            value: function _preventAndStop(event) {\n\t                event.preventDefault();\n\t                event.stopPropagation();\n\t            }\n\t            /**\r\n\t             * Returns \"true\" if types contains files\r\n\t             * @param {Object} types\r\n\t             */\n\t\n\t        }, {\n\t            key: '_haveFiles',\n\t            value: function _haveFiles(types) {\n\t                if (!types) return false;\n\t                if (types.indexOf) {\n\t                    return types.indexOf('Files') !== -1;\n\t                } else if (types.contains) {\n\t                    return types.contains('Files');\n\t                } else {\n\t                    return false;\n\t                }\n\t            }\n\t            /**\r\n\t             * Callback\r\n\t             */\n\t\n\t        }, {\n\t            key: '_addOverClass',\n\t            value: function _addOverClass(item) {\n\t                item.addOverClass();\n\t            }\n\t            /**\r\n\t             * Callback\r\n\t             */\n\t\n\t        }, {\n\t            key: '_removeOverClass',\n\t            value: function _removeOverClass(item) {\n\t                item.removeOverClass();\n\t            }\n\t        }]);\n\t\n\t        return FileDrop;\n\t    }(FileDirective);\n\t\n\t    return FileDrop;\n\t};\n\t\n\tmodule.exports.$inject = ['FileDirective'];\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _angular = angular;\n\tvar extend = _angular.extend;\n\t\n\texports.default = function (FileDirective) {\n\t    var FileOver = function (_FileDirective) {\n\t        _inherits(FileOver, _FileDirective);\n\t\n\t        /**\r\n\t         * Creates instance of {FileDrop} object\r\n\t         * @param {Object} options\r\n\t         * @constructor\r\n\t         */\n\t\n\t        function FileOver(options) {\n\t            _classCallCheck(this, FileOver);\n\t\n\t            var extendedOptions = extend(options, {\n\t                // Map of events\n\t                events: {\n\t                    $destroy: 'destroy'\n\t                },\n\t                // Name of property inside uploader._directive object\n\t                prop: 'over',\n\t                // Over class\n\t                overClass: 'nv-file-over'\n\t            });\n\t\n\t            return _possibleConstructorReturn(this, Object.getPrototypeOf(FileOver).call(this, extendedOptions));\n\t        }\n\t        /**\r\n\t         * Adds over class\r\n\t         */\n\t\n\t\n\t        _createClass(FileOver, [{\n\t            key: 'addOverClass',\n\t            value: function addOverClass() {\n\t                this.element.addClass(this.getOverClass());\n\t            }\n\t            /**\r\n\t             * Removes over class\r\n\t             */\n\t\n\t        }, {\n\t            key: 'removeOverClass',\n\t            value: function removeOverClass() {\n\t                this.element.removeClass(this.getOverClass());\n\t            }\n\t            /**\r\n\t             * Returns over class\r\n\t             * @returns {String}\r\n\t             */\n\t\n\t        }, {\n\t            key: 'getOverClass',\n\t            value: function getOverClass() {\n\t                return this.overClass;\n\t            }\n\t        }]);\n\t\n\t        return FileOver;\n\t    }(FileDirective);\n\t\n\t    return FileOver;\n\t};\n\t\n\tmodule.exports.$inject = ['FileDirective'];\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function ($parse, FileUploader, FileSelect) {\n\t\n\t    return {\n\t        link: function link(scope, element, attributes) {\n\t            var uploader = scope.$eval(attributes.uploader);\n\t\n\t            if (!(uploader instanceof FileUploader)) {\n\t                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n\t            }\n\t\n\t            var object = new FileSelect({\n\t                uploader: uploader,\n\t                element: element\n\t            });\n\t\n\t            object.getOptions = $parse(attributes.options).bind(object, scope);\n\t            object.getFilters = function () {\n\t                return attributes.filters;\n\t            };\n\t        }\n\t    };\n\t};\n\t\n\tmodule.exports.$inject = ['$parse', 'FileUploader', 'FileSelect'];\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function ($parse, FileUploader, FileDrop) {\n\t\n\t    return {\n\t        link: function link(scope, element, attributes) {\n\t            var uploader = scope.$eval(attributes.uploader);\n\t\n\t            if (!(uploader instanceof FileUploader)) {\n\t                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n\t            }\n\t\n\t            if (!uploader.isHTML5) return;\n\t\n\t            var object = new FileDrop({\n\t                uploader: uploader,\n\t                element: element\n\t            });\n\t\n\t            object.getOptions = $parse(attributes.options).bind(object, scope);\n\t            object.getFilters = function () {\n\t                return attributes.filters;\n\t            };\n\t        }\n\t    };\n\t};\n\t\n\tmodule.exports.$inject = ['$parse', 'FileUploader', 'FileDrop'];\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (FileUploader, FileOver) {\n\t\n\t    return {\n\t        link: function link(scope, element, attributes) {\n\t            var uploader = scope.$eval(attributes.uploader);\n\t\n\t            if (!(uploader instanceof FileUploader)) {\n\t                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n\t            }\n\t\n\t            var object = new FileOver({\n\t                uploader: uploader,\n\t                element: element\n\t            });\n\t\n\t            object.getOverClass = function () {\n\t                return attributes.overClass || object.overClass;\n\t            };\n\t        }\n\t    };\n\t};\n\t\n\tmodule.exports.$inject = ['FileUploader', 'FileOver'];\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** angular-file-upload.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 28fa09dee3e5703b4594\n **/","'use strict';\r\n\r\n\r\nimport CONFIG from './config.json';\r\n\r\n\r\nimport options from './values/options'\r\n\r\n\r\nimport serviceFileUploader from './services/FileUploader';\r\nimport serviceFileLikeObject from './services/FileLikeObject';\r\nimport serviceFileItem from './services/FileItem';\r\nimport serviceFileDirective from './services/FileDirective';\r\nimport serviceFileSelect from './services/FileSelect';\r\nimport serviceFileDrop from './services/FileDrop';\r\nimport serviceFileOver from './services/FileOver';\r\n\r\n\r\nimport directiveFileSelect from './directives/FileSelect';\r\nimport directiveFileDrop from './directives/FileDrop';\r\nimport directiveFileOver from './directives/FileOver';\r\n\r\n\r\nangular\r\n    .module(CONFIG.name, [])\r\n    .value('fileUploaderOptions', options)\r\n    .factory('FileUploader', serviceFileUploader)\r\n    .factory('FileLikeObject', serviceFileLikeObject)\r\n    .factory('FileItem', serviceFileItem)\r\n    .factory('FileDirective', serviceFileDirective)\r\n    .factory('FileSelect', serviceFileSelect)\r\n    .factory('FileDrop', serviceFileDrop)\r\n    .factory('FileOver', serviceFileOver)\r\n    .directive('nvFileSelect', directiveFileSelect)\r\n    .directive('nvFileDrop', directiveFileDrop)\r\n    .directive('nvFileOver', directiveFileOver)\r\n    .run([\r\n        'FileUploader',\r\n        'FileLikeObject',\r\n        'FileItem',\r\n        'FileDirective',\r\n        'FileSelect',\r\n        'FileDrop',\r\n        'FileOver',\r\n        function(FileUploader, FileLikeObject, FileItem, FileDirective, FileSelect, FileDrop, FileOver) {\r\n            // only for compatibility\r\n            FileUploader.FileLikeObject = FileLikeObject;\r\n            FileUploader.FileItem = FileItem;\r\n            FileUploader.FileDirective = FileDirective;\r\n            FileUploader.FileSelect = FileSelect;\r\n            FileUploader.FileDrop = FileDrop;\r\n            FileUploader.FileOver = FileOver;\r\n        }\r\n    ]);\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","module.exports = {\n\t\"name\": \"angularFileUpload\"\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/config.json\n ** module id = 1\n ** module chunks = 0 1\n **/","'use strict';\n\n\nexport default {\n    url: '/',\n    alias: 'file',\n    headers: {},\n    queue: [],\n    progress: 0,\n    autoUpload: false,\n    removeAfterUpload: false,\n    method: 'POST',\n    filters: [],\n    formData: [],\n    queueLimit: Number.MAX_VALUE,\n    withCredentials: false,\n    disableMultipart: false\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/values/options.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    copy,\n    extend,\n    forEach,\n    isObject,\n    isNumber,\n    isDefined,\n    isArray,\n    element\n    } = angular;\n\n\nexport default (fileUploaderOptions, $rootScope, $http, $window, FileLikeObject, FileItem) => {\n    \n    \n    let {\n        File,\n        FormData\n        } = $window;\n    \n    \n    class FileUploader {\n        /**********************\n         * PUBLIC\n         **********************/\n        /**\n         * Creates an instance of FileUploader\n         * @param {Object} [options]\n         * @constructor\n         */\n        constructor(options) {\n            var settings = copy(fileUploaderOptions);\n            \n            extend(this, settings, options, {\n                isUploading: false,\n                _nextIndex: 0,\n                _failFilterIndex: -1,\n                _directives: {select: [], drop: [], over: []}\n            });\n\n            // add default filters\n            this.filters.unshift({name: 'queueLimit', fn: this._queueLimitFilter});\n            this.filters.unshift({name: 'folder', fn: this._folderFilter});\n        }\n        /**\n         * Adds items to the queue\n         * @param {File|HTMLInputElement|Object|FileList|Array<Object>} files\n         * @param {Object} [options]\n         * @param {Array<Function>|String} filters\n         */\n        addToQueue(files, options, filters) {\n            var list = this.isArrayLikeObject(files) ? files: [files];\n            var arrayOfFilters = this._getFilters(filters);\n            var count = this.queue.length;\n            var addedFileItems = [];\n\n            forEach(list, (some /*{File|HTMLInputElement|Object}*/) => {\n                var temp = new FileLikeObject(some);\n\n                if (this._isValidFile(temp, arrayOfFilters, options)) {\n                    var fileItem = new FileItem(this, some, options);\n                    addedFileItems.push(fileItem);\n                    this.queue.push(fileItem);\n                    this._onAfterAddingFile(fileItem);\n                } else {\n                    var filter = arrayOfFilters[this._failFilterIndex];\n                    this._onWhenAddingFileFailed(temp, filter, options);\n                }\n            });\n\n            if(this.queue.length !== count) {\n                this._onAfterAddingAll(addedFileItems);\n                this.progress = this._getTotalProgress();\n            }\n\n            this._render();\n            if (this.autoUpload) this.uploadAll();\n        }\n        /**\n         * Remove items from the queue. Remove last: index = -1\n         * @param {FileItem|Number} value\n         */\n        removeFromQueue(value) {\n            var index = this.getIndexOfItem(value);\n            var item = this.queue[index];\n            if(item.isUploading) item.cancel();\n            this.queue.splice(index, 1);\n            item._destroy();\n            this.progress = this._getTotalProgress();\n        }\n        /**\n         * Clears the queue\n         */\n        clearQueue() {\n            while(this.queue.length) {\n                this.queue[0].remove();\n            }\n            this.progress = 0;\n        }\n        /**\n         * Uploads a item from the queue\n         * @param {FileItem|Number} value\n         */\n        uploadItem(value) {\n            var index = this.getIndexOfItem(value);\n            var item = this.queue[index];\n            var transport = this.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n\n            item._prepareToUploading();\n            if(this.isUploading) return;\n\n            this.isUploading = true;\n            this[transport](item);\n        }\n        /**\n         * Cancels uploading of item from the queue\n         * @param {FileItem|Number} value\n         */\n        cancelItem(value) {\n            var index = this.getIndexOfItem(value);\n            var item = this.queue[index];\n            var prop = this.isHTML5 ? '_xhr' : '_form';\n            if(item && item.isUploading) item[prop].abort();\n        }\n        /**\n         * Uploads all not uploaded items of queue\n         */\n        uploadAll() {\n            var items = this.getNotUploadedItems().filter(item => !item.isUploading);\n            if(!items.length) return;\n\n            forEach(items, item => item._prepareToUploading());\n            items[0].upload();\n        }\n        /**\n         * Cancels all uploads\n         */\n        cancelAll() {\n            var items = this.getNotUploadedItems();\n            forEach(items, item => item.cancel());\n        }\n        /**\n         * Returns \"true\" if value an instance of File\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        isFile(value) {\n            return this.constructor.isFile(value);\n        }\n        /**\n         * Returns \"true\" if value an instance of FileLikeObject\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        isFileLikeObject(value) {\n            return this.constructor.isFileLikeObject(value);\n        }\n        /**\n         * Returns \"true\" if value is array like object\n         * @param {*} value\n         * @returns {Boolean}\n         */\n        isArrayLikeObject(value) {\n            return this.constructor.isArrayLikeObject(value);\n        }\n        /**\n         * Returns a index of item from the queue\n         * @param {Item|Number} value\n         * @returns {Number}\n         */\n        getIndexOfItem(value) {\n            return isNumber(value) ? value : this.queue.indexOf(value);\n        }\n        /**\n         * Returns not uploaded items\n         * @returns {Array}\n         */\n        getNotUploadedItems() {\n            return this.queue.filter(item => !item.isUploaded);\n        }\n        /**\n         * Returns items ready for upload\n         * @returns {Array}\n         */\n        getReadyItems() {\n            return this.queue\n                .filter(item => (item.isReady && !item.isUploading))\n                .sort((item1, item2) => item1.index - item2.index);\n        }\n        /**\n         * Destroys instance of FileUploader\n         */\n        destroy() {\n            forEach(this._directives, (key) => {\n                forEach(this._directives[key], (object) => {\n                    object.destroy();\n                });\n            });\n        }\n        /**\n         * Callback\n         * @param {Array} fileItems\n         */\n        onAfterAddingAll(fileItems) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} fileItem\n         */\n        onAfterAddingFile(fileItem) {\n        }\n        /**\n         * Callback\n         * @param {File|Object} item\n         * @param {Object} filter\n         * @param {Object} options\n         */\n        onWhenAddingFileFailed(item, filter, options) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} fileItem\n         */\n        onBeforeUploadItem(fileItem) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} fileItem\n         * @param {Number} progress\n         */\n        onProgressItem(fileItem, progress) {\n        }\n        /**\n         * Callback\n         * @param {Number} progress\n         */\n        onProgressAll(progress) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onSuccessItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onErrorItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onCancelItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onCompleteItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         */\n        onCompleteAll() {\n        }\n        /**********************\n         * PRIVATE\n         **********************/\n        /**\n         * Returns the total progress\n         * @param {Number} [value]\n         * @returns {Number}\n         * @private\n         */\n        _getTotalProgress(value) {\n            if(this.removeAfterUpload) return value || 0;\n\n            var notUploaded = this.getNotUploadedItems().length;\n            var uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n            var ratio = 100 / this.queue.length;\n            var current = (value || 0) * ratio / 100;\n\n            return Math.round(uploaded * ratio + current);\n        }\n        /**\n         * Returns array of filters\n         * @param {Array<Function>|String} filters\n         * @returns {Array<Function>}\n         * @private\n         */\n        _getFilters(filters) {\n            if(!filters) return this.filters;\n            if(isArray(filters)) return filters;\n            var names = filters.match(/[^\\s,]+/g);\n            return this.filters\n                .filter(filter => names.indexOf(filter.name) !== -1);\n        }\n        /**\n         * Updates html\n         * @private\n         */\n        _render() {\n            if(!$rootScope.$$phase) $rootScope.$apply();\n        }\n        /**\n         * Returns \"true\" if item is a file (not folder)\n         * @param {File|FileLikeObject} item\n         * @returns {Boolean}\n         * @private\n         */\n        _folderFilter(item) {\n            return !!(item.size || item.type);\n        }\n        /**\n         * Returns \"true\" if the limit has not been reached\n         * @returns {Boolean}\n         * @private\n         */\n        _queueLimitFilter() {\n            return this.queue.length < this.queueLimit;\n        }\n        /**\n         * Returns \"true\" if file pass all filters\n         * @param {File|Object} file\n         * @param {Array<Function>} filters\n         * @param {Object} options\n         * @returns {Boolean}\n         * @private\n         */\n        _isValidFile(file, filters, options) {\n            this._failFilterIndex = -1;\n            return !filters.length ? true : filters.every((filter) => {\n                this._failFilterIndex++;\n                return filter.fn.call(this, file, options);\n            });\n        }\n        /**\n         * Checks whether upload successful\n         * @param {Number} status\n         * @returns {Boolean}\n         * @private\n         */\n        _isSuccessCode(status) {\n            return (status >= 200 && status < 300) || status === 304;\n        }\n        /**\n         * Transforms the server response\n         * @param {*} response\n         * @param {Object} headers\n         * @returns {*}\n         * @private\n         */\n        _transformResponse(response, headers) {\n            var headersGetter = this._headersGetter(headers);\n            forEach($http.defaults.transformResponse, (transformFn) => {\n                response = transformFn(response, headersGetter);\n            });\n            return response;\n        }\n        /**\n         * Parsed response headers\n         * @param headers\n         * @returns {Object}\n         * @see https://github.com/angular/angular.js/blob/master/src/ng/http.js\n         * @private\n         */\n        _parseHeaders(headers) {\n            var parsed = {}, key, val, i;\n\n            if(!headers) return parsed;\n\n            forEach(headers.split('\\n'), (line) => {\n                i = line.indexOf(':');\n                key = line.slice(0, i).trim().toLowerCase();\n                val = line.slice(i + 1).trim();\n\n                if(key) {\n                    parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n                }\n            });\n\n            return parsed;\n        }\n        /**\n         * Returns function that returns headers\n         * @param {Object} parsedHeaders\n         * @returns {Function}\n         * @private\n         */\n        _headersGetter(parsedHeaders) {\n            return (name) => {\n                if(name) {\n                    return parsedHeaders[name.toLowerCase()] || null;\n                }\n                return parsedHeaders;\n            };\n        }\n        /**\n         * The XMLHttpRequest transport\n         * @param {FileItem} item\n         * @private\n         */\n        _xhrTransport(item) {\n            var xhr = item._xhr = new XMLHttpRequest();\n            var sendable;\n\n            this._onBeforeUploadItem(item);\n\n            if (!item.disableMultipart) {\n                sendable = new FormData();\n                forEach(item.formData, (obj) => {\n                    forEach(obj, (value, key) => {\n                        sendable.append(key, value);\n                    });\n                });\n\n                sendable.append(item.alias, item._file, item.file.name);\n            }\n            else {\n                sendable = item._file;\n            }\n\n            if(typeof(item._file.size) != 'number') {\n                throw new TypeError('The file specified is no longer valid');\n            }\n\n            xhr.upload.onprogress = (event) => {\n                var progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n                this._onProgressItem(item, progress);\n            };\n\n            xhr.onload = () => {\n                var headers = this._parseHeaders(xhr.getAllResponseHeaders());\n                var response = this._transformResponse(xhr.response, headers);\n                var gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n                var method = '_on' + gist + 'Item';\n                this[method](item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            xhr.onerror = () => {\n                var headers = this._parseHeaders(xhr.getAllResponseHeaders());\n                var response = this._transformResponse(xhr.response, headers);\n                this._onErrorItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            xhr.onabort = () => {\n                var headers = this._parseHeaders(xhr.getAllResponseHeaders());\n                var response = this._transformResponse(xhr.response, headers);\n                this._onCancelItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            xhr.open(item.method, item.url, true);\n\n            xhr.withCredentials = item.withCredentials;\n\n            forEach(item.headers, (value, name) => {\n                xhr.setRequestHeader(name, value);\n            });\n\n            xhr.send(sendable);\n            this._render();\n        }\n        /**\n         * The IFrame transport\n         * @param {FileItem} item\n         * @private\n         */\n        _iframeTransport(item) {\n            var form = element('<form style=\"display: none;\" />');\n            var iframe = element('<iframe name=\"iframeTransport' + Date.now() + '\">');\n            var input = item._input;\n\n            if(item._form) item._form.replaceWith(input); // remove old form\n            item._form = form; // save link to new form\n\n            this._onBeforeUploadItem(item);\n\n            input.prop('name', item.alias);\n\n            forEach(item.formData, (obj) => {\n                forEach(obj, (value, key) => {\n                    var element_ = element('<input type=\"hidden\" name=\"' + key + '\" />');\n                    element_.val(value);\n                    form.append(element_);\n                });\n            });\n\n            form.prop({\n                action: item.url,\n                method: 'POST',\n                target: iframe.prop('name'),\n                enctype: 'multipart/form-data',\n                encoding: 'multipart/form-data' // old IE\n            });\n\n            iframe.bind('load', () => {\n                var html = '';\n                var status = 200;\n\n                try {\n                    // Fix for legacy IE browsers that loads internal error page\n                    // when failed WS response received. In consequence iframe\n                    // content access denied error is thrown becouse trying to\n                    // access cross domain page. When such thing occurs notifying\n                    // with empty response object. See more info at:\n                    // http://stackoverflow.com/questions/151362/access-is-denied-error-on-accessing-iframe-document-object\n                    // Note that if non standard 4xx or 5xx error code returned\n                    // from WS then response content can be accessed without error\n                    // but 'XHR' status becomes 200. In order to avoid confusion\n                    // returning response via same 'success' event handler.\n\n                    // fixed angular.contents() for iframes\n                    html = iframe[0].contentDocument.body.innerHTML;\n                } catch(e) {\n                    // in case we run into the access-is-denied error or we have another error on the server side\n                    // (intentional 500,40... errors), we at least say 'something went wrong' -> 500\n                    status = 500;\n                }\n\n                var xhr = {response: html, status: status, dummy: true};\n                var headers = {};\n                var response = this._transformResponse(xhr.response, headers);\n\n                this._onSuccessItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            });\n\n            form.abort = () => {\n                var xhr = {status: 0, dummy: true};\n                var headers = {};\n                var response;\n\n                iframe.unbind('load').prop('src', 'javascript:false;');\n                form.replaceWith(input);\n\n                this._onCancelItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            input.after(form);\n            form.append(input).append(iframe);\n\n            form[0].submit();\n            this._render();\n        }\n        /**\n         * Inner callback\n         * @param {File|Object} item\n         * @param {Object} filter\n         * @param {Object} options\n         * @private\n         */\n        _onWhenAddingFileFailed(item, filter, options) {\n            this.onWhenAddingFileFailed(item, filter, options);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         */\n        _onAfterAddingFile(item) {\n            this.onAfterAddingFile(item);\n        }\n        /**\n         * Inner callback\n         * @param {Array<FileItem>} items\n         */\n        _onAfterAddingAll(items) {\n            this.onAfterAddingAll(items);\n        }\n        /**\n         *  Inner callback\n         * @param {FileItem} item\n         * @private\n         */\n        _onBeforeUploadItem(item) {\n            item._onBeforeUpload();\n            this.onBeforeUploadItem(item);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {Number} progress\n         * @private\n         */\n        _onProgressItem(item, progress) {\n            var total = this._getTotalProgress(progress);\n            this.progress = total;\n            item._onProgress(progress);\n            this.onProgressItem(item, progress);\n            this.onProgressAll(total);\n            this._render();\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onSuccessItem(item, response, status, headers) {\n            item._onSuccess(response, status, headers);\n            this.onSuccessItem(item, response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onErrorItem(item, response, status, headers) {\n            item._onError(response, status, headers);\n            this.onErrorItem(item, response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onCancelItem(item, response, status, headers) {\n            item._onCancel(response, status, headers);\n            this.onCancelItem(item, response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onCompleteItem(item, response, status, headers) {\n            item._onComplete(response, status, headers);\n            this.onCompleteItem(item, response, status, headers);\n\n            var nextItem = this.getReadyItems()[0];\n            this.isUploading = false;\n\n            if(isDefined(nextItem)) {\n                nextItem.upload();\n                return;\n            }\n\n            this.onCompleteAll();\n            this.progress = this._getTotalProgress();\n            this._render();\n        }\n        /**********************\n         * STATIC\n         **********************/\n        /**\n         * Returns \"true\" if value an instance of File\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        static isFile(value) {\n            return (File && value instanceof File);\n        }\n        /**\n         * Returns \"true\" if value an instance of FileLikeObject\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        static isFileLikeObject(value) {\n            return value instanceof FileLikeObject;\n        }\n        /**\n         * Returns \"true\" if value is array like object\n         * @param {*} value\n         * @returns {Boolean}\n         */\n        static isArrayLikeObject(value) {\n            return (isObject(value) && 'length' in value);\n        }\n        /**\n         * Inherits a target (Class_1) by a source (Class_2)\n         * @param {Function} target\n         * @param {Function} source\n         */\n        static inherit(target, source) {\n            target.prototype = Object.create(source.prototype);\n            target.prototype.constructor = target;\n            target.super_ = source;\n        }\n    }\n\n\n    /**********************\n     * PUBLIC\n     **********************/\n    /**\n     * Checks a support the html5 uploader\n     * @returns {Boolean}\n     * @readonly\n     */\n    FileUploader.prototype.isHTML5 = !!(File && FormData);\n    /**********************\n     * STATIC\n     **********************/\n    /**\n     * @borrows FileUploader.prototype.isHTML5\n     */\n    FileUploader.isHTML5 = FileUploader.prototype.isHTML5;\n\n    \n    return FileUploader;\n}\n\n\nmodule.exports.$inject = [\n    'fileUploaderOptions', \n    '$rootScope', \n    '$http', \n    '$window',\n    'FileLikeObject',\n    'FileItem'\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileUploader.js\n **/","'use strict';\r\n\r\n\r\nimport CONFIG from './../config.json';\r\n\r\n\r\nlet {\r\n    copy,\r\n    isElement,\r\n    isString\r\n    } = angular;\r\n\r\n\r\nexport default () => {\r\n    \r\n    \r\n    class FileLikeObject {\r\n        /**\r\n         * Creates an instance of FileLikeObject\r\n         * @param {File|HTMLInputElement|Object} fileOrInput\r\n         * @constructor\r\n         */\r\n        constructor(fileOrInput) {\r\n            var isInput = isElement(fileOrInput);\r\n            var fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\r\n            var postfix = isString(fakePathOrObject) ? 'FakePath' : 'Object';\r\n            var method = '_createFrom' + postfix;\r\n            this[method](fakePathOrObject);\r\n        }\r\n        /**\r\n         * Creates file like object from fake path string\r\n         * @param {String} path\r\n         * @private\r\n         */\r\n        _createFromFakePath(path) {\r\n            this.lastModifiedDate = null;\r\n            this.size = null;\r\n            this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\r\n            this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\r\n        }\r\n        /**\r\n         * Creates file like object from object\r\n         * @param {File|FileLikeObject} object\r\n         * @private\r\n         */\r\n        _createFromObject(object) {\r\n            this.lastModifiedDate = copy(object.lastModifiedDate);\r\n            this.size = object.size;\r\n            this.type = object.type;\r\n            this.name = object.name;\r\n        }\r\n    }\r\n    \r\n    \r\n    return FileLikeObject;\r\n}\r\n\r\n\r\nmodule.exports.$inject = [\r\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileLikeObject.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    copy,\n    extend,\n    element,\n    isElement\n    } = angular;\n\n\nexport default ($compile, FileLikeObject) => {\n    \n    \n    class FileItem {\n        /**\n         * Creates an instance of FileItem\n         * @param {FileUploader} uploader\n         * @param {File|HTMLInputElement|Object} some\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(uploader, some, options) {\n            var isInput = isElement(some);\n            var input = isInput ? element(some) : null;\n            var file = !isInput ? some : null;\n\n            extend(this, {\n                url: uploader.url,\n                alias: uploader.alias,\n                headers: copy(uploader.headers),\n                formData: copy(uploader.formData),\n                removeAfterUpload: uploader.removeAfterUpload,\n                withCredentials: uploader.withCredentials,\n                disableMultipart: uploader.disableMultipart,\n                method: uploader.method\n            }, options, {\n                uploader: uploader,\n                file: new FileLikeObject(some),\n                isReady: false,\n                isUploading: false,\n                isUploaded: false,\n                isSuccess: false,\n                isCancel: false,\n                isError: false,\n                progress: 0,\n                index: null,\n                _file: file,\n                _input: input\n            });\n\n            if (input) this._replaceNode(input);\n        }\n        /**********************\n         * PUBLIC\n         **********************/\n        /**\n         * Uploads a FileItem\n         */\n        upload() {\n            try {\n                this.uploader.uploadItem(this);\n            } catch(e) {\n                this.uploader._onCompleteItem(this, '', 0, []);\n                this.uploader._onErrorItem(this, '', 0, []);\n            }\n        }\n        /**\n         * Cancels uploading of FileItem\n         */\n        cancel() {\n            this.uploader.cancelItem(this);\n        }\n        /**\n         * Removes a FileItem\n         */\n        remove() {\n            this.uploader.removeFromQueue(this);\n        }\n        /**\n         * Callback\n         * @private\n         */\n        onBeforeUpload() {\n        }\n        /**\n         * Callback\n         * @param {Number} progress\n         * @private\n         */\n        onProgress(progress) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onSuccess(response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onError(response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onCancel(response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onComplete(response, status, headers) {\n        }\n        /**********************\n         * PRIVATE\n         **********************/\n        /**\n         * Inner callback\n         */\n        _onBeforeUpload() {\n            this.isReady = true;\n            this.isUploading = true;\n            this.isUploaded = false;\n            this.isSuccess = false;\n            this.isCancel = false;\n            this.isError = false;\n            this.progress = 0;\n            this.onBeforeUpload();\n        }\n        /**\n         * Inner callback\n         * @param {Number} progress\n         * @private\n         */\n        _onProgress(progress) {\n            this.progress = progress;\n            this.onProgress(progress);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onSuccess(response, status, headers) {\n            this.isReady = false;\n            this.isUploading = false;\n            this.isUploaded = true;\n            this.isSuccess = true;\n            this.isCancel = false;\n            this.isError = false;\n            this.progress = 100;\n            this.index = null;\n            this.onSuccess(response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onError(response, status, headers) {\n            this.isReady = false;\n            this.isUploading = false;\n            this.isUploaded = true;\n            this.isSuccess = false;\n            this.isCancel = false;\n            this.isError = true;\n            this.progress = 0;\n            this.index = null;\n            this.onError(response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onCancel(response, status, headers) {\n            this.isReady = false;\n            this.isUploading = false;\n            this.isUploaded = false;\n            this.isSuccess = false;\n            this.isCancel = true;\n            this.isError = false;\n            this.progress = 0;\n            this.index = null;\n            this.onCancel(response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onComplete(response, status, headers) {\n            this.onComplete(response, status, headers);\n            if(this.removeAfterUpload) this.remove();\n        }\n        /**\n         * Destroys a FileItem\n         */\n        _destroy() {\n            if(this._input) this._input.remove();\n            if(this._form) this._form.remove();\n            delete this._form;\n            delete this._input;\n        }\n        /**\n         * Prepares to uploading\n         * @private\n         */\n        _prepareToUploading() {\n            this.index = this.index || ++this.uploader._nextIndex;\n            this.isReady = true;\n        }\n        /**\n         * Replaces input element on his clone\n         * @param {JQLite|jQuery} input\n         * @private\n         */\n        _replaceNode(input) {\n            var clone = $compile(input.clone())(input.scope());\n            clone.prop('value', null); // FF fix\n            input.css('display', 'none');\n            input.after(clone); // remove jquery dependency\n        }\n\n    }\n    \n    \n    return FileItem;\n}\n\n\nmodule.exports.$inject = [\n    '$compile',\n    'FileLikeObject'\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileItem.js\n **/","'use strict';\r\n\r\n\r\nimport CONFIG from './../config.json';\r\n\r\n\r\nlet {\r\n    extend\r\n    } = angular;\r\n\r\n\r\nexport default () => {\r\n\r\n\r\n    class FileDirective {\r\n        /**\r\n         * Creates instance of {FileDirective} object\r\n         * @param {Object} options\r\n         * @param {Object} options.uploader\r\n         * @param {HTMLElement} options.element\r\n         * @param {Object} options.events\r\n         * @param {String} options.prop\r\n         * @constructor\r\n         */\r\n        constructor(options) {\r\n            extend(this, options);\r\n            this.uploader._directives[this.prop].push(this);\r\n            this._saveLinks();\r\n            this.bind();\r\n        }\r\n        /**\r\n         * Binds events handles\r\n         */\r\n        bind() {\r\n            for(var key in this.events) {\r\n                var prop = this.events[key];\r\n                this.element.bind(key, this[prop]);\r\n            }\r\n        }\r\n        /**\r\n         * Unbinds events handles\r\n         */\r\n        unbind() {\r\n            for(var key in this.events) {\r\n                this.element.unbind(key, this.events[key]);\r\n            }\r\n        }\r\n        /**\r\n         * Destroys directive\r\n         */\r\n        destroy() {\r\n            var index = this.uploader._directives[this.prop].indexOf(this);\r\n            this.uploader._directives[this.prop].splice(index, 1);\r\n            this.unbind();\r\n            // this.element = null;\r\n        }\r\n        /**\r\n         * Saves links to functions\r\n         * @private\r\n         */\r\n        _saveLinks() {\r\n            for(var key in this.events) {\r\n                var prop = this.events[key];\r\n                this[prop] = this[prop].bind(this);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Map of events\r\n     * @type {Object}\r\n     */\r\n    FileDirective.prototype.events = {};\r\n\r\n\r\n    return FileDirective;\r\n}\r\n\r\n\r\nmodule.exports.$inject = [\r\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileDirective.js\n **/","'use strict';\r\n\r\n\r\nimport CONFIG from './../config.json';\r\n\r\n\r\nlet {\r\n    extend\r\n    } = angular;\r\n\r\n\r\nexport default (FileDirective) => {\r\n    \r\n    \r\n    class FileSelect extends FileDirective {\r\n        /**\r\n         * Creates instance of {FileSelect} object\r\n         * @param {Object} options\r\n         * @constructor\r\n         */\r\n        constructor(options) {\r\n            let extendedOptions = extend(options, {\r\n                // Map of events\r\n                events: {\r\n                    $destroy: 'destroy',\r\n                    change: 'onChange'\r\n                },\r\n                // Name of property inside uploader._directive object\r\n                prop: 'select'\r\n            });\r\n            \r\n            super(extendedOptions);\r\n            \r\n            if(!this.uploader.isHTML5) {\r\n                this.element.removeAttr('multiple');\r\n            }\r\n            this.element.prop('value', null); // FF fix\r\n        }\r\n        /**\r\n         * Returns options\r\n         * @return {Object|undefined}\r\n         */\r\n        getOptions() {\r\n        }\r\n        /**\r\n         * Returns filters\r\n         * @return {Array<Function>|String|undefined}\r\n         */\r\n        getFilters() {\r\n        }\r\n        /**\r\n         * If returns \"true\" then HTMLInputElement will be cleared\r\n         * @returns {Boolean}\r\n         */\r\n        isEmptyAfterSelection() {\r\n            return !!this.element.attr('multiple');\r\n        }\r\n        /**\r\n         * Event handler\r\n         */\r\n        onChange() {\r\n            var files = this.uploader.isHTML5 ? this.element[0].files : this.element[0];\r\n            var options = this.getOptions();\r\n            var filters = this.getFilters();\r\n\r\n            if(!this.uploader.isHTML5) this.destroy();\r\n            this.uploader.addToQueue(files, options, filters);\r\n            if(this.isEmptyAfterSelection()) {\r\n                this.element.prop('value', null);\r\n                this.element.replaceWith(this.element = this.element.clone(true)); // IE fix\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n    return FileSelect;\r\n}\r\n\r\n\r\nmodule.exports.$inject = [\r\n    'FileDirective'\r\n];\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileSelect.js\n **/","'use strict';\r\n\r\n\r\nimport CONFIG from './../config.json';\r\n\r\n\r\nlet {\r\n    extend,\r\n    forEach\r\n    } = angular;\r\n\r\n\r\nexport default (FileDirective) => {\r\n    \r\n    \r\n    class FileDrop extends FileDirective {\r\n        /**\r\n         * Creates instance of {FileDrop} object\r\n         * @param {Object} options\r\n         * @constructor\r\n         */\r\n        constructor(options) {\r\n            let extendedOptions = extend(options, {\r\n                // Map of events\r\n                events: {\r\n                    $destroy: 'destroy',\r\n                    drop: 'onDrop',\r\n                    dragover: 'onDragOver',\r\n                    dragleave: 'onDragLeave'\r\n                },\r\n                // Name of property inside uploader._directive object\r\n                prop: 'drop'\r\n            });\r\n            \r\n            super(extendedOptions);\r\n        }\r\n        /**\r\n         * Returns options\r\n         * @return {Object|undefined}\r\n         */\r\n        getOptions() {\r\n        }\r\n        /**\r\n         * Returns filters\r\n         * @return {Array<Function>|String|undefined}\r\n         */\r\n        getFilters() {\r\n        }\r\n        /**\r\n         * Event handler\r\n         */\r\n        onDrop(event) {\r\n            var transfer = this._getTransfer(event);\r\n            if(!transfer) return;\r\n            var options = this.getOptions();\r\n            var filters = this.getFilters();\r\n            this._preventAndStop(event);\r\n            forEach(this.uploader._directives.over, this._removeOverClass, this);\r\n            this.uploader.addToQueue(transfer.files, options, filters);\r\n        }\r\n        /**\r\n         * Event handler\r\n         */\r\n        onDragOver(event) {\r\n            var transfer = this._getTransfer(event);\r\n            if(!this._haveFiles(transfer.types)) return;\r\n            transfer.dropEffect = 'copy';\r\n            this._preventAndStop(event);\r\n            forEach(this.uploader._directives.over, this._addOverClass, this);\r\n        }\r\n        /**\r\n         * Event handler\r\n         */\r\n        onDragLeave(event) {\r\n            if(event.currentTarget === this.element[0]) return;\r\n            this._preventAndStop(event);\r\n            forEach(this.uploader._directives.over, this._removeOverClass, this);\r\n        }\r\n        /**\r\n         * Helper\r\n         */\r\n        _getTransfer(event) {\r\n            return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\r\n        }\r\n        /**\r\n         * Helper\r\n         */\r\n        _preventAndStop(event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        /**\r\n         * Returns \"true\" if types contains files\r\n         * @param {Object} types\r\n         */\r\n        _haveFiles(types) {\r\n            if(!types) return false;\r\n            if(types.indexOf) {\r\n                return types.indexOf('Files') !== -1;\r\n            } else if(types.contains) {\r\n                return types.contains('Files');\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n        /**\r\n         * Callback\r\n         */\r\n        _addOverClass(item) {\r\n            item.addOverClass();\r\n        }\r\n        /**\r\n         * Callback\r\n         */\r\n        _removeOverClass(item) {\r\n            item.removeOverClass();\r\n        }\r\n    }\r\n    \r\n    \r\n    return FileDrop;\r\n}\r\n\r\n\r\nmodule.exports.$inject = [\r\n    'FileDirective'\r\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileDrop.js\n **/","'use strict';\r\n\r\n\r\nimport CONFIG from './../config.json';\r\n\r\n\r\nlet {\r\n    extend\r\n    } = angular;\r\n\r\n\r\nexport default (FileDirective) => {\r\n    \r\n    \r\n    class FileOver extends FileDirective {\r\n        /**\r\n         * Creates instance of {FileDrop} object\r\n         * @param {Object} options\r\n         * @constructor\r\n         */\r\n        constructor(options) {\r\n            let extendedOptions = extend(options, {\r\n                // Map of events\r\n                events: {\r\n                    $destroy: 'destroy'\r\n                },\r\n                // Name of property inside uploader._directive object\r\n                prop: 'over',\r\n                // Over class\r\n                overClass: 'nv-file-over'\r\n            });\r\n            \r\n            super(extendedOptions);\r\n        }\r\n        /**\r\n         * Adds over class\r\n         */\r\n        addOverClass() {\r\n            this.element.addClass(this.getOverClass());\r\n        }\r\n        /**\r\n         * Removes over class\r\n         */\r\n        removeOverClass() {\r\n            this.element.removeClass(this.getOverClass());\r\n        }\r\n        /**\r\n         * Returns over class\r\n         * @returns {String}\r\n         */\r\n        getOverClass() {\r\n            return this.overClass;\r\n        }\r\n    }\r\n    \r\n    \r\n    return FileOver;\r\n}\r\n\r\n\r\nmodule.exports.$inject = [\r\n    'FileDirective'\r\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileOver.js\n **/","'use strict';\r\n\r\n\r\nimport CONFIG from './../config.json';\r\n\r\n\r\nexport default  ($parse, FileUploader, FileSelect) => {\r\n\r\n\r\n    return {\r\n        link: (scope, element, attributes) => {\r\n            var uploader = scope.$eval(attributes.uploader);\r\n\r\n            if (!(uploader instanceof FileUploader)) {\r\n                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\r\n            }\r\n\r\n            var object = new FileSelect({\r\n                uploader: uploader,\r\n                element: element\r\n            });\r\n\r\n            object.getOptions = $parse(attributes.options).bind(object, scope);\r\n            object.getFilters = () => attributes.filters;\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\n\r\nmodule.exports.$inject = [\r\n    '$parse',\r\n    'FileUploader',\r\n    'FileSelect'\r\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/FileSelect.js\n **/","'use strict';\r\n\r\n\r\nimport CONFIG from './../config.json';\r\n\r\n\r\nexport default ($parse, FileUploader, FileDrop) => {\r\n\r\n\r\n    return {\r\n        link: (scope, element, attributes) => {\r\n            var uploader = scope.$eval(attributes.uploader);\r\n\r\n            if (!(uploader instanceof FileUploader)) {\r\n                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\r\n            }\r\n\r\n            if (!uploader.isHTML5) return;\r\n\r\n            var object = new FileDrop({\r\n                uploader: uploader,\r\n                element: element\r\n            });\r\n\r\n            object.getOptions = $parse(attributes.options).bind(object, scope);\r\n            object.getFilters = () => attributes.filters;\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\n\r\nmodule.exports.$inject = [\r\n    '$parse',\r\n    'FileUploader',\r\n    'FileDrop'\r\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/FileDrop.js\n **/","'use strict';\r\n\r\n\r\nimport CONFIG from './../config.json';\r\n\r\n\r\nexport default (FileUploader, FileOver) => {\r\n\r\n\r\n    return {\r\n        link: (scope, element, attributes) => {\r\n            var uploader = scope.$eval(attributes.uploader);\r\n\r\n            if (!(uploader instanceof FileUploader)) {\r\n                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\r\n            }\r\n\r\n            var object = new FileOver({\r\n                uploader: uploader,\r\n                element: element\r\n            });\r\n\r\n            object.getOverClass = () => attributes.overClass || object.overClass;\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\n\r\nmodule.exports.$inject = [\r\n    'FileUploader',\r\n    'FileOver'\r\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/FileOver.js\n **/"],"sourceRoot":""}