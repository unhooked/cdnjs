"use strict";function pasteHtmlAtCaret(a){var b,c;if(window.getSelection){if(b=window.getSelection(),b.getRangeAt&&b.rangeCount){c=b.getRangeAt(0),c.deleteContents();var d=document.createElement("div");d.innerHTML=a;for(var e,f,g=document.createDocumentFragment();e=d.firstChild;)f=g.appendChild(e);c.insertNode(g),f&&(c=c.cloneRange(),c.setStartAfter(f),c.collapse(!0),b.removeAllRanges(),b.addRange(c))}}else document.selection&&"Control"!=document.selection.type&&document.selection.createRange().pasteHTML(a)}angular.module("ngWig",["ngwig-app-templates"]),angular.ngWig={version:"3.0.0-rc1"},angular.module("ngWig").component("ngWigEditable",{bindings:{onPaste:"=",name:"@",required:"<",editMode:"<",ngModel:"=",ngDisabled:"<"},template:'<div tabindex="-1" ng-class="{\'nw-invisible\': $ctrl.editMode}" class="nw-editor__res" contenteditable></div>',require:{ngModelController:"^ngModel"},controller:["$document","$scope","$element",function(a,b,c){var d=this,e=c.find("div");this.$onInit=function(){d.ngModelController.$render=function(){return e.html(d.ngModelController.$viewValue||"")},e.bind("blur keyup change focus click",function(){d.ngModelController.$setViewValue(e.html()),b.$applyAsync()})},e.on("paste",function(a){var b=(a.originalEvent||a).clipboardData.getData("text/plain");a.preventDefault(),d.onPaste(a,b).then(function(a){pasteHtmlAtCaret(a)})}),this.isEditorActive=function(){return e[0]===a[0].activeElement},b.$on("execCommand",function(b,c){e[0].focus();var d=a[0].selection,f=c.command,g=c.options;if(d)var h=d.createRange();if(a[0].queryCommandSupported&&!a[0].queryCommandSupported(f))throw'The command "'+f+'" is not supported';a[0].execCommand(f,!1,g),d&&(h.collapse(!1),h.select())}),b.$watch("$ctrl.ngDisabled",function(a){return e.attr("contenteditable",!a)})}]}),angular.module("ngWig").component("ngWigPlugin",{bindings:{plugin:"<",execCommand:"=",editMode:"=",disabled:"="},controller:["$scope","$element","$compile",function(a,b,c){b.replaceWith(c("<"+this.plugin.pluginName+' plugin="$ctrl.plugin"exec-command="$ctrl.execCommand"edit-mode="$ctrl.editMode"disabled="$ctrl.disabled"/>')(a))}]}),angular.module("ngWig").provider("ngWigToolbar",function(){var a={list1:{title:"Unordered List",command:"insertunorderedlist",styleClass:"list-ul"},list2:{title:"Ordered List",command:"insertorderedlist",styleClass:"list-ol"},bold:{title:"Bold",command:"bold",styleClass:"bold"},italic:{title:"Italic",command:"italic",styleClass:"italic"},link:{title:"Link",command:"createlink",styleClass:"link"}},b=["list1","list2","bold","italic","link"],c=function(){return this.command&&document.queryCommandState(this.command)};this.setButtons=function(a){if(!angular.isArray(a))throw'Argument "buttons" should be an array';b=a},this.addStandardButton=function(c,d,e,f){if(!c||!d||!e)throw'Arguments "name", "title" and "command" are required';f=f||"",a[c]={title:d,command:e,styleClass:f},b.push(c)},this.addCustomButton=function(c,d){if(!c||!d)throw'Arguments "name" and "pluginName" are required';a[c]={pluginName:d,isComplex:!0},b.push(c)},this.$get=function(){return{getToolbarButtons:function(d){var e=[];return(d||b).forEach(function(b){if(!a[b])throw'There is no "'+b+'" in your library. Possible variants: '+Object.keys(a);var d=angular.copy(a[b]);angular.isFunction(d.isActive)||(d.isActive=c),e.push(d)}),e}}}}),angular.module("ngWig").component("ngWig",{bindings:{content:"=ngModel",onPaste:"&"},templateUrl:"ng-wig/views/ng-wig.html",controller:["$scope","$element","$q","$attrs","$window","$document","ngWigToolbar",function(a,b,c,d,e,f,g){function h(a){return a.split(",").map(Function.prototype.call,String.prototype.trim)}var i=this;this.name=d.name,b.removeAttr("name"),this.required=!!d.required,this.isSourceModeAllowed=-1!==Object.keys(d).indexOf("sourceModeAllowed"),this.editMode=!1,this.toolbarButtons=g.getToolbarButtons(d.buttons&&h(d.buttons)),null==d.ngDisabled&&null==d.disabled||a.$watch(function(){return!!d.disabled},function(b){i.disabled=b,a.$broadcast("nw-disabled",b)}),this.onPastePromise=function(a,b){return d.onPaste?c.resolve(i.onPaste({$event:a,pasteContent:b})):c.resolve(b)},this.toggleEditMode=function(){i.editMode=!i.editMode,e.getSelection().removeAllRanges&&e.getSelection().removeAllRanges()},this.execCommand=function(b,c){return i.editMode?!1:void(("createlink"!==b||(c=e.prompt("Please enter the URL","http://")))&&a.$broadcast("execCommand",{command:b,options:c}))}}]}),angular.module("ngWig").config(["ngWigToolbarProvider",function(a){a.addCustomButton("formats","nw-formats-button")}]).component("nwFormatsButton",{bindings:{execCommand:"=",editMode:"=",disabled:"="},template:'<select class="nw-select" \n                           ng-model="$ctrl.format" \n                           ng-change="$ctrl.execCommand(\'formatblock\', $ctrl.format.value)" \n                           ng-options="format.name for format in $ctrl.formats" \n                           ng-disabled="$ctrl.editMode || $ctrl.disabled"></select>',controller:function(){this.formats=[{name:"Normal text",value:"p"},{name:"Header 1",value:"h1"},{name:"Header 2",value:"h2"},{name:"Header 3",value:"h3"}],this.format=this.formats[0]}}),angular.module("ngwig-app-templates",["ng-wig/views/ng-wig.html"]),angular.module("ng-wig/views/ng-wig.html",[]).run(["$templateCache",function(a){a.put("ng-wig/views/ng-wig.html",'<div class="ng-wig">\n  <ul class="nw-toolbar">\n    <li class="nw-toolbar__item" ng-repeat="button in $ctrl.toolbarButtons">\n        <div ng-if="!button.isComplex">\n          <button type="button"\n                  class="nw-button {{button.styleClass}}"\n                  title="{{button.title}}"\n                  ng-click="$ctrl.execCommand(button.command)"\n                  ng-class="{ \'nw-button--active\': isEditorActive() && button.isActive() }"\n                  ng-disabled="$ctrl.editMode || $ctrl.disabled">\n            {{ button.title }}\n          </button>\n        </div>\n        <div ng-if="button.isComplex">\n          <ng-wig-plugin\n              exec-command="$ctrl.execCommand"\n              plugin="button"\n              editMode="$ctrl.editMode"\n              disabled="$ctrl.disabled"></ng-wig-plugin>\n        </div>\n    </li><!--\n    --><li class="nw-toolbar__item">\n      <button type="button"\n              class="nw-button nw-button--source"\n              title="Edit HTML"\n              ng-class="{ \'nw-button--active\': $ctrl.editMode }"\n              ng-if="$ctrl.isSourceModeAllowed"\n              ng-click="$ctrl.toggleEditMode()"\n              ng-disabled="$ctrl.disabled">\n        Edit HTML\n      </button>\n    </li>\n  </ul>\n\n  <div class="nw-editor-container">\n    <div class="nw-editor__src-container" ng-show="$ctrl.editMode">\n      <textarea ng-model="$ctrl.content"\n                ng-required="$ctrl.required"\n                ng-disabled="$ctrl.disabled"\n                class="nw-editor__src"></textarea>\n    </div>\n    <div class="nw-editor" ng-class="{ \'nw-disabled\': $ctrl.disabled }">\n      <ng-wig-editable name="{{$ctrl.name}}"\n                       ng-required="$ctrl.required"\n                       edit-mode="$ctrl.editMode"\n                       ng-model="$ctrl.content"\n                       on-paste="$ctrl.onPastePromise"\n                       ng-disabled="$ctrl.disabled">\n      </ng-wig-editable>\n    </div>\n  </div>\n</div>\n')}]);