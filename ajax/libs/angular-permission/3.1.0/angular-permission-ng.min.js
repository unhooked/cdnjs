/**
 * angular-permission-ng
 * Extension module of angular-permission for access control within angular-route
 * @version v3.1.0 - 2016-05-15
 * @link https://github.com/Narzerus/angular-permission
 * @author Rafael Vidaurre <narzerus@gmail.com> (http://www.rafaelvidaurre.com), Blazej Krysiak
 *   <blazej.krysiak@gmail.com>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */


!function (a) {
  "use strict";
  function b(a, b, c, d, e, f) {
    "ngInject";
    a.$on("$routeChangeStart", function (a, g, h) {
      function i() {
        return angular.isDefined(g.$$route.data) && angular.isDefined(g.$$route.data.permissions)
      }

      function j() {
        c.next = g, c.current = h
      }

      function k() {
        d.broadcastPermissionAcceptedEvent()
      }

      function l(a, c) {
        d.broadcastPermissionDeniedEvent(), c.resolveRedirectState(a).then(function (a) {
          b.path(a.state).replace()
        })
      }

      if (i() && !d.areEventsDefaultPrevented()) {
        j(), d.broadcastPermissionStartEvent();
        var m = new f({
          only: g.$$route.data.permissions.only,
          except: g.$$route.data.permissions.except,
          redirectTo: g.$$route.data.permissions.redirectTo
        });
        e.authorize(m).then(function () {
          k()
        })["catch"](function (b) {
          a.preventDefault(), l(b, m)
        })
      }
    })
  }

  b.$inject = ["$rootScope", "$location", "TransitionProperties", "TransitionEvents", "Authorization", "PermissionMap"];
  var c = angular.module("permission.ng", ["permission", "ngRoute"]).run(b).name;
  a.exports = c.name
}(module || {}), function () {
  "use strict";
  function a(a, b, c, d) {
    "ngInject";
    function e() {
      return i()
    }

    function f() {
      b.$broadcast(d.permissionStart, c.next)
    }

    function g() {
      b.$broadcast(d.permissionAccepted, c.next)
    }

    function h() {
      b.$broadcast(d.permissionDenied, c.next)
    }

    function i() {
      return b.$broadcast(d.permissionStart, c.next).defaultPrevented
    }

    return a.areEventsDefaultPrevented = e, a.broadcastPermissionStartEvent = f, a.broadcastPermissionAcceptedEvent = g, a.broadcastPermissionDeniedEvent = h, a
  }

  a.$inject = ["$delegate", "$rootScope", "TransitionProperties", "TransitionEventNames"], angular.module("permission.ng").decorator("TransitionEvents", a)
}(), function () {
  "use strict";
  var a = {
    permissionStart: "$routeChangePermissionStart",
    permissionAccepted: "$routeChangePermissionAccepted",
    permissionDenied: "$routeChangePermissionDenied"
  };
  angular.module("permission.ng").value("TransitionEventNames", a)
}();
//# sourceMappingURL=angular-permission-ng.min.js.map